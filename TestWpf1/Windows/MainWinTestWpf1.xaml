<Window Name="mainWinTestWpf1"
		x:Class="TestWpf1.Windows.MainWinTestWpf1"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:data="clr-namespace:TestWpf1.Data"
		xmlns:local="clr-namespace:TestWpf1.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		DataContext="{Binding ElementName=mainWinTestWpf1}"
		Title="MainWindow"
		Width="800"
		Height="450"
		mc:Ignorable="d"
		Background="{StaticResource Normal.Window.Background}"
		>
	<Window.Resources>

		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
		<PathGeometry x:Key="TreeArrow"
				Figures="M0,0 L0,6 L6,0 z"
				/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />


		<Style x:Key="ExpandCollapseToggleStyle"
				TargetType="{x:Type ToggleButton}"
				>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="Width" Value="16" />
			<Setter Property="Height" Value="16" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border
								Width="16"
								Height="16"
								Padding="5,5,5,5"
								Background="Transparent"
								>
							<Path x:Name="ExpandPath"
									Data="{StaticResource TreeArrow}"
									Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
									Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
									>
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterX="3" CenterY="3" />
								</Path.RenderTransform>
							</Path>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="ExpandPath" Property="RenderTransform">
									<Setter.Value>
										<RotateTransform Angle="180" CenterX="3" CenterY="3" />
									</Setter.Value>
								</Setter>
								<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
								<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
								<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True" />
									<Condition Property="IsChecked" Value="True" />
								</MultiTrigger.Conditions>
								<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
								<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="TreeViewItemStyle1"
				TargetType="{x:Type TreeViewItem}"
				>
			<!-- <Setter Property="IsExpanded" Value="True"/> -->
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="Padding" Value="1,0,0,0" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="19" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander"
									IsChecked="{Binding IsExpanded,
																			RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press"
									Style="{StaticResource ExpandCollapseToggleStyle}"
									/>
							<Border x:Name="Bd"
									Grid.Column="1"
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
									>
								<ContentPresenter x:Name="PART_Header"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										ContentSource="Header"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost"
									Grid.Column="1"
									Grid.Row="1"
									Grid.ColumnSpan="2"
									/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true" />
									<Condition Property="IsSelectionActive" Value="false" />
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel />
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>



	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="50" />
		</Grid.RowDefinitions>

		<DockPanel
				Grid.Column="0"
				Grid.Row="1"
				Grid.ColumnSpan="2"
				Margin="5"
				HorizontalAlignment="Right"
				>

			<Button x:Name="BtnClear"
					Content="Clear"
					Margin="5,0,0,0"
					Width="70"
					Height="30"
					VerticalAlignment="Bottom"
					Click="BtnClear_OnClick"
					/>
					
			<Button x:Name="BtnCount"
					Content="Count"
					Margin="5,0,0,0"
					Width="70"
					Height="30"
					VerticalAlignment="Bottom"
					Click="BtnCount_OnClick"
					/>

			<Button x:Name="BtnTest"
					Content="Test"
					Margin="5,0,0,0"
					Width="70"
					Height="30"
					VerticalAlignment="Bottom"
					Click="BtnTest_OnClick"
					/>

		</DockPanel>

		<DockPanel
				Grid.Column="1"
				Grid.Row="0"
				Margin="15,5,5,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				>

			<StackPanel 
					DockPanel.Dock="Top"
					Orientation="Horizontal">
				<Label
						Width="120"
						Content="Extended Count"
						Margin="0"
						Padding="0"
						Foreground="White"
						/>
				<Label
						Content="{Binding Path=ExtendedCount, Mode=OneWay, FallbackValue=0}"
						Margin="0,0,0,0"
						Padding="0"
						Foreground="White"
						/>
			</StackPanel>

			<StackPanel 
					DockPanel.Dock="Top"
					Orientation="Horizontal">
				<Label
						Width="120"
						Content="Test Count"
						Margin="0"
						Padding="0"
						Foreground="White"
						/>
				<Label
						Content="{Binding Path=TestCount, Mode=OneWay, FallbackValue=0}"
						Margin="0,0,0,0"
						Padding="0"
						Foreground="White"
						/>
			</StackPanel>
			
			<StackPanel 
					DockPanel.Dock="Top"
					Orientation="Horizontal">
				<Label
						Width="120"
						Content="Ext Merge Count"
						Margin="0"
						Padding="0"
						Foreground="White"
						/>
				<Label
						Content="{Binding Path=ExtendedMergeCount, Mode=OneWay, FallbackValue=0}"
						Margin="0,0,0,0"
						Padding="0"
						Foreground="White"
						/>
			</StackPanel>


		</DockPanel>


		<!-- <TreeView x:Name="Tv1" -->
		<!-- 		Grid.Column="0" -->
		<!-- 		Grid.Row="0" -->
		<!-- 		DataContext="{Binding Source={x:Static data:SampleData.Root}}" -->
		<!-- 		d:DataContext="{Binding Source={x:Static data:SampleData.Root}}" -->
		<!-- 		Background="Transparent" -->
		<!-- 		ItemContainerStyle="{StaticResource TreeViewItemStyle1}" -->
		<!-- 		ItemsSource="{Binding ChildNodes}" -->
		<!-- 		> -->
		<!-- 	<TreeView.ItemTemplate> -->
		<!-- 		<HierarchicalDataTemplate ItemsSource="{Binding ChildNodes}"> -->
		<!-- 			<DockPanel> -->
		<!-- 				<Label -->
		<!-- 						Content="{Binding Name}" -->
		<!-- 						Margin="0" -->
		<!-- 						Padding="0" -->
		<!-- 						Foreground="White" -->
		<!-- 						> -->
		<!-- 				</Label> -->
		<!-- 			</DockPanel> -->
		<!-- 		</HierarchicalDataTemplate> -->
		<!-- 	</TreeView.ItemTemplate> -->
		<!-- </TreeView> -->

		
		<TreeView x:Name="Tv1"
				Grid.Column="0"
				Grid.Row="0"
				DataContext="{Binding Source={x:Static local:MainWinTestWpf1.Sd}, Path=TreeRoot}"
				d:DataContext="{Binding Source={x:Static local:MainWinTestWpf1.Sd}, Path=Root}"
				Background="Transparent"
				ItemContainerStyle="{StaticResource TreeViewItemStyle1}"
				ItemsSource="{Binding Path=ChildNodes}"
		>
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding ChildNodes}">
					<DockPanel>
						<Label
								Content="{Binding ExtCount}"
								Margin="10,0,0,0"
								Padding="0"
								Foreground="White"
								/>

						<Label
								Content="{Binding ExtMergeCount}"
								Margin="10,0,0,0"
								Padding="0"
								Foreground="White"
								/>
								
						<Label
								Content="{Binding ExtData.MergeCount}"
								Margin="10,0,0,0"
								Padding="0"
								Foreground="White"
								/>

						<Label
								Content="{Binding Name}"
								Margin="10,0,0,0"
								Padding="0"
								Foreground="White"
						>
						</Label>
					</DockPanel>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>

	</Grid>
</Window>
