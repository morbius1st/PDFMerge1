<Window
		x:Class="ClassifierEditor.Windows.WinClassifyTest"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:ClassifierEditor.Windows"
		xmlns:convert="clr-namespace:AndyShared.Support"
		xmlns:m="clr-namespace:AndyResources.XamlResources"
		xmlns:mergeSupport="clr-namespace:AndyShared.MergeSupport"
		xmlns:node="clr-namespace:AndyShared.ClassificationDataSupport.TreeSupport"
		xmlns:sample="clr-namespace:ClassifierEditor.SampleData"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Title="Classify Confirmation"
		Width="600"
		Height="1000"
		MinWidth="600"
		MinHeight="800"
		DataContext="{Binding ElementName=WinClassfTest}"
		mc:Ignorable="d"
		FontFamily="Tahoma"
		FontSize="12"
		Background="{DynamicResource Window.Background}"
		WindowStartupLocation="CenterOwner"
		ShowInTaskbar="True"
		Closing="WinClassfTest_Closing"
		Initialized="WinClassfTest_Initialized"
		Loaded="WinClassfTest_Loaded"
		>

	<Window.Resources>
		<ResourceDictionary>

			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles\XamlResources\ClassificationTreeResources.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<!--#region > UI decorations and data-->

			<SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF" />
			<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF" />
			<SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000" />
			<SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD" />
			<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF" />
			<SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000" />
			<SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC" />
			<SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6" />
			<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070" />
			<SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF555555" />
			<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333" />
			
			
			<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
			<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
			
			<SolidColorBrush x:Key="ListBox.Disabled.Border2" Color="#FFD9D9D9" />

			<Style x:Key="TextBox.Base"
					TargetType="TextBox"
			>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>
			
			<Style x:Key="TextBox.Setting.Value"
					TargetType="TextBox"
					BasedOn="{StaticResource TextBox.Base}"
			>
				<Setter Property="Padding" Value="8,0,8,1" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="{StaticResource True.White}" />
					</Setter.Value>
				</Setter>
			</Style>

			<!--#endregion-->

			<!--#region > removed  -->


			<!-- <convert:MultiBoolOr x:Key="BoolOr" /> -->
			<!-- <convert:EqualsToBool x:Key="Equals" /> -->
			<!-- <convert:Int32Comparison x:Key="IntCompare" /> -->
			<!-- -->
			<!-- <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" /> -->
			<!-- <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" /> -->
			<!-- <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" /> -->
			<!-- -->
			<!-- <SolidColorBrush x:Key="Path.Plus.Fill">Lime</SolidColorBrush> -->
			<!-- <SolidColorBrush x:Key="Path.Plus.Star.Fill" Color="{m:XmalColor R=255, B=0, G=48}" /> -->
			<!-- <SolidColorBrush x:Key="Path.Plus.Star.Fill2" Color="OrangeRed" /> -->
			<!-- -->			
			<!-- <SolidColorBrush x:Key="ListBox.Disabled.Border3" Color="#FFD9D9D9" /> -->
			<!-- -->
			<!-- <PathGeometry x:Key="TreeArrow" -->
			<!-- 		Figures="M0,0 L0,6 L6,0 z" -->
			<!-- 		/> -->
			<!-- -->
			<!-- <sys:Double x:Key="BkMrkItemHeight">20</sys:Double> -->
			<!-- <sys:Double x:Key="BkMrkIconWidthDbl">20</sys:Double> -->
			<!-- <sys:Double x:Key="BkMrkItemRowHeightDbl">26</sys:Double> -->
			<!-- <sys:Double x:Key="ListView.Item.Star.Height">10</sys:Double> -->
			<!-- <sys:Double x:Key="ListView.Item.Star.Width">11</sys:Double> -->
			<!-- -->
			<!-- <GridLength x:Key="BkMrkItemRowHeight">30</GridLength> -->
			<!-- <GridLength x:Key="BkMrkIconWidth">25</GridLength> -->
			<!-- -->
			<!-- <Thickness x:Key="Listview.ItemList.Margin" -->
			<!-- 		Bottom="5" -->
			<!-- 		Left="0" -->
			<!-- 		Right="0" -->
			<!-- 		Top="0" -->
			<!-- 		/> -->
			<!-- -->
			<!-- -->
			<!-- <Style x:Key="Lable.Root" -->
			<!-- 		TargetType="Label" -->
			<!-- 		> -->
			<!-- 	<Setter Property="VerticalAlignment" Value="Center" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Left" /> -->
			<!-- 	<Setter Property="Margin" Value="0" /> -->
			<!-- 	<Setter Property="Padding" Value="0" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Label.Base" -->
			<!-- 		TargetType="{x:Type Label}" -->
			<!-- 		BasedOn="{StaticResource Lable.Root}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Background" Value="Transparent" /> -->
			<!-- 	<Setter Property="Foreground" Value="White" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Label.Settings.Title" -->
			<!-- 		TargetType="Label" -->
			<!-- 		BasedOn="{StaticResource Label.Base}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Padding" Value="10,0,10,1" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Label.BookMark.Title" -->
			<!-- 		TargetType="Label" -->
			<!-- 		BasedOn="{StaticResource Label.Base}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Margin" Value="5,0,0,2" /> -->
			<!-- 	<Setter Property="Padding" Value="5,0,0,0" /> -->
			<!-- 	<Setter Property="FontSize" Value="13" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Stretch" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- -->

			<!-- -->
			<!-- <Style x:Key="Border.Settings.Base" -->
			<!-- 		TargetType="Border" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Margin" Value="0" /> -->
			<!-- 	<Setter Property="Padding" Value="0" /> -->
			<!-- 	<Setter Property="VerticalAlignment" Value="Center" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Left" /> -->
			<!-- 	<Setter Property="CornerRadius" Value="3" /> -->
			<!-- 	<Setter Property="BorderThickness" Value="0" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Border.Settings.Title" -->
			<!-- 		TargetType="Border" -->
			<!-- 		BasedOn="{StaticResource Border.Settings.Base}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Stretch" /> -->
			<!-- 	<Setter Property="BorderBrush" Value="{StaticResource Label.Status.Title.Background}" /> -->
			<!-- 	<Setter Property="Background" Value="{StaticResource Label.Status.Title.Background}" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Border.Settings.Button" -->
			<!-- 		TargetType="Border" -->
			<!-- 		BasedOn="{StaticResource Border.Settings.Base}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" /> -->
			<!-- 	<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" /> -->
			<!-- 	<Setter Property="Margin" Value="5,0,0,0" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Path.BookMark.Icon" -->
			<!-- 		TargetType="Path" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Margin" Value="4.0" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Center" /> -->
			<!-- 	<Setter Property="VerticalAlignment" Value="Center" /> -->
			<!-- 	<Setter Property="Fill" Value="{StaticResource Path.Plus.Fill}" /> -->
			<!-- 	<Setter Property="Data" Value="{StaticResource Icon.Svg.SelectFolder}" /> -->
			<!-- 	<Setter Property="SnapsToDevicePixels" Value="True" /> -->
			<!-- 	<Setter Property="Stretch" Value="UniformToFill" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- -->
			<!-- <Style x:Key="Border.BookMark.Base" -->
			<!-- 		TargetType="Border" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Height" Value="{StaticResource BkMrkItemHeight}" /> -->
			<!-- 	<Setter Property="Padding" Value="0" /> -->
			<!-- 	<Setter Property="VerticalAlignment" Value="Center" /> -->
			<!-- 	<Setter Property="CornerRadius" Value="4" /> -->
			<!-- 	<Setter Property="SnapsToDevicePixels" Value="True" /> -->
			<!-- 	<Setter Property="BorderThickness" Value="0" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- <Style x:Key="Border.BookMark.Title" -->
			<!-- 		TargetType="Border" -->
			<!-- 		BasedOn="{StaticResource Border.BookMark.Base}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Margin" Value="0,3,0,3" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Stretch" /> -->
			<!-- 	<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" /> -->
			<!-- 	<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" /> -->
			<!-- </Style> -->
			<!-- -->
			<!-- -->
			<!-- <Style x:Key="Border.BookMark.Icon" -->
			<!-- 		TargetType="Border" -->
			<!-- 		BasedOn="{StaticResource Border.BookMark.Base}" -->
			<!-- 		> -->
			<!-- 	<Setter Property="Width" Value="{StaticResource BkMrkIconWidthDbl}" /> -->
			<!-- 	<Setter Property="Margin" Value="3" /> -->
			<!-- 	<Setter Property="HorizontalAlignment" Value="Center" /> -->
			<!-- 	<Setter Property="Background" Value="{StaticResource Element.Icon.Background.Normal}" /> -->
			<!-- 	<Setter Property="BorderBrush" Value="{StaticResource Element.Title.Background.Normal}" /> -->
			<!-- </Style> -->
			
			<!--#endregion -->

			<!--#region > ExpanderDownHeaderStyle  -->

			<Style x:Key="ExpanderDownHeaderStyle"
					TargetType="{x:Type ToggleButton}"
			>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}">
								<Grid
										Background="Transparent"
										SnapsToDevicePixels="False"
								>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Ellipse x:Name="circle"
											Width="19"
											Height="19"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Fill="{StaticResource Expander.Static.Circle.Fill}"
											Stroke="{StaticResource Expander.Static.Circle.Stroke}"
									/>
									<!--  Data="M 1,1.5 L 4.5,5 L 8,1.5"  -->
									<Path x:Name="arrow"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="M 1,4.5  L 4.5,1  L 8,4.5"
											SnapsToDevicePixels="false"
											Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
											StrokeThickness="2"
									/>
									<ContentPresenter x:Name="Cp01"
											Grid.Column="1"
											Margin="4,0,0,0"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Center"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="True"
									/>
								</Grid>
							</Border>
							<!-- <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" /> -->
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="arrow" Property="Data" Value="M 1,1.5 L 4.5,5 L 8,1.5" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
									<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
									<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
									<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
									<Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
									<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
									<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
									<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--#endregion -->

			<!--#region > expander style exp1_style-->

			<Style x:Key="Exp1_Style"
					TargetType="{x:Type Expander}"
			>

				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Expander}">
							<Border
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									CornerRadius="3"
									SnapsToDevicePixels="true"
							>
								<DockPanel HorizontalAlignment="Stretch">
									<ToggleButton x:Name="HeaderSite"
											Content="{TemplateBinding Header}"
											Margin="0"
											MinWidth="0"
											MinHeight="0"
											Padding="{TemplateBinding Padding}"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											FontFamily="{TemplateBinding FontFamily}"
											FontSize="{TemplateBinding FontSize}"
											FontStretch="{TemplateBinding FontStretch}"
											FontStyle="{TemplateBinding FontStyle}"
											FontWeight="{TemplateBinding FontWeight}"
											Foreground="{TemplateBinding Foreground}"
											IsChecked="{Binding IsExpanded,
																					Mode=TwoWay,
																					RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
											DockPanel.Dock="Top"
											FocusVisualStyle="{x:Null}"
											Style="{StaticResource ExpanderDownHeaderStyle}"
											ContentTemplate="{TemplateBinding HeaderTemplate}"
									/>
									<!--  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"  -->
									<ContentPresenter x:Name="ExpandSite"
											Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											DockPanel.Dock="Bottom"
											Focusable="false"
											Visibility="Collapsed"
									/>
								</DockPanel>
							</Border>
							<ControlTemplate.Triggers>
								<DataTrigger Value="true" Binding="{Binding ShowNonApplicableFiles}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>


								<Trigger Property="IsExpanded" Value="true">
									<Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
								</Trigger>
								<!-- <Trigger Property="ExpandDirection" Value="Right"> -->
								<!-- 	<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" /> -->
								<!-- </Trigger> -->
								<!-- <Trigger Property="ExpandDirection" Value="Up"> -->
								<!-- 	<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" /> -->
								<!-- </Trigger> -->
								<!-- <Trigger Property="ExpandDirection" Value="Left"> -->
								<!-- 	<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" /> -->
								<!-- </Trigger> -->
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--#endregion -->

			<!--#region > listview Lv1_LvStyle  -->

			<Style x:Key="Lv1_LvStyle"
					TargetType="{x:Type ListView}"
			>
				<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Visibility" Value="Visible" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListView}">
							<Border x:Name="Bd"
									Padding="1"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
							>
								<ScrollViewer
										Padding="{TemplateBinding Padding}"
										Focusable="false"
										Template="{DynamicResource ScrollViewerControlTemplate1}"
								>
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</ScrollViewer>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="HasItems" Value="False">
									<Setter Property="Visibility" Value="Collapsed">
									</Setter>
								</Trigger>


								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border2}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsGrouping" Value="true" />
										<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
									</MultiTrigger.Conditions>
									<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<!--#endregion -->

		</ResourceDictionary>
	</Window.Resources>


	<!--#region > main UI-->

	<Grid>

		<Grid.RowDefinitions>
			<!--  0  -->
			<RowDefinition Height="Auto" />
			<!--  1  -->
			<RowDefinition Height="Auto" />
			<!--  2  -->
			<RowDefinition Height="Auto" />
			<!--  3  -->
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<!--  5  -->
			<!--  4  non-applicable files  -->
			<RowDefinition Height="Auto" />

			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel x:Name="SpHeader"
				Grid.Column="0"
				Grid.Row="0"

				Margin="5,0,0,0"
				Orientation="Vertical"
		>

			<Label x:Name="Label10"
					Content="Validate Classifications against Sample Files"
					Margin="0,0,0,1"
					Padding="5,3,0,5"
					VerticalAlignment="Top"
					FontSize="14"
					Background="{StaticResource Win.Title.Background}"
					Foreground="White"
					DockPanel.Dock="Top"
			/>

			<Label x:Name="Label21"
					Content="{Binding TreeViewTitle,
														FallbackValue='Title'}"
					Margin="5,5,5,0"
					Padding="2,1,2,2"
					VerticalAlignment="Bottom"
					FontSize="14"
					Background="{StaticResource Win.Title.Background}"
					Foreground="White"
					DockPanel.Dock="Top"
			/>

			<Label x:Name="Label22"
					Content="{Binding TestFileDescription,
														FallbackValue='Description'}"
					Margin="5,5,5,0"
					Padding="2,1,2,2"
					VerticalAlignment="Bottom"
					FontSize="12"
					Background="{StaticResource Win.Title.Background}"
					Foreground="White"
					DockPanel.Dock="Bottom"
			/>

			<ProgressBar x:Name="Pb1"
					Margin="5,3,5,0"
					Height="2"
					HorizontalAlignment="Stretch"
					VerticalAlignment="top"
					HorizontalContentAlignment="Stretch"
					Background="Transparent"
					BorderThickness="0"
					Maximum="{Binding Pb1MaximumValue}"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
			/>

		</StackPanel>

		<DockPanel
				Grid.Column="0"
				Grid.Row="6"
				Margin="5"
				HorizontalAlignment="Stretch"
				>


			<Button x:Name="BtnTest2"
					Content="Test"
					Margin="0,5,0,5"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					DockPanel.Dock="Top"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnTest_OnClick"
					>
				<Button.Style>
					<Style
							TargetType="Button"
							BasedOn="{StaticResource Button.Normal.Style}"
							>
					</Style>
				</Button.Style>
				<Button.Triggers>
					<EventTrigger
							RoutedEvent="Button.Click"
							SourceName="BtnTest2"
							>
						<BeginStoryboard Name="BtnTestStoryBoard">
							<Storyboard>
								<BooleanAnimationUsingKeyFrames
										Storyboard.TargetName="BtnTest2"
										Storyboard.TargetProperty="IsEnabled"
										>
									<DiscreteBooleanKeyFrame
											Value="False"
											KeyTime="00:00:00.0"
											/>
								</BooleanAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard>

					</EventTrigger>
				</Button.Triggers>
			</Button>

			<Button x:Name="BtnDone"
					Content="Done"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					DockPanel.Dock="right"
					Style="{StaticResource Button.Normal.Style}"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnDone_OnClick"
					/>

			<Button x:Name="BtnExpand"
					Content="{Binding ExpCollapseState,
														FallbackValue='exp/collapse'}"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					FontSize="11"
					DockPanel.Dock="right"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnExpand_OnClick"
					>
				<Button.Style>
					<Style
							TargetType="Button"
							BasedOn="{StaticResource Button.Normal.Style}"
							>
					</Style>
				</Button.Style>
			</Button>

			<Button x:Name="BtnReport"
					Content="Report"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					DockPanel.Dock="right"
					Style="{StaticResource Button.Normal.Style}"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnReport_OnClick"
					/>

			<Button x:Name="BtnDebug"
					Content="Debug"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					DockPanel.Dock="right"
					Style="{StaticResource Button.Normal.Style}"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnDebug_OnClick"
					/>

		</DockPanel>

		<TextBox
				Grid.Column="0"
				Grid.Row="7"
				Grid.ColumnSpan="2"
				MaxHeight="280"
				Background="Transparent"
				Foreground="White"
				HorizontalScrollBarVisibility="Visible"
				Text="{Binding Tbx1Message,
											 Mode=OneWay,
											 FallbackValue='{x:Null}'}"
				VerticalScrollBarVisibility="Visible"
				>
			<TextBox.Resources>

				<Style TargetType="{x:Type ScrollViewer}">
					<Setter Property="Template" Value="{DynamicResource ScrollViewerControlTemplate1}">
					</Setter>
				</Style>

			</TextBox.Resources>

			<TextBox.Style>
				<Style TargetType="TextBox">
					<Setter Property="Visibility" Value="Visible" />
					<Style.Triggers>
						<Trigger Property="Text" Value="">
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
					</Style.Triggers>
				</Style>

			</TextBox.Style>
		</TextBox>

		<Expander x:Name="Exp1"
				Grid.Column="0"
				Grid.Row="5"
				Margin="5,0,5,0"
				MaxHeight="180"
				Padding="-1"
				HorizontalAlignment="Stretch"
				IsExpanded="true"
				ExpandDirection="Down"
				Visibility="Visible"
				Style="{DynamicResource Exp1_Style}"
				>

			<Expander.Header>
				<DockPanel HorizontalAlignment="Stretch">
					<Label x:Name="Label24"
							Content="{Binding NonApplicableFilesDescription,
																FallbackValue='count'}"
							Margin="0,0,-1,0"
							Padding="5,1,2,2"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center"
							HorizontalContentAlignment="Stretch"
							FontSize="14"
							Background="{StaticResource Win.Title.Background}"
							Foreground="White"
							/>
				</DockPanel>
			</Expander.Header>

			<!--  non-applicable items  -->
			<ListView x:Name="Lv3"
					Margin="0,5,0,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					DataContext="{Binding Path=Classify.NonApplicableFiles}"
					d:DataContext="{Binding Source={x:Static sample:SampleData.NonApplicableFiles}}"
					Background="Transparent"
					ScrollViewer.CanContentScroll="False"
					ScrollViewer.HorizontalScrollBarVisibility="Visible"
					ScrollViewer.VerticalScrollBarVisibility="Visible"
					ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
					ItemsSource="{Binding}"
					Style="{DynamicResource Lv1_LvStyle}"
					>


				<ListView.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<Label
									Content="{Binding Key}"
									Grid.Column="0"
									Grid.Row="0"
									Padding="0"
									ContentStringFormat="Building {0}"
									DockPanel.Dock="Top"
									Style="{StaticResource Label.BookMark.Title}"
									/>

							<!--  part of Lv3 / non-applicable items  -->
							<ListView x:Name="Lv4_lv3"
									Grid.Column="0"
									Grid.Row="1"
									Background="Transparent"
									BorderThickness="0"
									IsTabStop="False"
									DockPanel.Dock="Bottom"
									Focusable="False"
									ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
									ItemsSource="{Binding Value}"
									>

								<ListView.ItemTemplate>
									<DataTemplate>
										<Grid
												Margin="10,0,0,0"
												HorizontalAlignment="Stretch"
												VerticalAlignment="Stretch"
												>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="24" />
												<ColumnDefinition
														Width="Auto"
														MinWidth="100"
														/>
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="*" />
											</Grid.RowDefinitions>
											<Path
													Grid.Column="0"
													Grid.Row="0"
													Margin="0,0,10,0"
													Width="{StaticResource ListView.Item.Star.Width}"
													Height="{StaticResource ListView.Item.Star.Height}"
													Data="{StaticResource Icon.Svg.Star}"
													Fill="{StaticResource Path.Plus.Star.Fill}"
													RenderTransformOrigin="0.5,0.5"
													Stretch="UniformToFill"
													StrokeThickness="0"
													>
												<!--  Data="M 0,0 4,8 8,0 z"  -->
												<!-- <Path.RenderTransform> -->
												<!-- 	<RotateTransform Angle="270" CenterX="0" CenterY="0" /> -->
												<!-- </Path.RenderTransform> -->
											</Path>

											<Label
													Content="{Binding FileNameObject.SheetNumber}"
													Grid.Column="1"
													Grid.Row="0"
													Margin="0,0,5,0"
													Padding="0"
													Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																							 Path=Foreground}"
													Style="{StaticResource Label.Base}"
													/>

											<Label
													Content="{Binding FileNameObject.SheetTitle}"
													Grid.Column="2"
													Grid.Row="0"
													Margin="0,0,5,0"
													Padding="0"
													Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																							 Path=Foreground}"
													Style="{StaticResource Label.Base}"
													/>

										</Grid>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>

			</ListView>


		</Expander>

		<StackPanel x:Name="SpData"
				Grid.Column="0"
				Grid.Row="4"
				Orientation="Vertical"
				>
			<DockPanel Margin="0">

				<Border Style="{StaticResource Border.Settings.Title}">

					<Label x:Name="Label31"
							Content="Sheet Organization File"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">

					<TextBox x:Name="tbx32"
							HorizontalAlignment="Stretch"
							DataContext="{Binding ElementName=WinClassfTest,
																		Path=ClassificationFile.FileName,
																		FallbackValue='file'}"
							d:DataContext="{Binding Source={x:Static sample:SampleData.FullFilePath}}"
							IsReadOnly="True"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding Mode=OneWay}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>

			</DockPanel>

			<DockPanel Margin="0,5,0,0">

				<Border Style="{StaticResource Border.Settings.Title}">

					<Label x:Name="Label36"
							Content="Sheet Sample File Path"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx34"
							HorizontalAlignment="Stretch"
							IsReadOnly="True"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=ClassificationFile.SampleFileName,
														 Mode=OneWay,
														 FallbackValue='file'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<DockPanel Margin="0,5,0,0">

				<Border Style="{StaticResource Border.Settings.Title}">
					<Label x:Name="Label38"
							Content="Sheet Sample File Building"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx38"
							IsReadOnly="True"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=PhaseBuilding,
														 Mode=OneWay,
														 FallbackValue='building'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<!-- hidden -->
			<DockPanel
					Margin="0,5,0,0"
					Visibility="Collapsed"
					>

				<Border Style="{StaticResource Border.Settings.Title}">
					<Label x:Name="Label40"
							Content="Is Configured"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx40"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=IsConfigured,
														 Mode=OneWay,
														 FallbackValue='true'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>


		</StackPanel>

		<TreeView x:Name="Tv1"
				Grid.Column="0"
				Grid.Row="3"

				Margin="5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				DataContext="{Binding Path=BaseOfTree}"
				d:DataContext="{x:Static sample:SampleData.TreeBase}"
				Background="Transparent"
				Foreground="White"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Visibility="Visible"
				ItemContainerStyle="{StaticResource Tv1_ItemContainerStyle}"
				ItemTemplate="{StaticResource Tv1_ItemTemplate}"
				ItemsSource="{Binding ChildrenView}"
				Style="{StaticResource Tv1_TvStyle}"
		/>

	</Grid>

	<!--#endregion-->

</Window>
