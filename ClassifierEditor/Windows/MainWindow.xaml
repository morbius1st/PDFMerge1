<Window
		x:Class="ClassifierEditor.Windows.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:custom="clr-namespace:ClassifierEditor.Windows.Support"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:ClassifierEditor.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:tree="clr-namespace:ClassifierEditor.NumberComponent"
		x:Name="MainWin"
		Title="MainWindow"
		Width="900"
		Height="650"
		FontFamily="Tahoma"
		FontSize="12"
		d:UseSampleData="True"
		Loaded="Window_Loaded"
		mc:Ignorable="d"
		Background="{DynamicResource Brush.Window.Background}"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/ScrollBar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/ExpanderCheckBox.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<local:DetailRowTemplateSelector x:Key="Drx" />

			<sys:Double x:Key="Dg.Row.Height">24</sys:Double>

			<!--
			use this resource to change the item highlight color throughout the window

			<SolidColorBrush
				x:Key="{x:Static SystemColors.HighlightBrushKey}"
				Color="{DynamicResource Blue.100}"
				/>-->

			<Color x:Key="Datagrid.Row.Selected">#FF003554</Color>

			<Color x:Key="Window.Background">#FF222222</Color>
			<Color x:Key="TreeView.Background">#FF212121</Color>


			<SolidColorBrush x:Key="ScrollBarBkg" Color="#222222" />
			<SolidColorBrush x:Key="Win.Title.Background" Color="{StaticResource Gray.250}" />
			<SolidColorBrush x:Key="Grid.Line" Color="LightSkyBlue" />

			<SolidColorBrush x:Key="Brush.TreeView.Background" Color="{StaticResource TreeView.Background}"/>
			<SolidColorBrush x:Key="Brush.Window.Background" Color="{StaticResource Window.Background}"/>

			<Style
					x:Key="ColumnHeaderStyle1"
					TargetType="DataGridColumnHeader"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="{StaticResource Grid.Line}" />
				<Setter Property="BorderThickness" Value="0,0,0,1" />
				<!--  TargetType="{x:Type DataGridColumnHeader}"  -->
				<Setter Property="Margin" Value="0,0,0,0" />

			</Style>

			<Style
					x:Key="CellStyleBase"
					TargetType="DataGridCell"
					>
				<!--  TargetType="{x:Type DataGridCell}"  -->
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Margin" Value="10,0,10,0" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<!--<Setter Property="MinHeight" Value="24" />-->

			</Style>

			<Style
					x:Key="CellStyleValue"
					TargetType="DataGridCell"
					BasedOn="{StaticResource CellStyleBase}"
					>
				<Setter Property="Margin" Value="5,0,5,0">
				</Setter>
			</Style>

			<Style
					x:Key="CellStyleNarrow"
					TargetType="DataGridCell"
					BasedOn="{StaticResource CellStyleBase}"
					>
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Margin" Value="0,0,0,0" />
				<Setter Property="Padding" Value="0" />
			</Style>

			<Style
					x:Key="EditTbxStyle1"
					TargetType="TextBox"
					>
				<!-- <Setter Property="Margin" Value="0,2,5,2"/> -->
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Background" Value="{StaticResource Edit.TextBox.Background}" />
			</Style>



			<Style
					x:Key="DataGridRowStyle"
					TargetType="{x:Type DataGridRow}"
					>
				<!--  TargetType="{x:Type DataGridRow}"  -->
				<Setter Property="MinHeight" Value="{StaticResource Dg.Row.Height}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource Grid.Line}" />
				<Setter Property="BorderThickness" Value="1,0,1,1" />
				<Setter Property="Margin" Value="0,0,0,0" />
				<Setter Property="Padding" Value="0,0,0,0" />
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate
								x:Name="Rowtemplate"
								TargetType="{x:Type DataGridRow}"
								>
							<Border
									x:Name="DGR_Border"
									SnapsToDevicePixels="True"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<SelectiveScrollingGrid x:Name="selectiveScrollingGrid">
									<SelectiveScrollingGrid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</SelectiveScrollingGrid.ColumnDefinitions>
									<SelectiveScrollingGrid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</SelectiveScrollingGrid.RowDefinitions>
									<DataGridCellsPresenter
											Grid.Column="1"
											Margin="0,0,-2,0"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											ItemsPanel="{TemplateBinding ItemsPanel}"
											/>
									<DataGridDetailsPresenter
											Grid.Column="1"
											Grid.Row="1"
											SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
																																										 ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
																																										 Converter={x:Static DataGrid.RowDetailsScrollingConverter},
																																										 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
											Visibility="{TemplateBinding DetailsVisibility}"
											/>
									<DataGridRowHeader
											Grid.Column="0"
											Grid.Row="0"
											Grid.RowSpan="2"
											SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
											Visibility="{Binding HeadersVisibility,
																					 ConverterParameter={x:Static DataGridHeadersVisibility.Row},
																					 Converter={x:Static DataGrid.HeadersVisibilityConverter},
																					 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
											/>
								</SelectiveScrollingGrid>

								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition
													GeneratedDuration="0"
													From="MouseOver"
													To="Normal_Selected"
													/>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="Normal" />
										<VisualState x:Name="Normal_AlternatingRow" />
										<VisualState x:Name="Unfocused_Editing" />
										<VisualState x:Name="Normal_Editing">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="DGR_Border"
														Storyboard.TargetProperty="(Panel.Background)"
														>
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<SolidColorBrush Color="{StaticResource Datagrid.Row.Selected}" />
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Unfocused_Selected" />
										<VisualState x:Name="Normal_Selected">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="DGR_Border"
														Storyboard.TargetProperty="(Panel.Background)"
														>
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<SolidColorBrush Color="{StaticResource Datagrid.Row.Selected}" />
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MouseOver">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="DGR_Border"
														Storyboard.TargetProperty="(Panel.Background)"
														>
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<SolidColorBrush Color="#54002C46" />
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MouseOver_Unfocused_Editing" />
										<VisualState x:Name="MouseOver_Editing">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="DGR_Border"
														Storyboard.TargetProperty="(Panel.Background)"
														>
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<SolidColorBrush Color="{StaticResource Datagrid.Row.Selected}" />
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MouseOver_Unfocused_Selected" />
										<VisualState x:Name="MouseOver_Selected">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="DGR_Border"
														Storyboard.TargetProperty="(Panel.Background)"
														>
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<SolidColorBrush Color="{StaticResource Datagrid.Row.Selected}" />
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Border>
							<!--<ControlTemplate.Triggers>
									<Trigger
											Property="IsSelected"
											Value="True"
											>
										<Setter Property="Background" Value="AliceBlue">
										</Setter>
									</Trigger>
								</ControlTemplate.Triggers>-->
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
				<Setter Property="ValidationErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock
									Margin="2,0,0,0"
									VerticalAlignment="Center"
									Text="!"
									Foreground="Red"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
							Property="IsNewItem"
							Value="True"
							>
						<Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
					</Trigger>
				</Style.Triggers>
			</Style>


			<Style
					x:Key="DataGridStyle1"
					TargetType="DataGrid"
					>
				<!--  TargetType="{x:Type DataGrid}"  -->
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="LightSkyBlue" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="HeadersVisibility" Value="None" />

				<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="DataGrid">
							<!--<ControlTemplate TargetType="{x:Type DataGrid}">-->
							<Border
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<!--  Background="{TemplateBinding Background}"  -->

								<ScrollViewer
										x:Name="DG_ScrollViewer"
										Focusable="false"
										>
									<ScrollViewer.Template>
										<ControlTemplate TargetType="ScrollViewer">
											<!--<ControlTemplate TargetType="{x:Type ScrollViewer}">-->
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition Height="*" />
													<RowDefinition Height="Auto" />
												</Grid.RowDefinitions>
												<Button
														Width="{Binding CellsPanelHorizontalOffset,
																						RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
														Command="{x:Static DataGrid.SelectAllCommand}"
														Focusable="false"
														Visibility="{Binding HeadersVisibility,
																								 ConverterParameter={x:Static DataGridHeadersVisibility.All},
																								 Converter={x:Static DataGrid.HeadersVisibilityConverter},
																								 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
														Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
																																					TypeInTargetAssembly={x:Type DataGrid}}}"
														/>
												<DataGridColumnHeadersPresenter
														x:Name="PART_ColumnHeadersPresenter"
														Grid.Column="1"
														Grid.Row="0"
														Visibility="{Binding HeadersVisibility,
																								 ConverterParameter={x:Static DataGridHeadersVisibility.Column},
																								 Converter={x:Static DataGrid.HeadersVisibilityConverter},
																								 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
														/>
												<ScrollContentPresenter
														x:Name="PART_ScrollContentPresenter"
														Grid.Column="0"
														Grid.Row="1"
														Grid.ColumnSpan="2"
														CanContentScroll="{TemplateBinding CanContentScroll}"
														/>

												<ScrollBar
														x:Name="PART_VerticalScrollBar"
														Grid.Column="2"
														Grid.Row="1"
														Margin="0,-1,0,0"
														Width="{StaticResource BarSizeOutline}"
														MinWidth="{StaticResource BarSize}"
														Cursor="Arrow"
														Maximum="{TemplateBinding ScrollableHeight}"
														Minimum="0"
														ViewportSize="{TemplateBinding ViewportHeight}"
														Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
														Value="{Binding VerticalOffset,
																						Mode=OneWay,
																						RelativeSource={RelativeSource TemplatedParent}}"
														Background="{StaticResource ScrollBarBkg}"
														Style="{DynamicResource ScrollBarStyle}"
														/>
												<!--  <ScrollBar  -->
												<!--  x:Name="PART_VerticalScrollBar"  -->
												<!--  Grid.Column="2"  -->
												<!--  Grid.Row="1"  -->
												<!--  Background="#444444"  -->
												<!--  Maximum="{TemplateBinding ScrollableHeight}"  -->
												<!--  Orientation="Vertical"  -->
												<!--  ViewportSize="{TemplateBinding ViewportHeight}"  -->
												<!--  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  -->
												<!--  Value="{Binding VerticalOffset,  -->
												<!--  Mode=OneWay,  -->
												<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
												<!--  />  -->
												<Grid
														Grid.Column="1"
														Grid.Row="2"
														>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
														<ColumnDefinition Width="*" />
													</Grid.ColumnDefinitions>
													<ScrollBar
															x:Name="PART_HorizontalScrollBar"
															Grid.Column="1"
															Height="{StaticResource BarSizeOutline}"
															MinHeight="{StaticResource BarSize}"
															AutomationProperties.AutomationId="HorizontalScrollBar"
															Cursor="Arrow"
															Maximum="{TemplateBinding ScrollableWidth}"
															Minimum="0"
															Orientation="Horizontal"
															ViewportSize="{TemplateBinding ViewportWidth}"
															Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
															Value="{Binding HorizontalOffset,
																							Mode=OneWay,
																							RelativeSource={RelativeSource TemplatedParent}}"
															Background="{StaticResource ScrollBarBkg}"
															Style="{DynamicResource ScrollBarStyle}"
															/>
													<!--<ScrollBar
													  x:Name="PART_HorizontalScrollBar"
													  Grid.Column="1"
													  Maximum="{TemplateBinding ScrollableWidth}"
													  Orientation="Horizontal"
													  ViewportSize="{TemplateBinding ViewportWidth}"
													  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
													  Value="{Binding HorizontalOffset,
													  Mode=OneWay,
													  RelativeSource={RelativeSource TemplatedParent}}"
													  />-->
												</Grid>
											</Grid>
										</ControlTemplate>
									</ScrollViewer.Template>
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</ScrollViewer>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsGrouping" Value="true" />
							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</MultiTrigger>
				</Style.Triggers>
			</Style>


			<Style
					x:Key="dgIdHdr"
					TargetType="DataGridColumnHeader"
					>
				<Setter Property="Background" Value="#222222" />
				<!--  TargetType="{x:Type DataGridColumnHeader}"  -->
				<Setter Property="BorderBrush" Value="LightSkyBlue" />
				<Setter Property="Margin" Value="0" />
			</Style>

			<Style
					x:Key="dgIdHdrBeg"
					TargetType="DataGridColumnHeader"
					BasedOn="{StaticResource dgIdHdr}"
					>
				<!--  TargetType="{x:Type DataGridColumnHeader}"  -->
				<Setter Property="BorderThickness" Value="1,0,1,1" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
			</Style>

			<Style
					x:Key="dgIdHdrMid"
					TargetType="DataGridColumnHeader"
					BasedOn="{StaticResource dgIdHdr}"
					>
				<!--  TargetType="{x:Type DataGridColumnHeader}"  -->
				<Setter Property="BorderThickness" Value="0,0,1,1" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
			</Style>

			<Style
					x:Key="dgCel"
					TargetType="DataGridCell"
					>
				<!--  TargetType="{x:Type DataGridCell}"  -->
				<Setter Property="Background" Value="#222222" />
				<Setter Property="BorderBrush" Value="LightSkyBlue" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="DataGridCell">
							<!--<ControlTemplate TargetType="{x:Type DataGridCell}">-->
							<Border
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<ContentPresenter
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<!--<Style.Triggers>
				<Trigger
						Property="IsSelected"
						Value="True"
						>
					-->
				<!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />-->
				<!-- <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
				<!--
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
				</Trigger>
				<Trigger
						Property="IsKeyboardFocusWithin"
						Value="True"
						>
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsSelected" Value="true" />
						<Condition Property="Selector.IsSelectionActive" Value="false" />
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					-->
				<!-- <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
				<!--
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
				</MultiTrigger>
				<Trigger
						Property="IsEnabled"
						Value="false"
						>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
				</Trigger>
			</Style.Triggers>-->
			</Style>

			<Style
					x:Key="dgIdCel"
					TargetType="DataGridCell"
					>
				<Setter Property="Background" Value="#222222" />
				<Setter Property="BorderBrush" Value="LightSkyBlue" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>

			<Style
					x:Key="dgIdCelBeg"
					TargetType="DataGridCell"
					BasedOn="{StaticResource dgIdCel}"
					>
				<Setter Property="Height" Value="50" />
				<!--  TargetType="{x:Type DataGridCell}"  -->
				<Setter Property="HorizontalContentAlignment" Value="Center" />
			</Style>


			<!--#endregion-->

			<!--#region > Dg1 resources-->

			<DataTemplate x:Key="Dty">
				<Grid HorizontalAlignment="Left">
					<Button
							Name="BtnAddDetailRow"
							Content="Add"
							Width="56"
							Height="24"
							Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
							Click="BtnAddDetailRow_OnClick"
							/>
				</Grid>
			</DataTemplate>

			<DataTemplate
					x:Key="Dtz"
					DataType="tree:TreeNode"
					>
				<Border
						x:Name="Bd"
						Background="#222222"
						BorderThickness="1,0,1,1"
						BorderBrush="Red"
						>
					<Border.Style>
						<Style TargetType="Border">
							<Style.Triggers>
								<DataTrigger
										Binding="{Binding HasChildren}"
										Value="true"
										>
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Border.Style>


					<Grid Background="#222222">

						<DataGrid
								Margin="5,35,5,5"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								FontSize="12"
								d:DataContext="{Binding Source={x:Static local:MainWindow.RootNode}}"
								AreRowDetailsFrozen="False"
								AutoGenerateColumns="false"
								CanUserAddRows="False"
								CanUserDeleteRows="False"
								CanUserReorderColumns="False"
								CanUserResizeRows="False"
								CanUserSortColumns="False"
								CellEditEnding="DataGrid_OnCellEditEnding"
								GridLinesVisibility="None"
								HorizontalScrollBarVisibility="Visible"
								PreparingCellForEdit="DataGrid_OnPreparingCellForEdit"
								RowDetailsVisibilityMode="Collapsed"
								SelectionMode="Single"
								VerticalScrollBarVisibility="Visible"
								VirtualizingPanel.ScrollUnit="Pixel"
								Background="#222222"
								Foreground="White"
								BorderThickness="0,1,0,0"
								HorizontalGridLinesBrush="LightSkyBlue"
								VerticalGridLinesBrush="LightSkyBlue"
								IsReadOnly="False"
								ItemsSource="{Binding Children}"
								CellStyle="{DynamicResource CellStyleBase}"
								ColumnHeaderStyle="{DynamicResource ColumnHeaderStyle1}"
								RowStyle="{DynamicResource DataGridRowStyle}"
								Style="{DynamicResource DataGridStyle1}"
								>

							<DataGrid.Columns>
								<DataGridTemplateColumn
										Width="32"
										IsReadOnly="True"
										CellStyle="{StaticResource CellStyleNarrow}"
										>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<CheckBox
													x:Name="BtnExpander"
													Margin="0,0,0,0"
													Width="16"
													Height="16"
													MinHeight="{StaticResource Dg.Row.Height}"
													HorizontalAlignment="Center"
													custom:CustomProperties.GenericBoolOne="{Binding HasChildren}"
													Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
													BorderThickness="0"
													Click="CbxExpander_OnClick"
													FocusVisualStyle="{x:Null}"
													Style="{DynamicResource ChkExpander}"
													/>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>

								</DataGridTemplateColumn>

								<DataGridTextColumn
										Width="120"
										Binding="{Binding Item.Title}"
										CellStyle="{StaticResource CellStyleValue}"
										EditingElementStyle="{StaticResource EditTbxStyle1}"
										>

									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock">

											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.ElementStyle>
									<DataGridTextColumn.Header>
										<DataGridColumnHeader
												Content="Discipline"
												Margin="0,0,10,0"
												Padding="5,2,5,3"
												HorizontalAlignment="Stretch"
												HorizontalContentAlignment="Stretch"
												Visibility="Visible"
												Background="Transparent"
												BorderThickness="1,1,1,1"
												BorderBrush="{StaticResource Grid.Line}"
												/>
									</DataGridTextColumn.Header>
								</DataGridTextColumn>

								<DataGridTextColumn
										Width="120"
										Binding="{Binding Item.Description}"
										CellStyle="{StaticResource CellStyleValue}"
										EditingElementStyle="{StaticResource EditTbxStyle1}"
										>

									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock">
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.ElementStyle>
									<DataGridTextColumn.Header>
										<DataGridColumnHeader
												Content="Description"
												Margin="0,0,0,0"
												Width="Auto"
												HorizontalAlignment="Stretch"
												HorizontalContentAlignment="Stretch"
												Visibility="Visible"
												BorderThickness="1,1,1,0"
												BorderBrush="{StaticResource Grid.Line}"
												/>
									</DataGridTextColumn.Header>
								</DataGridTextColumn>

								<DataGridTextColumn
										Width="120"
										Binding="{Binding Item.Pattern}"
										CellStyle="{StaticResource CellStyleValue}"
										EditingElementStyle="{StaticResource EditTbxStyle1}"
										>
									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock">
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.ElementStyle>
									<DataGridTextColumn.Header>
										<DataGridColumnHeader
												Content=""
												Margin="0,0,0,0"
												Width="0"
												HorizontalAlignment="Stretch"
												HorizontalContentAlignment="Stretch"
												Visibility="Visible"
												BorderThickness="1,1,1,0"
												BorderBrush="{StaticResource Grid.Line}"
												/>
									</DataGridTextColumn.Header>
								</DataGridTextColumn>

								<DataGridTextColumn
										Width="50"
										Binding="{Binding Item.KeyCode}"
										IsReadOnly="True"
										CellStyle="{StaticResource CellStyleValue}"
										>
									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock">
											<Setter Property="VerticalAlignment" Value="Center" />
											<Setter Property="HorizontalAlignment" Value="right" />
										</Style>
									</DataGridTextColumn.ElementStyle>
									<DataGridTextColumn.Header>
										<DataGridColumnHeader
												Content="Key"
												Margin="00,0,0,0"
												Width="50"
												HorizontalAlignment="Stretch"
												HorizontalContentAlignment="Stretch"
												Visibility="Visible"
												BorderBrush="{StaticResource Grid.Line}"
												/>
									</DataGridTextColumn.Header>
								</DataGridTextColumn>

							</DataGrid.Columns>

						</DataGrid>



					</Grid>
				</Border>
			</DataTemplate>




			<DataTemplate
					x:Key="Dtx"
					DataType="tree:TreeNode"
					>
				<Border
						x:Name="Bd"
						Background="#222222"
						BorderThickness="1,0,1,1"
						BorderBrush="Red"
						>
					<Border.Style>
						<Style TargetType="Border">
							<Style.Triggers>
								<DataTrigger
										Binding="{Binding HasChildren}"
										Value="False"
										>
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Border.Style>


					<Grid Background="#222222">
						<!-- <Grid.RowDefinitions> -->
						<!--    -->
						<!-- </Grid.RowDefinitions> -->

						<!--<Button
								x:Name="BtnRowDetailDone"
								Content="Done"
								Grid.Column="0"
								Grid.Row="0"
								Margin="5"
								Width="45"
								Height="25"
								Padding="0"
								HorizontalAlignment="Left"
								FontSize="10"
								Tag="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}}"
								Visibility="Visible"
								Click="Btn
								RowDetailDone_OnClick"
								/>-->
						<DataGrid
								Grid.Column="0"
								HorizontalAlignment="Stretch"
								d:DataContext="{Binding Source={x:Static local:MainWindow.RootNode}}"
								AutoGenerateColumns="False"
								CellEditEnding="DataGrid_OnCellEditEnding"
								HeadersVisibility="None"
								HorizontalScrollBarVisibility="Visible"
								PreparingCellForEdit="DataGrid_OnPreparingCellForEdit"
								RowDetailsVisibilityMode="VisibleWhenSelected"
								SelectionMode="Single"
								VerticalScrollBarVisibility="Hidden"
								Background="#222222"
								Foreground="White"
								HorizontalGridLinesBrush="LightSkyBlue"
								VerticalGridLinesBrush="LightSkyBlue"
								IsReadOnly="False"
								ItemsSource="{Binding Path=Children}"
								>
							<!--  RowDetailsTemplate="{DynamicResource Dtx}"  -->
							<DataGrid.RowStyle>
								<Style TargetType="DataGridRow">
									<Setter Property="Background" Value="#222222" />
									<Setter Property="BorderBrush" Value="{StaticResource Grid.Line}" />
									<Setter Property="BorderThickness" Value="1,1,1,1" />
									<Setter Property="Margin" Value="0,0,0,-1" />
									<Setter Property="VerticalContentAlignment" Value="Center" />
								</Style>
							</DataGrid.RowStyle>
							<DataGrid.Columns>

								<DataGridTextColumn
										Width="120"
										Binding="{Binding Item.Title,
																			FallbackValue='title'}"
										Header="Title"
										CellStyle="{StaticResource dgIdCelBeg}"
										HeaderStyle="{StaticResource dgIdHdrMid}"
										/>
								<DataGridTextColumn
										Binding="{Binding Item.Description,
																			FallbackValue='description'}"
										Header="Description"
										CellStyle="{StaticResource dgIdCelBeg}"
										HeaderStyle="{StaticResource dgIdHdrMid}"
										/>
								<DataGridTextColumn
										Width="80"
										Binding="{Binding Item.KeyCode,
																			FallbackValue='key'}"
										Header="Key Code"
										CellStyle="{StaticResource dgCel}"
										HeaderStyle="{StaticResource dgIdHdrBeg}"
										/>

							</DataGrid.Columns>
						</DataGrid>

					</Grid>
				</Border>
			</DataTemplate>

			<!--#endregion-->


			<!--#region > Editing-->

			<Style
					x:Key="Style.Edit.Label"
					TargetType="Label"
					>
				<Setter Property="Margin" Value="4,0" />
				<Setter Property="Padding" Value="2" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
			</Style>

			<Style
					x:Key="Style.Edit.TextBox"
					TargetType="TextBox"
					>
				<Setter Property="Margin" Value="4,0" />
				<Setter Property="Padding" Value="6,2,4,2" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Background" Value="{StaticResource Edit.TextBox.Background}" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>


			<HierarchicalDataTemplate
					x:Key="Tv1DataTemplate1"
					DataType="{x:Type tree:TreeNode}"
					ItemsSource="{Binding Path=Children}"
					>
				<Grid
						x:Name="GD1"
						Margin="0,1,0,0"
						Width="Auto"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center"
						
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="200" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>

					<Label
							Content="{Binding Path=Item.Title}"
							Grid.Column="0"
							Grid.Row="0"
							Margin="5,2,4,0"
							Padding="0"
							HorizontalAlignment="Stretch"
							DockPanel.Dock="Left"
							Foreground="White"
							/>

					<Label
							Content="{Binding Path=Item.Description}"
							Grid.Column="1"
							Grid.Row="0"
							Margin="5,2,4,0"
							Padding="0"
							HorizontalAlignment="Stretch"
							DockPanel.Dock="Right"
							Foreground="White"
							/>

					<Label
							Content="{Binding Path=Item.Pattern}"
							Grid.Column="0"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="22,1,4,4"
							Padding="0"
							HorizontalAlignment="Stretch"
							FontSize="8"
							DockPanel.Dock="Bottom"
							Foreground="Gray"
							/>

				</Grid>


			</HierarchicalDataTemplate>



			<Style x:Key="TreeViewItemFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="{StaticResource Deep.Orange.400}" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="{StaticResource Deep.Orange.400}" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="{StaticResource Deep.Orange.100}" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="{StaticResource Deep.Orange.100}" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FF27C7F7" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF27C7F7" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF27C7F7" />

			<PathGeometry
					x:Key="TreeArrow"
					Figures="M0,0 L0,8 L8,0 z"
					/>

			<Style
					x:Key="ExpandCollapseToggleStyle"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="16" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border
									Width="24"
									Height="24"
									Padding="5,5,5,5"
									Background="Transparent"
									>
								<Path
										x:Name="ExpandPath"
										Data="{StaticResource TreeArrow}"
										Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
										Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
										StrokeThickness="1"
										>
									<Path.RenderTransform>
										<RotateTransform Angle="135" CenterX="3" CenterY="3" />
									</Path.RenderTransform>
								</Path>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
										Property="IsChecked"
										Value="true"
										>
									<Setter TargetName="ExpandPath" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="180" CenterX="3" CenterY="3" />
										</Setter.Value>
									</Setter>
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
								</Trigger>

								<Trigger
										Property="IsMouseOver"
										Value="true"
										>
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
								</Trigger>

								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true" />
										<Condition Property="IsChecked" Value="true" />
									</MultiTrigger.Conditions>
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style
					x:Key="Tv1temStyle1"
					TargetType="{x:Type TreeViewItem}"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Padding" Value="1,0,0,0" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">

							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" MinWidth="19" />
									<ColumnDefinition Width="*" />
									<!-- <ColumnDefinition Width="*" /> -->
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<ToggleButton
										x:Name="Expander"
										VerticalAlignment="Top"
										ClickMode="Press"
										IsChecked="{Binding IsExpanded,
																				RelativeSource={RelativeSource TemplatedParent}}"
										Style="{StaticResource ExpandCollapseToggleStyle}"
										/>
								<Border
										Grid.Column="1"
										Grid.Row="0"
										Margin="0,0.5,.5,0"
										CornerRadius="6"
										SnapsToDevicePixels="True"
										BorderThickness="12,1.5,.5,5"
										>
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
											<GradientStop Offset="0.03" Color="#FF111132" />
											<GradientStop Offset="0.10" Color="#FFAAEAF3" />
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border
											x:Name="BD"
											Margin="-3.5,-.5,.5,-1"
											CornerRadius="5"
											BorderThickness="4,0.5,2,0.5"
											BorderBrush="{StaticResource Brush.TreeView.Background}"
											Background="{StaticResource Brush.TreeView.Background}"
											>
										<VirtualizingStackPanel
												Grid.Column="1"
												Grid.Row="0"
												>
											<Border
													x:Name="Bd"
													Grid.Column="1"
													Grid.Row="0"
													Padding="{TemplateBinding Padding}"
													SnapsToDevicePixels="true"
													Background="{TemplateBinding Background}"
													BorderThickness="{TemplateBinding BorderThickness}"
													BorderBrush="{TemplateBinding BorderBrush}"
													>
												<ContentPresenter
														x:Name="PART_Header"
														HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														ContentSource="Header"
														SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
														
														/>
											</Border>
											<ItemsPresenter
													x:Name="ItemsHost"
													Grid.Column="1"
													Grid.Row="1"
													Grid.ColumnSpan="1"
													
													/>
										</VirtualizingStackPanel>
										<Border.Style>
											<Style TargetType="Border">
												<Setter Property="Background" Value="Transparent"/>
											</Style>
										</Border.Style>
									</Border>
								</Border>

							</Grid>

							<ControlTemplate.Triggers>
								<Trigger
										Property="IsExpanded"
										Value="false"
										>
									<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
								</Trigger>
								<Trigger
										Property="HasItems"
										Value="false"
										>
									<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
								</Trigger>
								<Trigger
										Property="IsSelected"
										Value="true"
										>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
									<Setter TargetName="BD" Property="Background" Value="#44444444" />
									<!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true" />
										<Condition Property="IsSelectionActive" Value="false" />
									</MultiTrigger.Conditions>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
									<Setter TargetName="BD" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
								</MultiTrigger>
								<Trigger
										Property="IsEnabled"
										Value="false"
										>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
							Property="VirtualizingPanel.IsVirtualizing"
							Value="true"
							>
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>


			<SolidColorBrush x:Key="ListBorder" Color="#828790" />
			<Style
					x:Key="Tv1Style1"
					TargetType="{x:Type TreeView}"
					>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeView}">
							<Border
									x:Name="Bd"
									SnapsToDevicePixels="true"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<ScrollViewer
										x:Name="_tv_scrollviewer_"
										Padding="{TemplateBinding Padding}"
										CanContentScroll="false"
										Focusable="false"
										HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										Background="{TemplateBinding Background}"
										Template="{DynamicResource Tv1ScrollViewerControlTemplate1}"
										>
									<ItemsPresenter />
								</ScrollViewer>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger
										Property="IsEnabled"
										Value="false"
										>
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
								</Trigger>
								<Trigger
										Property="VirtualizingPanel.IsVirtualizing"
										Value="true"
										>
									<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger
							Property="VirtualizingPanel.IsVirtualizing"
							Value="true"
							>
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>

			<ControlTemplate
					x:Key="Tv1ScrollViewerControlTemplate1"
					TargetType="ScrollViewer"
					>
				<Grid
						x:Name="Grid"
						Background="{TemplateBinding Background}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Rectangle
							x:Name="Corner"
							Grid.Column="2"
							Grid.Row="2"
							Fill="Transparent"
							/>
					<ScrollContentPresenter
							x:Name="PART_ScrollContentPresenter"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							/>
					<!--  <ScrollBar  -->
					<!--  x:Name="PART_VerticalScrollBar"  -->
					<!--  Grid.Column="1"  -->
					<!--  Grid.Row="0"  -->
					<!--  AutomationProperties.AutomationId="VerticalScrollBar"  -->
					<!--  Cursor="Arrow"  -->
					<!--  Maximum="{TemplateBinding ScrollableHeight}"  -->
					<!--  Minimum="0"  -->
					<!--  ViewportSize="{TemplateBinding ViewportHeight}"  -->
					<!--  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  -->
					<!--  Value="{Binding VerticalOffset,  -->
					<!--  Mode=OneWay,  -->
					<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
					<!--  />  -->
					<!--  <ScrollBar  -->
					<!--  x:Name="PART_HorizontalScrollBar"  -->
					<!--  Grid.Column="0"  -->
					<!--  Grid.Row="1"  -->
					<!--  AutomationProperties.AutomationId="HorizontalScrollBar"  -->
					<!--  Cursor="Arrow"  -->
					<!--  Maximum="{TemplateBinding ScrollableWidth}"  -->
					<!--  Minimum="0"  -->
					<!--  Orientation="Horizontal"  -->
					<!--  ViewportSize="{TemplateBinding ViewportWidth}"  -->
					<!--  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  -->
					<!--  Value="{Binding HorizontalOffset,  -->
					<!--  Mode=OneWay,  -->
					<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
					<!--  />  -->


					<ScrollBar
							x:Name="PART_VerticalScrollBar"
							Grid.Column="2"
							Grid.Row="1"
							Margin="0,-1,0,0"
							Width="{StaticResource BarSizeOutline}"
							MinWidth="{StaticResource BarSize}"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

					<!--  <Grid  -->
					<!--  Grid.Column="1"  -->
					<!--  Grid.Row="2"  -->
					<!--    -->
					<!--  >  -->
					<!-- 	<Grid.ColumnDefinitions> -->
					<!-- 		<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" /> -->
					<!-- 		<ColumnDefinition Width="*" /> -->
					<!-- 	</Grid.ColumnDefinitions> -->
					<ScrollBar
							x:Name="PART_HorizontalScrollBar"
							Grid.Column="1"
							Grid.Row="2"
							Height="{StaticResource BarSizeOutline}"
							MinHeight="{StaticResource BarSize}"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Style="{DynamicResource ScrollBarStyle}"
							/>
					<!--  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  -->

					<!-- </Grid> -->

				</Grid>
			</ControlTemplate>


			<!--#endregion-->


		</ResourceDictionary>
	</Window.Resources>


	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="3*" />
			<ColumnDefinition Width="2*" />
			<ColumnDefinition Width="90" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="60" />
			<RowDefinition Height="3*" />
			<RowDefinition Height="2*" />
			<RowDefinition Height="50" />
		</Grid.RowDefinitions>

		<Button
				x:Name="BtnDebug"
				Content="Debug"
				Grid.Column="2"
				Grid.Row="3"
				Margin="10"
				Click="BtnDebug_OnClick"
				/>

		<Label
				Content="Tv1"
				Grid.Column="0"
				Grid.Row="0"
				Margin="5,0,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Foreground="White"
				/>

		<Label
				Content="Sheet Organization Categories"
				Grid.Column="0"
				Grid.Row="0"
				Margin="5,16,0,0"
				Padding="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Foreground="White"
				/>


		<Grid
				x:Name="EditCategory"
				Grid.Column="0"
				Grid.Row="2"
				Margin="5,6,5,5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top"
				DataContext="{Binding ElementName=Tv1, Path=SelectedValue}"
				
				>
			<Grid.Resources>



			</Grid.Resources>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="30" />
				<ColumnDefinition Width="90" />
				<ColumnDefinition Width="60" />

			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="26" />
				<RowDefinition Height="26" />
				<RowDefinition Height="26" />
			</Grid.RowDefinitions>

			<Label
					Content="Sheet Organization Category"
					Grid.Column="0"
					Grid.Row="0"
					Grid.ColumnSpan="5"
					Margin="0,0,0,6"
					Padding="2"
					FontSize="14"
					Background="{StaticResource Win.Title.Background}"
					Foreground="White"
					/>

			<Label
					Content="Title"
					Grid.Column="0"
					Grid.Row="1"
					Style="{StaticResource Style.Edit.Label}"
					/>

			<TextBox
					Grid.Column="1"
					Grid.Row="1"
					Text="{Binding Path=Item.Title,
												 Mode=OneWay,
												 FallbackValue='Nothing Selected'}"
					Style="{StaticResource Style.Edit.TextBox}"
					/>


			<Label
					Content="Description"
					Grid.Column="0"
					Grid.Row="2"
					Style="{StaticResource Style.Edit.Label}"
					/>

			<TextBox
					Grid.Column="1"
					Grid.Row="2"
					Text="{Binding Path=Item.Description,
												 Mode=OneWay,
												 FallbackValue=''}"
					Style="{StaticResource Style.Edit.TextBox}"
					/>

			<Label
					Content="Pattern"
					Grid.Column="0"
					Grid.Row="3"
					Style="{StaticResource Style.Edit.Label}"
					/>

			<TextBox
					Grid.Column="1"
					Grid.Row="3"
					Text="{Binding Path=Item.Pattern,
												 Mode=OneWay,
												 FallbackValue=''}"
					Style="{StaticResource Style.Edit.TextBox}"
					/>

			<!-- functions 
			1. delete
			2. add before
			3. add after
			4. add child
			5. move after
			6. move before
			
			
			
			-->


		</Grid>

		<TreeView x:Name="Tvx"
				Grid.Column="1"
				Grid.Row="1"
				Margin="5"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				d:DataContext="{Binding Source={x:Static local:MainWindow.RootNode}}"
				DataContext="{Binding ElementName=MainWin,
															Path=Categories.TreeBase}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				Background="{StaticResource Brush.TreeView.Background}"
				ItemTemplate="{StaticResource Tv1DataTemplate1}"
				ItemsSource="{Binding Children}"
				Style="{DynamicResource Tv1Style1}"
				></TreeView>



		<TreeView
				x:Name="Tv1"
				Grid.Column="0"
				Grid.Row="1"
				Margin="5"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				d:DataContext="{Binding Source={x:Static local:MainWindow.RootNode}}"
				DataContext="{Binding ElementName=MainWin,
															Path=Categories.TreeBase}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				Background="{StaticResource Brush.TreeView.Background}"
				ItemContainerStyle="{StaticResource Tv1temStyle1}"
				ItemTemplate="{StaticResource Tv1DataTemplate1}"
				ItemsSource="{Binding Children}"
				Style="{DynamicResource Tv1Style1}"
				>
		</TreeView>


	</Grid>
</Window>
