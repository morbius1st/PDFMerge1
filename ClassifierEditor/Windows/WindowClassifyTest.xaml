<Window x:Name="WinClassfTest"
		x:Class="ClassifierEditor.Windows.WindowClassifyTest"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:convert="clr-namespace:AndyShared.Support;assembly=WpfShared"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:ClassifierEditor.Windows"
		xmlns:m="clr-namespace:AndySharedResources.XamlResources;assembly=WpfShared"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:mergeSupport="clr-namespace:AndyShared.MergeSupport;assembly=WpfShared"
		xmlns:node="clr-namespace:AndyShared.ClassificationDataSupport.TreeSupport;assembly=WpfShared"
		xmlns:sample="clr-namespace:ClassifierEditor.SampleData"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Title="Classify Confirmation"
		Width="600"
		Height="800"
		MinWidth="600"
		MinHeight="800"
		DataContext="{Binding ElementName=WinClassfTest}"
		mc:Ignorable="d"
		FontFamily="Tahoma"
		FontSize="12"
		Background="{DynamicResource Window.Background}"
		Closing="WinClassfTest_Closing"
		Initialized="WinClassfTest_Initialized"
		Loaded="WinClassfTest_Loaded"
		ShowInTaskbar="False"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/ScrollBar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterVisualResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconResources.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<convert:BoolOr x:Key="BoolOr" />
			<convert:EqualsToBool x:Key="Equals" />
			<convert:Int32Comparison x:Key="IntCompare" />

			<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
			<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
			<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />

			<SolidColorBrush x:Key="Path.Plus.Fill">Lime</SolidColorBrush>
			<SolidColorBrush x:Key="Path.Plus.Star.Fill" Color="{m:XmalColor R=255, B=0, G=48}" />
			<SolidColorBrush x:Key="Path.Plus.Star.Fill2" Color="OrangeRed" />


			<SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF" />
			<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF" />
			<SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000" />
			<SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD" />
			<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF" />
			<SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000" />
			<SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC" />
			<SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6" />
			<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070" />
			<SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF555555" />
			<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333" />


			<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
			<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />

			<SolidColorBrush x:Key="ListBox.Disabled.Border2" Color="#FFD9D9D9" />
			<SolidColorBrush x:Key="ListBox.Disabled.Border3" Color="#FFD9D9D9" />

			<PathGeometry x:Key="TreeArrow"
					Figures="M0,0 L0,6 L6,0 z"
					/>


			<sys:Double x:Key="BkMrkItemHeight">20</sys:Double>
			<sys:Double x:Key="BkMrkIconWidthDbl">20</sys:Double>
			<sys:Double x:Key="BkMrkItemRowHeightDbl">26</sys:Double>
			<sys:Double x:Key="ListView.Item.Star.Height">10</sys:Double>
			<sys:Double x:Key="ListView.Item.Star.Width">11</sys:Double>

			<GridLength x:Key="BkMrkItemRowHeight">30</GridLength>
			<GridLength x:Key="BkMrkIconWidth">25</GridLength>

			<Thickness x:Key="Listview.ItemList.Margin"
					Bottom="5"
					Left="0"
					Right="0"
					Top="0"
					/>


			<Style x:Key="Lable.Root"
					TargetType="Label"
					>
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
			</Style>

			<Style x:Key="Label.Base"
					TargetType="{x:Type Label}"
					BasedOn="{StaticResource Lable.Root}"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Foreground" Value="White" />
			</Style>

			<Style x:Key="Label.Settings.Title"
					TargetType="Label"
					BasedOn="{StaticResource Label.Base}"
					>
				<Setter Property="Padding" Value="10,0,10,1" />
			</Style>

			<Style x:Key="Label.BookMark.Title"
					TargetType="Label"
					BasedOn="{StaticResource Label.Base}"
					>
				<Setter Property="Margin" Value="5,0,0,2" />
				<Setter Property="Padding" Value="5,0,0,0" />
				<Setter Property="FontSize" Value="13" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
			</Style>


			<Style x:Key="TextBox.Base"
					TargetType="TextBox"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>

			<Style x:Key="TextBox.Setting.Value"
					TargetType="TextBox"
					BasedOn="{StaticResource TextBox.Base}"
					>
				<Setter Property="Padding" Value="8,0,8,1" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="{StaticResource True.White}" />
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Border.Settings.Base"
					TargetType="Border"
					>
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="CornerRadius" Value="3" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>

			<Style x:Key="Border.Settings.Title"
					TargetType="Border"
					BasedOn="{StaticResource Border.Settings.Base}"
					>
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="BorderBrush" Value="{StaticResource Label.Status.Title.Background}" />
				<Setter Property="Background" Value="{StaticResource Label.Status.Title.Background}" />
			</Style>

			<Style x:Key="Border.Settings.Button"
					TargetType="Border"
					BasedOn="{StaticResource Border.Settings.Base}"
					>
				<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" />
				<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" />
				<Setter Property="Margin" Value="5,0,0,0" />
			</Style>

			<Style x:Key="Path.BookMark.Icon"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="4.0" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Fill" Value="{StaticResource Path.Plus.Fill}" />
				<Setter Property="Data" Value="{StaticResource Icon.Svg.SelectFolder}" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Stretch" Value="UniformToFill" />
			</Style>


			<Style x:Key="Border.BookMark.Base"
					TargetType="Border"
					>
				<Setter Property="Height" Value="{StaticResource BkMrkItemHeight}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="CornerRadius" Value="4" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>

			<Style x:Key="Border.BookMark.Title"
					TargetType="Border"
					BasedOn="{StaticResource Border.BookMark.Base}"
					>
				<Setter Property="Margin" Value="0,3,0,3" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" />
				<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" />
			</Style>


			<Style x:Key="Border.BookMark.Icon"
					TargetType="Border"
					BasedOn="{StaticResource Border.BookMark.Base}"
					>
				<Setter Property="Width" Value="{StaticResource BkMrkIconWidthDbl}" />
				<Setter Property="Margin" Value="3" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="Background" Value="{StaticResource Element.Icon.Background.Normal}" />
				<Setter Property="BorderBrush" Value="{StaticResource Element.Title.Background.Normal}" />
			</Style>

			<Style x:Key="ExpandCollapseToggleStyle01"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Width" Value="20" />
				<Setter Property="Height" Value="20" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">

							<Border x:Name="bdr_toggle"
									Width="20"
									Height="20"
									Padding="0"
									>
								<Path x:Name="ExpandPath"
										Width="10"
										Height="10"
										Data="M 0,0 4,8 8,0 z"
										Fill="{TemplateBinding Foreground}"
										RenderTransformOrigin="0.5,0.5"
										Stretch="UniformToFill"
										StrokeThickness="0"
										>
									<Path.RenderTransform>
										<RotateTransform Angle="270" CenterX="0" CenterY="0" />
									</Path.RenderTransform>
								</Path>
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="ExpandPath" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="0" />
										</Setter.Value>
									</Setter>
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
									<Setter TargetName="bdr_toggle" Property="Background" Value="Transparent" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
										<Condition Property="IsChecked" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="ExpandCollapseToggleStyle02"
					TargetType="{x:Type ToggleButton}"
			>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Width" Value="25" />
				<Setter Property="Height" Value="20" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate 
								
								TargetType="{x:Type ToggleButton}">
							
							<Border Style="{StaticResource Border.BookMark.Icon}">
								<Path x:Name="Plus"
										Style="{StaticResource Path.BookMark.Icon}"
								>
								</Path>
							</Border>

							<ControlTemplate.Triggers>

								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding Path=IsExpandedAlt}" Value="true"/>
										<Condition Binding="{Binding Path=ChildCount, Converter={StaticResource IntCompare}, ConverterParameter='> 0'}" Value="true"/>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="Plus" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="45"
													CenterX="6"
													CenterY="6" />
										</Setter.Value>
									</Setter>
								</MultiDataTrigger>

								<DataTrigger Binding="{Binding Path=ChildCount}" Value="0">
									<Setter TargetName="Plus" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill2}" />
									<Setter TargetName="Plus" Property="Data" Value="{StaticResource Icon.Svg.Dash}"/>
									<Setter TargetName="Plus" Property="Stretch" Value="Uniform"/>
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ScrollViewerControlTemplate1"
					TargetType="{x:Type ScrollViewer}"
					>
				<Grid x:Name="Grid"
						Background="{TemplateBinding Background}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<Rectangle x:Name="Corner"
							Grid.Column="2"
							Grid.Row="2"
							Fill="Transparent"
							/>
					<!--  Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  -->

					<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							/>
					<ScrollBar x:Name="PART_VerticalScrollBar"
							Grid.Column="2"
							Grid.Row="1"
							Margin="0,0,0,0"
							Width="{StaticResource BarSizeOutline}"
							MinWidth="{StaticResource BarSize}"
							Value="{Binding VerticalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

					<ScrollBar x:Name="PART_HorizontalScrollBar"
							Grid.Column="0"
							Grid.Row="2"
							Grid.ColumnSpan="2"
							Height="{StaticResource BarSizeOutline}"
							MinHeight="{StaticResource BarSize}"
							Value="{Binding HorizontalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Style="{DynamicResource ScrollBarStyle}"
							/>


					<!--  <ScrollBar x:Name="PART_VerticalScrollBar"  -->
					<!--  Grid.Column="2"  -->
					<!--  Grid.Row="1"  -->
					<!--  AutomationProperties.AutomationId="VerticalScrollBar"  -->
					<!--  Cursor="Arrow"  -->
					<!--  Maximum="{TemplateBinding ScrollableHeight}"  -->
					<!--  Minimum="0"  -->
					<!--  ViewportSize="{TemplateBinding ViewportHeight}"  -->
					<!--  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  -->
					<!--  Value="{Binding VerticalOffset,  -->
					<!--  Mode=OneWay,  -->
					<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
					<!--  />  -->

					<!--  <ScrollBar x:Name="PART_HorizontalScrollBar"  -->
					<!--  Grid.Column="1"  -->
					<!--  Grid.Row="2"  -->
					<!--  AutomationProperties.AutomationId="HorizontalScrollBar"  -->
					<!--  Cursor="Arrow"  -->
					<!--  Maximum="{TemplateBinding ScrollableWidth}"  -->
					<!--  Minimum="0"  -->
					<!--  Orientation="Horizontal"  -->
					<!--  ViewportSize="{TemplateBinding ViewportWidth}"  -->
					<!--  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  -->
					<!--  Value="{Binding HorizontalOffset,  -->
					<!--  Mode=OneWay,  -->
					<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
					<!--  />  -->
				</Grid>
			</ControlTemplate>

			<Style x:Key="ExpandCollapseToggleStyle"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Width" Value="20" />
				<Setter Property="Height" Value="20" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border x:Name="bdr_toggle"
									Width="20"
									Height="20"
									Padding="0"
									>
								<!--  Background="#222222"  -->
								<Path x:Name="ExpandPath"
										Width="10"
										Height="10"
										Data="M 0,0 4,8 8,0 z"
										Fill="red"
										RenderTransformOrigin="0.5,0.5"
										Stretch="UniformToFill"
										StrokeThickness="0"
										>
									<Path.RenderTransform>
										<RotateTransform Angle="270" CenterX="0" CenterY="0" />
									</Path.RenderTransform>
								</Path>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="ExpandPath" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="0" />
										</Setter.Value>
									</Setter>
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
									<Setter TargetName="bdr_toggle" Property="Background" Value="Transparent" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<!-- <Setter TargetName="bdr_toggle" Property="Background" Value="#666666"/> -->
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
										<Condition Property="IsChecked" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="TextBoxStyle1"
					TargetType="{x:Type TextBox}"
					>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
				<Setter Property="HorizontalContentAlignment" Value="Left" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="AllowDrop" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<Border x:Name="border"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="True"
									>
								<ScrollViewer x:Name="PART_ContentHost"
										Focusable="false"
										HorizontalScrollBarVisibility="Hidden"
										VerticalScrollBarVisibility="Hidden"
										Template="{DynamicResource ScrollViewerControlTemplate1}"
										/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="border" Property="Opacity" Value="0.56" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
							<Condition Property="IsSelectionActive" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					</MultiTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="Tv1_TvStyle"
					TargetType="{x:Type TreeView}"
					>

				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeView}">
							<Border x:Name="Bd"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
									>

								<ScrollViewer x:Name="_tv_scrollviewer_"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										CanContentScroll="false"
										Focusable="false"
										HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										Template="{DynamicResource ScrollViewerControlTemplate1}"
										>

									<DockPanel HorizontalAlignment="Stretch">

										<StackPanel x:Name="Sp02"
												HorizontalAlignment="Stretch"
												DockPanel.Dock="Top"
												Orientation="Vertical"
												>

											<DockPanel x:Name="Dp02"
													HorizontalAlignment="Stretch"
													>

												<Border Style="{StaticResource Border.BookMark.Icon}">
													<Path x:Name="Plus"
															Style="{StaticResource Path.BookMark.Icon}"
															>
													</Path>
												</Border>

												<Border
														DockPanel.Dock="Left"
														Style="{StaticResource Border.BookMark.Title}"
														>

													<DockPanel>

														<ToggleButton x:Name="Lv2_visibility"
																Margin="0,1,0,0"
																Height="{StaticResource BkMrkItemRowHeightDbl}"
																VerticalAlignment="Center"
																Background="Transparent"
																IsChecked="{Binding Item.IsVisible,
																										Mode=TwoWay,
																										FallbackValue=false}"
																ClickMode="Press"
																DockPanel.Dock="Left"
																>
															<ToggleButton.Style>
																<Style
																		TargetType="ToggleButton"
																		BasedOn="{StaticResource ExpandCollapseToggleStyle01}"
																		>
																	<Setter Property="Visibility" Value="Visible" />
																	<Setter Property="Foreground" Value="Red" />
																	<Setter Property="IsEnabled" Value="True" />
																	<Style.Triggers>
																		<DataTrigger Value="0" Binding="{Binding Item.MergeItems.Count}">
																			<Setter Property="IsEnabled" Value="False" />
																			<Setter Property="Foreground" Value="PaleVioletRed" />
																		</DataTrigger>
																	</Style.Triggers>
																</Style>
															</ToggleButton.Style>
														</ToggleButton>

														<Label x:Name="Lbl02"
																Content="{Binding ElementName=WinClassfTest,
																									Path=TreeBaseTitle,
																									FallbackValue='Title'}"
																Padding="0"
																DataContext="{Binding}"
																DockPanel.Dock="Left"
																Style="{StaticResource Label.BookMark.Title}"
																/>

														<Label
																Content="{Binding ExtMergeItemCount,
																									Mode=OneWay,
																									FallbackValue=0}"
																Margin="3,0,5,0"
																Padding="0"
																ContentStringFormat="{}( {0} Total Merge Items )"
																Style="{StaticResource Label.BookMark.Title}"
																/>

													</DockPanel>
												</Border>
											</DockPanel>

											<!-- <DockPanel x:Name="Dp02" -->
											<!-- 		HorizontalAlignment="Stretch" -->
											<!-- 		> -->
											<!-- -->
											<!-- 	<Border Style="{StaticResource Border.BookMark.Icon}"> -->
											<!-- 		<Path x:Name="Plus" -->
											<!-- 				Style="{StaticResource Path.BookMark.Icon}" -->
											<!-- 				> -->
											<!-- 		</Path> -->
											<!-- 	</Border> -->
											<!-- 	<Border -->
											<!-- 			DockPanel.Dock="Left" -->
											<!-- 			Style="{StaticResource Border.BookMark.Title}" -->
											<!-- 			> -->
											<!-- -->
											<!-- 		<DockPanel> -->
											<!-- -->
											<!-- 			~1~  for this, has the extended count of child items  @1@ -->
											<!-- 			<Label -->
											<!-- 					Content="{Binding ExtItemCountLast}" -->
											<!-- 					Margin="5,0,0,4" -->
											<!-- 					Padding="0" -->
											<!-- 					ContentStringFormat="{}({0})" -->
											<!-- 					Style="{StaticResource Label.BookMark.Title}" -->
											<!-- 					/> -->
											<!-- -->
											<!-- 			<DockPanel> -->
											<!-- -->
											<!-- 				<ToggleButton x:Name="Lv2_visibility" -->
											<!-- 						Margin="0,1,0,0" -->
											<!-- 						Height="{StaticResource BkMrkItemRowHeightDbl}" -->
											<!-- 						VerticalAlignment="Center" -->
											<!-- 						Background="Transparent" -->
											<!-- 						IsChecked="{Binding Item.IsVisible, -->
											<!-- 																Mode=TwoWay, -->
											<!-- 																FallbackValue=false}" -->
											<!-- 						ClickMode="Press" -->
											<!-- 						DockPanel.Dock="Left" -->
											<!-- 						> -->
											<!-- 					<ToggleButton.Style> -->
											<!-- 						<Style -->
											<!-- 								TargetType="ToggleButton" -->
											<!-- 								BasedOn="{StaticResource ExpandCollapseToggleStyle}" -->
											<!-- 								> -->
											<!-- 							<Setter Property="Visibility" Value="Visible" /> -->
											<!-- 						</Style> -->
											<!-- 					</ToggleButton.Style> -->
											<!-- 				</ToggleButton> -->
											<!-- -->
											<!-- 				<Label -->
											<!-- 						Content="{Binding Item.MergeItems.Count}" -->
											<!-- 						Margin="0,0,0,4" -->
											<!-- 						Padding="0" -->
											<!-- 						ContentStringFormat="{}({0})" -->
											<!-- 						> -->
											<!-- 					<Label.Style> -->
											<!-- 						<Style -->
											<!-- 								TargetType="Label" -->
											<!-- 								BasedOn="{StaticResource Label.BookMark.Title}" -->
											<!-- 								> -->
											<!-- 							<Setter Property="Visibility" Value="Visible" /> -->
											<!-- 							<Style.Triggers> -->
											<!-- -->
											<!-- 								<DataTrigger Value="true"> -->
											<!-- 									<DataTrigger.Binding> -->
											<!-- 										<MultiBinding Converter="{StaticResource Equals}"> -->
											<!-- 											<Binding Path="Item.MergeItemCount" /> -->
											<!-- 											<Binding Path="ExtItemCountLast" /> -->
											<!-- 										</MultiBinding> -->
											<!-- 									</DataTrigger.Binding> -->
											<!-- 									<Setter Property="Visibility" Value="Collapsed" /> -->
											<!-- 								</DataTrigger> -->
											<!-- 							</Style.Triggers> -->
											<!-- 						</Style> -->
											<!-- 					</Label.Style> -->
											<!-- 				</Label> -->
											<!-- -->
											<!-- 				<DockPanel.Style> -->
											<!-- 					<Style TargetType="DockPanel"> -->
											<!-- 						<Setter Property="Visibility" Value="Visible" /> -->
											<!-- 						<Style.Triggers> -->
											<!-- 							<DataTrigger Value="0" Binding="{Binding Item.MergeItems.Count}"> -->
											<!-- 								<Setter Property="Visibility" Value="Collapsed"> -->
											<!-- 								</Setter> -->
											<!-- 							</DataTrigger> -->
											<!-- 						</Style.Triggers> -->
											<!-- 					</Style> -->
											<!-- 				</DockPanel.Style> -->
											<!-- -->
											<!-- 			</DockPanel> -->
											<!-- -->
											<!-- 			<Label x:Name="Lbl02" -->
											<!-- 					Content="{Binding ElementName=WinClassfTest, -->
											<!-- 														Path=TreeBaseTitle, -->
											<!-- 														FallbackValue='Title'}" -->
											<!-- 					Padding="0" -->
											<!-- 					DataContext="{Binding}" -->
											<!-- 					DockPanel.Dock="Left" -->
											<!-- 					Style="{StaticResource Label.BookMark.Title}" -->
											<!-- 					/> -->
											<!-- -->
											<!-- 		</DockPanel> -->
											<!-- -->
											<!-- 	</Border> -->
											<!-- </DockPanel> -->



											<!--  part of Lv1 header  -->
											<ListView x:Name="Lv2"
													Margin="{StaticResource Listview.ItemList.Margin}"
													Width="Auto"
													Padding="0"
													HorizontalAlignment="Stretch"
													Background="Transparent"
													BorderThickness="0"
													ScrollViewer.CanContentScroll="False"
													ScrollViewer.HorizontalScrollBarVisibility="Disabled"
													ScrollViewer.VerticalScrollBarVisibility="Disabled"
													ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
													ItemsSource="{Binding Item.MergeItems}"
													>

												<ListView.ItemTemplate>
													<DataTemplate x:Name="Dt02"
															DataType="mergeSupport:MergeItem"
															>
														<Grid x:Name="Gd03"
																Margin="3,0,0,0"
																>

															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition Width="Auto" MinWidth="100" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>

															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>

															<Path
																	Margin="0,0,10,0"
																	Width="{StaticResource ListView.Item.Star.Width}"
																	Height="{StaticResource ListView.Item.Star.Height}"
																	Data="{StaticResource Icon.Svg.Star}"
																	Fill="{StaticResource Path.Plus.Star.Fill}"
																	RenderTransformOrigin="0.5,0.5"
																	Stretch="UniformToFill"
																	StrokeThickness="0"
																	>
																<!--  Data="M 0,0 4,8 8,0 z"  -->
																<!-- <Path.RenderTransform> -->
																<!-- 	<RotateTransform Angle="270" CenterX="0" CenterY="0" /> -->
																<!-- </Path.RenderTransform> -->
															</Path>

															<Label x:Name="Lbl03"
																	Content="{Binding Path=FilePath.FileNameObject.SheetNumber}"
																	Grid.Column="1"
																	Grid.Row="0"
																	Margin="0,0,10,2"
																	Padding="0,2,0,0"
																	Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																											 Path=Foreground}"
																	Style="{StaticResource Label.Base}"
																	/>
															<Label x:Name="Lbl04"
																	Content="{Binding Path=FilePath.FileNameObject.SheetTitle}"
																	Grid.Column="2"
																	Grid.Row="0"
																	Margin="10,0,10,2"
																	Padding="0,2,0,0"
																	Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																											 Path=Foreground}"
																	Style="{StaticResource Label.Base}"
																	/>

														</Grid>
													</DataTemplate>
												</ListView.ItemTemplate>
												<ListView.Style>
													<Style TargetType="ListView">
														<Setter Property="Visibility" Value="Visible" />
														<Style.Triggers>
															<DataTrigger Value="false" Binding="{Binding Item.IsVisible}">
																<Setter Property="Visibility" Value="Collapsed" />
															</DataTrigger>
															<!-- <DataTrigger Value="false" Binding="{Binding ElementName=WinClassfTest, Path=IsExpandedEx}"> -->
															<!-- 	<Setter Property="Visibility" Value="Collapsed" /> -->
															<!-- </DataTrigger> -->
														</Style.Triggers>
													</Style>
												</ListView.Style>
											</ListView>
										</StackPanel>

										<ItemsPresenter DockPanel.Dock="Bottom" 
												Margin="25,0,0,0"
												/>

									</DockPanel>
								</ScrollViewer>

							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
								</Trigger>
								<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
									<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>

			<!-- <Style x:Key="TreeViewItemFocusVisual"> -->
			<!-- 	<Setter Property="Control.Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate> -->
			<!-- 				<Rectangle /> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->

			<Style x:Key="Tv1_ItemContainerStyle"
					TargetType="{x:Type TreeViewItem}"
					>
				<Setter Property="IsExpanded" Value="{Binding IsExpandedAlt}"/>
				<Setter Property="Visibility" Value="Visible" />
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Padding" Value="1,0,0,0" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate x:Name="Ct01"
								TargetType="{x:Type TreeViewItem}"
								>
							<Grid x:Name="GdTvi01">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{StaticResource BkMrkIconWidth}" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<ToggleButton x:Name="Expander"
										Grid.Column="0"
										Grid.Row="0"
										Margin="0"
										Height="{StaticResource BkMrkItemRowHeightDbl}"
										HorizontalAlignment="Right"
										VerticalAlignment="Top"
										Foreground="red"
										IsChecked="{Binding IsExpandedAlt,
																				Mode=TwoWay,
																				FallbackValue=false}"
										ClickMode="Press"
										Style="{StaticResource ExpandCollapseToggleStyle02}"
								/>

								<Border x:Name="Bd"
										Grid.Column="1"
										Grid.Row="0"
										Width="Auto"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										SnapsToDevicePixels="true"
								>

									<ContentPresenter x:Name="PART_Header"
											ContentSource="Header"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
								</Border>
								<ItemsPresenter x:Name="ItemsHost"
										Grid.Column="1"
										Grid.Row="1"
								/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded" Value="false">
									<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
								</Trigger>
								<!-- <Trigger Property="HasItems" Value="false"> -->
								<!-- 	<Setter TargetName="Expander" Property="Visibility" Value="Hidden" /> -->
								<!-- </Trigger> -->
								<Trigger Property="IsSelected" Value="true">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
									<!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
								</Trigger>

							<!-- 	<ToggleButton x:Name="Expander" -->
							<!-- 			Grid.Column="0" -->
							<!-- 			Grid.Row="0" -->
							<!-- 			Height="{StaticResource BkMrkItemRowHeightDbl}" -->
							<!-- 			VerticalAlignment="Top" -->
							<!-- 			IsChecked="{Binding IsExpandedAlt, -->
							<!-- 													Mode=TwoWay, -->
							<!-- 													FallbackValue=false}" -->
							<!-- 			ClickMode="Press" -->
							<!-- 			Style="{StaticResource ExpandCollapseToggleStyle}" -->
							<!-- 			/> -->
							<!-- 	~1~  IsChecked="{Binding IsExpanded,  @1@ -->
							<!-- 	~1~  RelativeSource={RelativeSource TemplatedParent}}"  @1@ -->
							<!-- -->
							<!-- 	<Border x:Name="Bd" -->
							<!-- 			Grid.Column="1" -->
							<!-- 			Grid.Row="0" -->
							<!-- 			Width="Auto" -->
							<!-- 			Padding="{TemplateBinding Padding}" -->
							<!-- 			Background="{TemplateBinding Background}" -->
							<!-- 			BorderThickness="{TemplateBinding BorderThickness}" -->
							<!-- 			BorderBrush="{TemplateBinding BorderBrush}" -->
							<!-- 			SnapsToDevicePixels="true" -->
							<!-- 			> -->
							<!-- 		<ContentPresenter x:Name="PART_Header" -->
							<!-- 				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" -->
							<!-- 				ContentSource="Header" -->
							<!-- 				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" -->
							<!-- 				/> -->
							<!-- 	</Border> -->
							<!-- 	<ItemsPresenter x:Name="ItemsHost" -->
							<!-- 			Grid.Column="1" -->
							<!-- 			Grid.Row="1" -->
							<!-- 			/> -->
							<!-- </Grid> -->
							<!-- <ControlTemplate.Triggers> -->
							<!-- 	<MultiDataTrigger> -->
							<!-- 		<MultiDataTrigger.Conditions> -->
							<!-- 			<Condition Value="0" Binding="{Binding ExtItemCountLast}" /> -->
							<!-- 			<Condition Value="1" Binding="{Binding ElementName=WinClassfTest, Path=TreeViewTitleIndex}" /> -->
							<!-- 		</MultiDataTrigger.Conditions> -->
							<!-- 		<Setter Property="Visibility" Value="Collapsed" /> -->
							<!-- 	</MultiDataTrigger> -->
							<!-- 	<Trigger Property="IsExpanded" Value="false"> -->
							<!-- 		<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" /> -->
							<!-- 	</Trigger> -->
							<!-- 	<Trigger Property="HasItems" Value="false"> -->
							<!-- 		<Setter TargetName="Expander" Property="Visibility" Value="Hidden" /> -->
							<!-- 	</Trigger> -->
							<!-- 	<Trigger Property="IsSelected" Value="true"> -->
							<!-- 		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" /> -->
							<!-- 		~1~ <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> @1@ -->
							<!-- 	</Trigger> -->



								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true" />
										<Condition Property="IsSelectionActive" Value="false" />
									</MultiTrigger.Conditions>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
									<!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>


			<Style x:Key="Lv1_LvStyle"
					TargetType="{x:Type ListView}"
					>
				<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ListView}">
							<Border x:Name="Bd"
									Padding="1"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
									>
								<ScrollViewer
										Padding="{TemplateBinding Padding}"
										Focusable="false"
										Template="{DynamicResource ScrollViewerControlTemplate1}"
										>
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</ScrollViewer>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border2}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsGrouping" Value="true" />
										<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
									</MultiTrigger.Conditions>
									<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!--    -->
			<!--  <Style x:Key="ExpanderRightHeaderStyle"  -->
			<!--  TargetType="{x:Type ToggleButton}"  -->
			<!--  >  -->
			<!-- 	<Setter Property="Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate TargetType="{x:Type ToggleButton}"> -->
			<!-- 				<Border Padding="{TemplateBinding Padding}"> -->
			<!--  <Grid  -->
			<!--  Background="Transparent"  -->
			<!--  SnapsToDevicePixels="False"  -->
			<!--  >  -->
			<!-- 						<Grid.RowDefinitions> -->
			<!-- 							<RowDefinition Height="19" /> -->
			<!-- 							<RowDefinition Height="*" /> -->
			<!-- 						</Grid.RowDefinitions> -->
			<!-- 						<Grid> -->
			<!-- 							<Grid.LayoutTransform> -->
			<!-- 								<TransformGroup> -->
			<!-- 									<TransformGroup.Children> -->
			<!-- 										<TransformCollection> -->
			<!-- 											<RotateTransform Angle="-90" /> -->
			<!-- 										</TransformCollection> -->
			<!-- 									</TransformGroup.Children> -->
			<!-- 								</TransformGroup> -->
			<!-- 							</Grid.LayoutTransform> -->
			<!--  <Ellipse x:Name="circle"  -->
			<!--  Width="19"  -->
			<!--  Height="19"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  Fill="{StaticResource Expander.Static.Circle.Fill}"  -->
			<!--  Stroke="{StaticResource Expander.Static.Circle.Stroke}"  -->
			<!--  />  -->
			<!--  <Path x:Name="arrow"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  Data="M 1,1.5 L 4.5,5 L 8,1.5"  -->
			<!--  SnapsToDevicePixels="false"  -->
			<!--  Stroke="{StaticResource Expander.Static.Arrow.Stroke}"  -->
			<!--  StrokeThickness="2"  -->
			<!--  />  -->
			<!-- 						</Grid> -->
			<!--  <ContentPresenter  -->
			<!--  x:Name="Cp04"  -->
			<!--  Grid.Row="1"  -->
			<!--  Margin="0,4,0,0"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Top"  -->
			<!--  RecognizesAccessKey="True"  -->
			<!--  SnapsToDevicePixels="True"  -->
			<!--  />  -->
			<!-- 					</Grid> -->
			<!-- 				</Border> -->
			<!-- 				<ControlTemplate.Triggers> -->
			<!-- 					<Trigger Property="IsChecked" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsMouseOver" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsPressed" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="StrokeThickness" Value="1.5" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsEnabled" Value="false"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 				</ControlTemplate.Triggers> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->
			<!--    -->
			<!--  <Style x:Key="ExpanderUpHeaderStyle"  -->
			<!--  TargetType="{x:Type ToggleButton}"  -->
			<!--  >  -->
			<!-- 	<Setter Property="Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate TargetType="{x:Type ToggleButton}"> -->
			<!-- 				<Border Padding="{TemplateBinding Padding}"> -->
			<!--  <Grid  -->
			<!--  Background="Transparent"  -->
			<!--  SnapsToDevicePixels="False"  -->
			<!--  >  -->
			<!-- 						<Grid.ColumnDefinitions> -->
			<!-- 							<ColumnDefinition Width="19" /> -->
			<!-- 							<ColumnDefinition Width="*" /> -->
			<!-- 						</Grid.ColumnDefinitions> -->
			<!-- 						<Grid> -->
			<!-- 							<Grid.LayoutTransform> -->
			<!-- 								<TransformGroup> -->
			<!-- 									<TransformGroup.Children> -->
			<!-- 										<TransformCollection> -->
			<!-- 											<RotateTransform Angle="180" /> -->
			<!-- 										</TransformCollection> -->
			<!-- 									</TransformGroup.Children> -->
			<!-- 								</TransformGroup> -->
			<!-- 							</Grid.LayoutTransform> -->
			<!--  <Ellipse x:Name="circle"  -->
			<!--  Width="19"  -->
			<!--  Height="19"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  Fill="{StaticResource Expander.Static.Circle.Fill}"  -->
			<!--  Stroke="{StaticResource Expander.Static.Circle.Stroke}"  -->
			<!--  />  -->
			<!--  <Path x:Name="arrow"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  Data="M 1,1.5 L 4.5,5 L 8,1.5"  -->
			<!--  SnapsToDevicePixels="false"  -->
			<!--  Stroke="{StaticResource Expander.Static.Arrow.Stroke}"  -->
			<!--  StrokeThickness="2"  -->
			<!--  />  -->
			<!-- 						</Grid> -->
			<!--  <ContentPresenter  -->
			<!--  x:Name="Cp03"  -->
			<!--  Grid.Column="1"  -->
			<!--  Margin="4,0,0,0"  -->
			<!--  HorizontalAlignment="Left"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  RecognizesAccessKey="True"  -->
			<!--  SnapsToDevicePixels="True"  -->
			<!--  />  -->
			<!-- 					</Grid> -->
			<!-- 				</Border> -->
			<!-- 				<ControlTemplate.Triggers> -->
			<!-- 					<Trigger Property="IsChecked" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsMouseOver" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsPressed" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="StrokeThickness" Value="1.5" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsEnabled" Value="false"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 				</ControlTemplate.Triggers> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->
			<!--    -->
			<!--  <Style x:Key="ExpanderLeftHeaderStyle"  -->
			<!--  TargetType="{x:Type ToggleButton}"  -->
			<!--  >  -->
			<!-- 	<Setter Property="Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate TargetType="{x:Type ToggleButton}"> -->
			<!-- 				<Border Padding="{TemplateBinding Padding}"> -->
			<!--  <Grid  -->
			<!--  Background="Transparent"  -->
			<!--  SnapsToDevicePixels="False"  -->
			<!--  >  -->
			<!-- 						<Grid.RowDefinitions> -->
			<!-- 							<RowDefinition Height="19" /> -->
			<!-- 							<RowDefinition Height="*" /> -->
			<!-- 						</Grid.RowDefinitions> -->
			<!-- 						<Grid> -->
			<!-- 							<Grid.LayoutTransform> -->
			<!-- 								<TransformGroup> -->
			<!-- 									<TransformGroup.Children> -->
			<!-- 										<TransformCollection> -->
			<!-- 											<RotateTransform Angle="90" /> -->
			<!-- 										</TransformCollection> -->
			<!-- 									</TransformGroup.Children> -->
			<!-- 								</TransformGroup> -->
			<!-- 							</Grid.LayoutTransform> -->
			<!--  <Ellipse x:Name="circle"  -->
			<!--  Width="19"  -->
			<!--  Height="19"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  Fill="{StaticResource Expander.Static.Circle.Fill}"  -->
			<!--  Stroke="{StaticResource Expander.Static.Circle.Stroke}"  -->
			<!--  />  -->
			<!--  <Path x:Name="arrow"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Center"  -->
			<!--  Data="M 1,1.5 L 4.5,5 L 8,1.5"  -->
			<!--  SnapsToDevicePixels="false"  -->
			<!--  Stroke="{StaticResource Expander.Static.Arrow.Stroke}"  -->
			<!--  StrokeThickness="2"  -->
			<!--  />  -->
			<!-- 						</Grid> -->
			<!--  <ContentPresenter  -->
			<!--  x:Name="Cp02"  -->
			<!--  Grid.Row="1"  -->
			<!--  Margin="0,4,0,0"  -->
			<!--  HorizontalAlignment="Center"  -->
			<!--  VerticalAlignment="Top"  -->
			<!--  RecognizesAccessKey="True"  -->
			<!--  SnapsToDevicePixels="True"  -->
			<!--  />  -->
			<!-- 					</Grid> -->
			<!-- 				</Border> -->
			<!-- 				<ControlTemplate.Triggers> -->
			<!-- 					<Trigger Property="IsChecked" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsMouseOver" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsPressed" Value="true"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="StrokeThickness" Value="1.5" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 					<Trigger Property="IsEnabled" Value="false"> -->
			<!-- 						<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" /> -->
			<!-- 						<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" /> -->
			<!-- 					</Trigger> -->
			<!-- 				</ControlTemplate.Triggers> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->
			<!--    -->
			<!-- <Style x:Key="ExpanderHeaderFocusVisual"> -->
			<!-- 	<Setter Property="Control.Template"> -->
			<!-- 		<Setter.Value> -->
			<!-- 			<ControlTemplate> -->
			<!-- 				<Border> -->
			<!--  <Rectangle  -->
			<!--  Margin="0"  -->
			<!--  SnapsToDevicePixels="true"  -->
			<!--  Stroke="Black"  -->
			<!--  StrokeDashArray="1 2"  -->
			<!--  StrokeThickness="1"  -->
			<!--  />  -->
			<!-- 				</Border> -->
			<!-- 			</ControlTemplate> -->
			<!-- 		</Setter.Value> -->
			<!-- 	</Setter> -->
			<!-- </Style> -->
			<!--    -->

			<Style x:Key="ExpanderDownHeaderStyle"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Padding="{TemplateBinding Padding}">
								<Grid
										Background="Transparent"
										SnapsToDevicePixels="False"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Ellipse x:Name="circle"
											Width="19"
											Height="19"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Fill="{StaticResource Expander.Static.Circle.Fill}"
											Stroke="{StaticResource Expander.Static.Circle.Stroke}"
											/>
									<!--  Data="M 1,1.5 L 4.5,5 L 8,1.5"  -->
									<Path x:Name="arrow"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="M 1,4.5  L 4.5,1  L 8,4.5"
											SnapsToDevicePixels="false"
											Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
											StrokeThickness="2"
											/>
									<ContentPresenter x:Name="Cp01"
											Grid.Column="1"
											Margin="4,0,0,0"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Center"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="True"
											/>
								</Grid>
							</Border>
							<!-- <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" /> -->
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="arrow" Property="Data" Value="M 1,1.5 L 4.5,5 L 8,1.5" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
									<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
									<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
									<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
									<Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
									<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Pressed.Circle.Fill}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="arrow" Property="Stroke" Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
									<Setter TargetName="circle" Property="Stroke" Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
									<Setter TargetName="circle" Property="Fill" Value="{StaticResource Expander.Disabled.Circle.Fill}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Exp1_Style"
					TargetType="{x:Type Expander}"
					>
				<Setter Property="Visibility" Value="Collapsed" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Expander}">
							<Border
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									CornerRadius="3"
									SnapsToDevicePixels="true"
									>
								<DockPanel HorizontalAlignment="Stretch">
									<ToggleButton x:Name="HeaderSite"
											Content="{TemplateBinding Header}"
											Margin="0"
											MinWidth="0"
											MinHeight="0"
											Padding="{TemplateBinding Padding}"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											FontFamily="{TemplateBinding FontFamily}"
											FontSize="{TemplateBinding FontSize}"
											FontStretch="{TemplateBinding FontStretch}"
											FontStyle="{TemplateBinding FontStyle}"
											FontWeight="{TemplateBinding FontWeight}"
											Foreground="{TemplateBinding Foreground}"
											IsChecked="{Binding IsExpanded,
																					Mode=TwoWay,
																					RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
											DockPanel.Dock="Top"
											FocusVisualStyle="{x:Null}"
											Style="{StaticResource ExpanderDownHeaderStyle}"
											ContentTemplate="{TemplateBinding HeaderTemplate}"
											/>
									<!--  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"  -->
									<ContentPresenter x:Name="ExpandSite"
											Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											DockPanel.Dock="Bottom"
											Focusable="false"
											Visibility="Collapsed"
											/>
								</DockPanel>
							</Border>
							<ControlTemplate.Triggers>
								<DataTrigger Value="true" Binding="{Binding ShowNonApplicableFiles}">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>


								<Trigger Property="IsExpanded" Value="true">
									<Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
								</Trigger>
								<!-- <Trigger Property="ExpandDirection" Value="Right"> -->
								<!-- 	<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" /> -->
								<!-- </Trigger> -->
								<!-- <Trigger Property="ExpandDirection" Value="Up"> -->
								<!-- 	<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" /> -->
								<!-- </Trigger> -->
								<!-- <Trigger Property="ExpandDirection" Value="Left"> -->
								<!-- 	<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" /> -->
								<!-- 	<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" /> -->
								<!-- </Trigger> -->
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ResourceDictionary>

	</Window.Resources>

	<Grid>

		<Grid.RowDefinitions>
			<!--  0  -->
			<RowDefinition Height="Auto" />
			<!--  1  -->
			<RowDefinition Height="Auto" />
			<!--  2  -->
			<RowDefinition Height="Auto" />
			<!--  3  -->
			<RowDefinition Height="*" />
			<!--  4  non-applicable files  -->
			<RowDefinition Height="Auto" />
			<!--  5  -->
			<RowDefinition Height="Auto" />

			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<StackPanel
				Grid.ColumnSpan="2"
				Margin="5,5,5,0"
				Orientation="Vertical"
				>

			<DockPanel Margin="0">

				<Label x:Name="Label10"
						Content="Validate Classifications against Sample Files"
						Margin="0,0,0,5"
						Padding="5,3,0,5"
						VerticalAlignment="Top"
						FontSize="14"
						Background="{StaticResource Win.Title.Background}"
						Foreground="White"
						DockPanel.Dock="Top"
						/>



				<Border Style="{StaticResource Border.Settings.Title}">

					<Label x:Name="Label31"
							Content="Sheet Organization File"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">

					<TextBox x:Name="tbx32"
							HorizontalAlignment="Stretch"
							DataContext="{Binding ElementName=WinClassfTest,
																		Path=ClassificationFile.FileName,
																		FallbackValue='file'}"
							d:DataContext="{Binding Source={x:Static sample:SampleData.FullFilePath}}"
							IsReadOnly="True"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding Mode=OneWay}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>

			</DockPanel>


			<DockPanel Margin="0,5,0,0">

				<Border Style="{StaticResource Border.Settings.Title}">

					<Label x:Name="Label36"
							Content="Sheet Sample File Path"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx34"
							HorizontalAlignment="Stretch"
							IsReadOnly="True"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=ClassificationFile.SampleFileName,
														 Mode=OneWay,
														 FallbackValue='file'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<DockPanel Margin="0,5,0,0">

				<Border Style="{StaticResource Border.Settings.Title}">
					<Label x:Name="Label38"
							Content="Sheet Sample File Building"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx38"
							IsReadOnly="True"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=PhaseBuilding,
														 Mode=OneWay,
														 FallbackValue='building'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<DockPanel
					Margin="0,5,0,0"
					Visibility="Collapsed"
					>

				<Border Style="{StaticResource Border.Settings.Title}">
					<Label x:Name="Label40"
							Content="Is Configured"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx40"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=IsConfigured,
														 Mode=OneWay,
														 FallbackValue='true'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<!--    -->
			<!--    -->
			<!-- <DockPanel Margin="0,0,0,0"> -->
			<!--    -->
			<!--  <Button x:Name="BtnTest2"  -->
			<!--  Content="Test"  -->
			<!--  Margin="0,15,0,15"  -->
			<!--  Width="{StaticResource Normal.Button.Width}"  -->
			<!--  Height="{StaticResource Normal.Button.Height}"  -->
			<!--  HorizontalAlignment="Left"  -->
			<!--  VerticalAlignment="Bottom"  -->
			<!--  DockPanel.Dock="right"  -->
			<!--  Template="{StaticResource Button.Normal.ControlTemplate}"  -->
			<!--  Click="BtnTest_OnClick"  -->
			<!--  >  -->
			<!-- 		<Button.Style> -->
			<!--  <Style  -->
			<!--  TargetType="Button"  -->
			<!--  BasedOn="{StaticResource Button.Normal.Style}"  -->
			<!--  >  -->
			<!-- 			</Style> -->
			<!-- 		</Button.Style> -->
			<!-- 		<Button.Triggers> -->
			<!--  <EventTrigger  -->
			<!--  RoutedEvent="Button.Click"  -->
			<!--  SourceName="BtnTest2"  -->
			<!--  >  -->
			<!-- 				<BeginStoryboard Name="BtnTestStoryBoard"> -->
			<!-- 					<Storyboard> -->
			<!--  <BooleanAnimationUsingKeyFrames  -->
			<!--  Storyboard.TargetName="BtnTest2"  -->
			<!--  Storyboard.TargetProperty="IsEnabled"  -->
			<!--  >  -->
			<!--  <DiscreteBooleanKeyFrame  -->
			<!--  Value="False"  -->
			<!--  KeyTime="00:00:00.0"  -->
			<!--  />  -->
			<!-- 						</BooleanAnimationUsingKeyFrames> -->
			<!-- 					</Storyboard> -->
			<!-- 				</BeginStoryboard> -->
			<!--    -->
			<!-- 			</EventTrigger> -->
			<!-- 		</Button.Triggers> -->
			<!-- 	</Button> -->
			<!--    -->
			<!--    -->
			<!-- </DockPanel> -->


		</StackPanel>

		<DockPanel
				Grid.Column="0"
				Grid.Row="6"
				Grid.ColumnSpan="2"
				Margin="5"
				HorizontalAlignment="Stretch"
				>

			<Button x:Name="BtnTest"
					Content="Test"
					Margin="0,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Left"
					VerticalAlignment="Bottom"
					DockPanel.Dock="Left"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnTest_OnClick"
					>
				<Button.Style>
					<Style
							TargetType="Button"
							BasedOn="{StaticResource Button.Normal.Style}"
							>
					</Style>
				</Button.Style>
				<Button.Triggers>
					<EventTrigger
							RoutedEvent="Button.Click"
							SourceName="BtnTest"
							>
						<BeginStoryboard>
							<Storyboard>
								<BooleanAnimationUsingKeyFrames
										Storyboard.TargetName="BtnTest"
										Storyboard.TargetProperty="IsEnabled"
										>
									<DiscreteBooleanKeyFrame
											Value="False"
											KeyTime="00:00:00.0"
											/>
								</BooleanAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard>

					</EventTrigger>
				</Button.Triggers>
			</Button>

			<Button x:Name="BtnDone"
					Content="Done"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					DockPanel.Dock="right"
					Style="{StaticResource Button.Normal.Style}"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnDone_OnClick"
					/>

			<Button x:Name="BtnExpand"
					Content="{Binding ExpCollapseState,
														FallbackValue='undefined'}"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					FontSize="11"
					DockPanel.Dock="right"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnExpand_OnClick"
					>
				<Button.Style>
					<Style
							TargetType="Button"
							BasedOn="{StaticResource Button.Normal.Style}"
							>
					</Style>
				</Button.Style>
			</Button>

			<Button x:Name="BtnDebug"
					Content="Debug"
					Margin="5,0,0,0"
					Width="{StaticResource Normal.Button.Width}"
					Height="{StaticResource Normal.Button.Height}"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					DockPanel.Dock="right"
					Style="{StaticResource Button.Normal.Style}"
					Template="{StaticResource Button.Normal.ControlTemplate}"
					Click="BtnDebug_OnClick"
					/>

		</DockPanel>


		<Label x:Name="Label21"
				Content="{Binding TreeViewTitle,
													FallbackValue='Title'}"
				Grid.Column="0"
				Grid.Row="1"
				Grid.ColumnSpan="2"
				Margin="5,10,5,0"
				Padding="2,1,2,2"
				VerticalAlignment="Bottom"
				FontSize="14"
				Background="{StaticResource Win.Title.Background}"
				Foreground="White"
				/>

		<Label x:Name="Label22"
				Content="{Binding TestFileDescription,
													FallbackValue='Description'}"
				Grid.Column="0"
				Grid.Row="2"
				Grid.ColumnSpan="2"
				Margin="5,5,5,0"
				Padding="2,1,2,2"
				VerticalAlignment="Bottom"
				FontSize="12"
				Background="{StaticResource Win.Title.Background}"
				Foreground="White"
				/>

		<ProgressBar x:Name="Pb1"
				Grid.Column="0"
				Grid.Row="3"
				Grid.ColumnSpan="2"
				Margin="5,3,5,0"
				Height="2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="top"
				HorizontalContentAlignment="Stretch"
				Background="Transparent"
				BorderThickness="0"
				Maximum="{Binding Pb1MaximumValue}"
				ScrollViewer.VerticalScrollBarVisibility="Disabled"
				/>
		<!--  Value="{Binding Pb1_Value}"  -->

		<TreeView x:Name="Tv1"
				Grid.Column="0"
				Grid.Row="3"
				Grid.ColumnSpan="2"
				Margin="5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				DataContext="{Binding Path=BaseOfTree}"
				d:DataContext="{Binding Source={x:Static sample:SampleData.TreeBase}}"
				Background="Transparent"
				Foreground="White"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Visibility="Visible"
				ItemContainerStyle="{DynamicResource Tv1_ItemContainerStyle}"
				ItemTemplate="{DynamicResource Tv1_ItemTemplate}"
				ItemsSource="{Binding ChildrenView}"
				Style="{DynamicResource Tv1_TvStyle}"
				>

			<TreeView.Resources>

				<HierarchicalDataTemplate x:Key="Tv1_ItemTemplate"
						DataType="node:TreeNode"
						ItemsSource="{Binding ChildrenView}"
						>

					<Grid HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<DockPanel
								Grid.Column="0"
								Grid.Row="0"
								Grid.ColumnSpan="2"
								HorizontalAlignment="Stretch"
								>

							<Border
									DockPanel.Dock="Left"
									Style="{StaticResource Border.BookMark.Title}"
									>

								<DockPanel>

									<ToggleButton x:Name="Lv1_visibility"
											Margin="0,1,0,0"
											Height="{StaticResource BkMrkItemRowHeightDbl}"
											VerticalAlignment="Center"
											Background="Transparent"
											IsChecked="{Binding Item.IsVisible,
																					Mode=TwoWay,
																					FallbackValue=false}"
											ClickMode="Press"
											DockPanel.Dock="Left"
											>
										<ToggleButton.Style>
											<Style
													TargetType="ToggleButton"
													BasedOn="{StaticResource ExpandCollapseToggleStyle01}"
													>
												<Setter Property="Visibility" Value="Visible" />
												<Setter Property="Foreground" Value="Red" />
												<Setter Property="IsEnabled" Value="True" />
												<Style.Triggers>
													<DataTrigger Value="0" Binding="{Binding Item.MergeItems.Count}">
														<Setter Property="IsEnabled" Value="False" />
														<Setter Property="Foreground" Value="PaleVioletRed" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ToggleButton.Style>
									</ToggleButton>

									<Label
											Content="{Binding Path=Item.Title,
																				FallbackValue=title}"
											Margin="0,0,0,2"
											Style="{StaticResource Label.BookMark.Title}"
											/>

									<Label
											Content="{Binding ExtMergeItemCount,
																				Mode=OneWay,
																				FallbackValue=0}"
											Margin="5,0,5,2"
											Padding="0"
											ContentStringFormat="{}( {0} Total Merge Items )"
											Style="{StaticResource Label.BookMark.Title}"
											/>

								</DockPanel>
							</Border>
						</DockPanel>


						<DockPanel x:Name="Dp01"
								Grid.Column="0"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								>

							<!--  Tv1 item  -->
							<ListView x:Name="Lv1"
									Margin="{StaticResource Listview.ItemList.Margin}"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Bottom"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Bottom"
									Background="Transparent"
									BorderThickness="0"
									ScrollViewer.CanContentScroll="False"
									ScrollViewer.HorizontalScrollBarVisibility="Disabled"
									ScrollViewer.VerticalScrollBarVisibility="Disabled"
									ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
									ItemsSource="{Binding Item.MergeItems}"
									>
								<ListView.ItemTemplate>

									<DataTemplate DataType="mergeSupport:MergeItem">
										<Grid x:Name="Gd01"
												Margin="3,0,5,0"
												>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition Width="Auto" MinWidth="100" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>

											<Path
													Margin="0,0,8,0"
													Width="{StaticResource ListView.Item.Star.Width}"
													Height="{StaticResource ListView.Item.Star.Height}"
													Data="{StaticResource Icon.Svg.Star}"
													Fill="{StaticResource Path.Plus.Star.Fill}"
													RenderTransformOrigin="0.5,0.5"
													Stretch="UniformToFill"
													StrokeThickness="0"
													>
												<!-- <Path.RenderTransform> -->
												<!-- 	<RotateTransform Angle="270" CenterX="0" CenterY="0" /> -->
												<!-- </Path.RenderTransform> -->
											</Path>

											<Label
													Content="{Binding Path=FilePath.FileNameObject.SheetNumber}"
													Grid.Column="1"
													Grid.Row="0"
													Margin="0,0,10,2"
													Padding="0,2,0,0"
													Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																							 Path=Foreground}"
													Style="{StaticResource Label.Base}"
													/>
											<Label
													Content="{Binding Path=FilePath.FileNameObject.SheetTitle}"
													Grid.Column="2"
													Grid.Row="0"
													Margin="10,0,10,2"
													Padding="0,2,0,0"
													Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																							 Path=Foreground}"
													Style="{StaticResource Label.Base}"
													/>

										</Grid>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>

							<DockPanel.Style>
								<Style TargetType="DockPanel">
									<Setter Property="Visibility" Value="Visible" />
									<Style.Triggers>
										<DataTrigger Value="false" Binding="{Binding Item.IsVisible}">
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger>
										<!-- <DataTrigger Value="false" Binding="{Binding IsExpandedEx, ElementName=WinClassfTest}"> -->
										<!-- 	<Setter Property="Visibility" Value="Collapsed" /> -->
										<!-- </DataTrigger> -->
									</Style.Triggers>
								</Style>
							</DockPanel.Style>

						</DockPanel>
					</Grid>

				</HierarchicalDataTemplate>

			</TreeView.Resources>

		</TreeView>

		<Expander x:Name="Exp1"
				Grid.Column="0"
				Grid.Row="4"
				Grid.ColumnSpan="2"
				Margin="5,0,5,0"
				MaxHeight="140"
				Padding="-1"
				HorizontalAlignment="Stretch"
				IsExpanded="true"
				ExpandDirection="Down"
				Style="{DynamicResource Exp1_Style}"
				>

			<Expander.Header>
				<DockPanel HorizontalAlignment="Stretch">
					<Label x:Name="Label24"
							Content="{Binding NonApplicableFilesDescription,
																FallbackValue='count'}"
							Margin="0,0,-1,0"
							Padding="5,1,2,2"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center"
							HorizontalContentAlignment="Stretch"
							FontSize="14"
							Background="{StaticResource Win.Title.Background}"
							Foreground="White"
							/>
				</DockPanel>
			</Expander.Header>

			<!--  non-applicable items  -->
			<ListView x:Name="Lv3"
					Margin="0,5,0,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					DataContext="{Binding Path=Classify.NonApplicableFiles}"
					d:DataContext="{Binding Source={x:Static sample:SampleData.NonApplicableFiles}}"
					Background="Transparent"
					ScrollViewer.CanContentScroll="False"
					ScrollViewer.HorizontalScrollBarVisibility="Visible"
					ScrollViewer.VerticalScrollBarVisibility="Visible"
					ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
					ItemsSource="{Binding}"
					Style="{DynamicResource Lv1_LvStyle}"
					>


				<ListView.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<Label
									Content="{Binding Key}"
									Grid.Column="0"
									Grid.Row="0"
									Padding="0"
									ContentStringFormat="Building {0}"
									DockPanel.Dock="Top"
									Style="{StaticResource Label.BookMark.Title}"
									/>

							<!--  part of Lv3 / non-applicable items  -->
							<ListView x:Name="Lv4_lv3"
									Grid.Column="0"
									Grid.Row="1"
									Background="Transparent"
									BorderThickness="0"
									IsTabStop="False"
									DockPanel.Dock="Bottom"
									Focusable="False"
									ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
									ItemsSource="{Binding Value}"
									>

								<ListView.ItemTemplate>
									<DataTemplate>
										<Grid
												Margin="10,0,0,0"
												HorizontalAlignment="Stretch"
												VerticalAlignment="Stretch"
												>

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="24" />
												<ColumnDefinition Width="Auto" MinWidth="100" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="*" />
											</Grid.RowDefinitions>
											<Path
													Grid.Column="0"
													Grid.Row="0"
													Margin="0,0,10,0"
													Width="{StaticResource ListView.Item.Star.Width}"
													Height="{StaticResource ListView.Item.Star.Height}"
													Data="{StaticResource Icon.Svg.Star}"
													Fill="{StaticResource Path.Plus.Star.Fill}"
													RenderTransformOrigin="0.5,0.5"
													Stretch="UniformToFill"
													StrokeThickness="0"
													>
												<!--  Data="M 0,0 4,8 8,0 z"  -->
												<!-- <Path.RenderTransform> -->
												<!-- 	<RotateTransform Angle="270" CenterX="0" CenterY="0" /> -->
												<!-- </Path.RenderTransform> -->
											</Path>

											<Label
													Content="{Binding FileNameObject.SheetNumber}"
													Grid.Column="1"
													Grid.Row="0"
													Margin="0,0,5,0"
													Padding="0"
													Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																							 Path=Foreground}"
													Style="{StaticResource Label.Base}"
													/>

											<Label
													Content="{Binding FileNameObject.SheetTitle}"
													Grid.Column="2"
													Grid.Row="0"
													Margin="0,0,5,0"
													Padding="0"
													Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																							 Path=Foreground}"
													Style="{StaticResource Label.Base}"
													/>

										</Grid>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>


		</Expander>

		<!-- 	<Grid.Style> -->
		<!-- 		<Style TargetType="Grid"> -->
		<!-- 			<Setter Property="Visibility" Value="Collapsed" /> -->
		<!-- 			<Style.Triggers> -->
		<!-- 				<DataTrigger Value="true" Binding="{Binding ShowNonApplicableFiles}"> -->
		<!-- 					<Setter Property="Visibility" Value="Visible" /> -->
		<!-- 				</DataTrigger> -->
		<!-- 			</Style.Triggers> -->
		<!-- 		</Style> -->
		<!-- 	</Grid.Style> -->
		<!--    -->
		<!-- </Grid> -->


		<TextBox
				Grid.Column="0"
				Grid.Row="5"
				Grid.ColumnSpan="2"
				Background="Transparent"
				Foreground="White"
				HorizontalScrollBarVisibility="Visible"
				Text="{Binding Tbx1Message,
											 Mode=OneWay}"
				VerticalScrollBarVisibility="Visible"
				Visibility="Collapsed"
				/>




	</Grid>
</Window>
