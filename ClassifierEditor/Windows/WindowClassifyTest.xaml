<Window x:Name="WinClassfTest"
		x:Class="ClassifierEditor.Windows.WindowClassifyTest"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:ClassifierEditor.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:mergeSupport="clr-namespace:AndyShared.MergeSupport;assembly=WpfShared"
		xmlns:node="clr-namespace:AndyShared.ClassificationDataSupport.TreeSupport;assembly=WpfShared"
		xmlns:sample="clr-namespace:ClassifierEditor.SampleData"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Title="Classify Confirmation"
		Width="500"
		Height="650"
		FontFamily="Tahoma"
		FontSize="12"
		Closing="WinClassfTest_Closing"
		DataContext="{Binding ElementName=WinClassfTest}"
		Initialized="WinClassfTest_Initialized"
		Loaded="WinClassfTest_Loaded"
		ShowInTaskbar="False"
		mc:Ignorable="d"
		Background="{DynamicResource Window.Background}"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/ScrollBar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterVisualResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconResources.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
			<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
			<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
			<SolidColorBrush x:Key="Path.Plus.Fill">Lime</SolidColorBrush>

			<sys:Double x:Key="BkMrkItemHeight">24</sys:Double>
			<sys:Double x:Key="BkMrkIconWidthDbl">24</sys:Double>
			<sys:Double x:Key="BkMrkItemRowHeightDbl">36</sys:Double>

			<GridLength x:Key="BkMrkItemRowHeight">36</GridLength>
			<GridLength x:Key="BkMrkIconWidth">24</GridLength>

			<Thickness x:Key="Listview.ItemList.Margin"
					Bottom="5"
					Left="{StaticResource BkMrkIconWidthDbl}"
					Right="0"
					Top="2"
					/>

			<Style x:Key="Label.Base"
					TargetType="{x:Type Label}"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>

			<Style x:Key="Label.Settings.Title"
					TargetType="Label"
					BasedOn="{StaticResource Label.Base}"
					>
				<Setter Property="Padding" Value="15,0,15,1" />
			</Style>

			<Style x:Key="Label.BookMark.Title"
					TargetType="Label"
					BasedOn="{StaticResource Label.Base}"
					>
				<Setter Property="Margin" Value="5,0,0,2" />
				<Setter Property="Padding" Value="5,0,0,0" />
				<Setter Property="FontSize" Value="16" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
			</Style>


			<Style x:Key="TextBox.Base"
					TargetType="TextBox"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>

			<Style x:Key="TextBox.Setting.Value"
					TargetType="TextBox"
					BasedOn="{StaticResource TextBox.Base}"
					>
				<Setter Property="Padding" Value="8,0,8,1" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="FontSize" Value="12" />
				<Setter Property="Foreground">
					<Setter.Value>
						<SolidColorBrush Color="{StaticResource True.White}" />
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Border.Settings.Base"
					TargetType="Border"
					>
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="CornerRadius" Value="3" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>

			<Style x:Key="Border.Settings.Title"
					TargetType="Border"
					BasedOn="{StaticResource Border.Settings.Base}"
					>
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="BorderBrush" Value="{StaticResource Label.Status.Title.Background}" />
				<Setter Property="Background" Value="{StaticResource Label.Status.Title.Background}" />
			</Style>

			<Style x:Key="Border.Settings.Button"
					TargetType="Border"
					BasedOn="{StaticResource Border.Settings.Base}"
					>
				<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" />
				<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" />
				<Setter Property="Margin" Value="5,0,0,0" />
			</Style>

			<Style x:Key="Path.BookMark.Icon"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="4.0" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Fill" Value="{StaticResource Path.Plus.Fill}" />
				<Setter Property="Data" Value="{StaticResource Icon.Svg.SelectFolder}" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Stretch" Value="UniformToFill" />
			</Style>


			<Style x:Key="Border.BookMark.Base"
					TargetType="Border"
					>
				<Setter Property="Height" Value="{StaticResource BkMrkItemHeight}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="CornerRadius" Value="4" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>

			<Style x:Key="Border.BookMark.Title"
					TargetType="Border"
					BasedOn="{StaticResource Border.BookMark.Base}"
					>
				<Setter Property="Margin" Value="0,3,0,3" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" />
				<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" />
			</Style>


			<Style x:Key="Border.BookMark.Icon"
					TargetType="Border"
					BasedOn="{StaticResource Border.BookMark.Base}"
					>
				<Setter Property="Width" Value="{StaticResource BkMrkIconWidthDbl}" />
				<Setter Property="Margin" Value="3" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="Background" Value="{StaticResource Element.Icon.Background.Normal}" />
				<Setter Property="BorderBrush" Value="{StaticResource Element.Title.Background.Normal}" />
			</Style>





			<ControlTemplate x:Key="ScrollViewerControlTemplate1"
					TargetType="{x:Type ScrollViewer}"
					>
				<Grid x:Name="Grid"
						Background="{TemplateBinding Background}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<Rectangle x:Name="Corner"
							Grid.Column="2"
							Grid.Row="2"
							Fill="Transparent"
							/>
					<!--  Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  -->

					<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							/>
					<ScrollBar x:Name="PART_VerticalScrollBar"
							Grid.Column="2"
							Grid.Row="1"
							Margin="0,0,0,0"
							Width="{StaticResource BarSizeOutline}"
							MinWidth="{StaticResource BarSize}"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

					<!--  <ScrollBar x:Name="PART_VerticalScrollBar"  -->
					<!--  Grid.Column="2"  -->
					<!--  Grid.Row="1"  -->
					<!--  AutomationProperties.AutomationId="VerticalScrollBar"  -->
					<!--  Cursor="Arrow"  -->
					<!--  Maximum="{TemplateBinding ScrollableHeight}"  -->
					<!--  Minimum="0"  -->
					<!--  ViewportSize="{TemplateBinding ViewportHeight}"  -->
					<!--  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  -->
					<!--  Value="{Binding VerticalOffset,  -->
					<!--  Mode=OneWay,  -->
					<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
					<!--  />  -->

					<ScrollBar x:Name="PART_HorizontalScrollBar"
							Grid.Column="0"
							Grid.Row="2"
							Grid.ColumnSpan="2"
							Height="{StaticResource BarSizeOutline}"
							MinHeight="{StaticResource BarSize}"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Style="{DynamicResource ScrollBarStyle}"
							/>


					<!--  <ScrollBar x:Name="PART_HorizontalScrollBar"  -->
					<!--  Grid.Column="1"  -->
					<!--  Grid.Row="2"  -->
					<!--  AutomationProperties.AutomationId="HorizontalScrollBar"  -->
					<!--  Cursor="Arrow"  -->
					<!--  Maximum="{TemplateBinding ScrollableWidth}"  -->
					<!--  Minimum="0"  -->
					<!--  Orientation="Horizontal"  -->
					<!--  ViewportSize="{TemplateBinding ViewportWidth}"  -->
					<!--  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  -->
					<!--  Value="{Binding HorizontalOffset,  -->
					<!--  Mode=OneWay,  -->
					<!--  RelativeSource={RelativeSource TemplatedParent}}"  -->
					<!--  />  -->
				</Grid>
			</ControlTemplate>

			<Style x:Key="TextBoxStyle1"
					TargetType="{x:Type TextBox}"
					>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
				<Setter Property="HorizontalContentAlignment" Value="Left" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="AllowDrop" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<Border x:Name="border"
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<ScrollViewer x:Name="PART_ContentHost"
										Focusable="false"
										HorizontalScrollBarVisibility="Hidden"
										VerticalScrollBarVisibility="Hidden"
										Template="{DynamicResource ScrollViewerControlTemplate1}"
										/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="border" Property="Opacity" Value="0.56" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
							<Condition Property="IsSelectionActive" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
					</MultiTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="TreeViewStyle1"
					TargetType="{x:Type TreeView}"
					>

				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeView}">
							<Border x:Name="Bd"
									SnapsToDevicePixels="true"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>

								<ScrollViewer x:Name="_tv_scrollviewer_"
										Padding="{TemplateBinding Padding}"
										CanContentScroll="false"
										Focusable="false"
										HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										Background="{TemplateBinding Background}"
										Template="{DynamicResource ScrollViewerControlTemplate1}"
										>

									<DockPanel HorizontalAlignment="Stretch">

										<StackPanel
												x:Name="Sp02"
												HorizontalAlignment="Stretch"
												DockPanel.Dock="Top"
												Orientation="Vertical"
												>
											<DockPanel
													x:Name="Dp02"
													HorizontalAlignment="Stretch">

												<Border Style="{StaticResource Border.BookMark.Icon}">
													<Path x:Name="Plus"
															Style="{StaticResource Path.BookMark.Icon}"
															>
													</Path>
												</Border>
												<Border Style="{StaticResource Border.BookMark.Title}">

													<DockPanel>
														<Label
																x:Name="Lbl01"
																Content="{Binding Item.MergeItems.Count}"
																ContentStringFormat="{}({0})"
																Style="{StaticResource Label.BookMark.Title}"
																/>
														<!-- -->
														<!-- <Label -->
														<!-- 		Content="{Binding ExtItemCountLast}" -->
														<!-- 		Margin="5,0,0,5" -->
														<!-- 		Style="{StaticResource Label.BookMark.Title}" -->
														<!-- 		/> -->
														<!-- -->
														<!-- -->
														<!-- <Label -->
														<!-- 		Content="{Binding ExtItemCountCurrent}" -->
														<!-- 		Margin="5,0,0,5" -->
														<!-- 		Style="{StaticResource Label.BookMark.Title}" -->
														<!-- 		/> -->

														<Label
																x:Name="Lbl02"
																Content="{Binding ElementName=WinClassfTest,
																									Path=TreeBaseTitle,
																									FallbackValue='Title'}"

																Padding="0"
																DataContext="{Binding}"
																DockPanel.Dock="Left"
																Style="{StaticResource Label.BookMark.Title}"
																/>

													</DockPanel>

												</Border>

											</DockPanel>

											<ListView
													x:Name="Lv02"
													Margin="{StaticResource Listview.ItemList.Margin}"
													Width="Auto"
													Padding="0"
													HorizontalAlignment="Stretch"
													ScrollViewer.CanContentScroll="False"
													ScrollViewer.HorizontalScrollBarVisibility="Disabled"
													ScrollViewer.VerticalScrollBarVisibility="Disabled"
													Background="Transparent"
													BorderThickness="0"
													ItemsSource="{Binding Item.MergeItems}"
													>

												<ListView.ItemTemplate>
													<DataTemplate 
															x:Name="Dt02"
															DataType="mergeSupport:MergeItem">
														<Grid 
																x:Name="Gd03"
																Margin="1,0,0,0">

															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition Width="Auto" MinWidth="100" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>

															<Grid.RowDefinitions>
																<RowDefinition Height="20" />
															</Grid.RowDefinitions>

															<Path
																	Margin="0,0,10,0"
																	Width="10"
																	Height="10"
																	Data="M 0,0 4,8 8,0 z"
																	Fill="red"
																	RenderTransformOrigin="0.5,0.5"
																	Stretch="UniformToFill"
																	StrokeThickness="0"
																	>
																<Path.RenderTransform>
																	<RotateTransform Angle="270" CenterX="0" CenterY="0" />
																</Path.RenderTransform>
															</Path>

															<Label
																	x:Name="Lbl03"
																	Content="{Binding Path=FilePath.FileNameObject.SheetNumber}"
																	Grid.Column="1"
																	Grid.Row="0"
																	Margin="0,0,10,0"
																	Padding="0,2,0,0"
																	Foreground="White"
																	/>
															<Label
																	x:Name="Lbl04"
																	Content="{Binding Path=FilePath.FileNameObject.SheetTitle}"
																	Grid.Column="2"
																	Grid.Row="0"
																	Margin="20,0,10,0"
																	Padding="0,2,0,0"
																	Foreground="White"
																	/>

														</Grid>
													</DataTemplate>
												</ListView.ItemTemplate>
											</ListView>
										</StackPanel>

										<ItemsPresenter DockPanel.Dock="Bottom" />

									</DockPanel>
								</ScrollViewer>

							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
								</Trigger>
								<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
									<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="TreeViewItemFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<PathGeometry x:Key="TreeArrow"
					Figures="M0,0 L0,6 L6,0 z"
					/>

			<Style x:Key="ExpandCollapseToggleStyle"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="16" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border
									Width="16"
									Height="16"
									Padding="0"
									Background="#222222"
									>
								<Path x:Name="ExpandPath"
										Width="10"
										Height="10"
										Data="M 0,0 4,8 8,0 z"
										Fill="red"
										RenderTransformOrigin="0.5,0.5"
										Stretch="UniformToFill"
										StrokeThickness="0"
										>
									<Path.RenderTransform>
										<RotateTransform Angle="270" CenterX="0" CenterY="0" />
									</Path.RenderTransform>
								</Path>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="ExpandPath" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="0" />
										</Setter.Value>
									</Setter>
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
										<Condition Property="IsChecked" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>


			<!-- <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
			<Style x:Key="TreeViewItemStyle1"
					TargetType="{x:Type TreeViewItem}"
			>
				<Setter Property="Visibility" Value="Visible"/>
				<Setter Property="Width" Value="Auto" />
				<Setter Property="IsExpanded" Value="{Binding ElementName=WinClassfTest, Path=IsExpandedEx}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Padding" Value="1,0,0,0" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate 
								x:Name="Ct01"
								
								TargetType="{x:Type TreeViewItem}">
							<Grid
									x:Name="GdTvi01"
							>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="{StaticResource BkMrkIconWidth}" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<ToggleButton x:Name="Expander"
										Grid.Column="0"
										Grid.Row="0"
										Height="{StaticResource BkMrkItemRowHeightDbl}"
										VerticalAlignment="Top"
										ClickMode="Press"
										IsChecked="{Binding IsExpanded,
																				RelativeSource={RelativeSource TemplatedParent}}"
										Style="{StaticResource ExpandCollapseToggleStyle}"
										/>
								<Border x:Name="Bd"
										Grid.Column="1"
										Grid.Row="0"
										Width="Auto"
										Padding="{TemplateBinding Padding}"
										SnapsToDevicePixels="true"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										>
									<ContentPresenter x:Name="PART_Header"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											ContentSource="Header"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											/>
								</Border>
								<ItemsPresenter x:Name="ItemsHost"
										Grid.Column="1"
										Grid.Row="1"
										/>
							</Grid>
							<ControlTemplate.Triggers>
								
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
								
										<Condition Binding="{Binding ExtItemCountLast}" Value="0" />
										<Condition Binding="{Binding ElementName=WinClassfTest, Path=TreeViewTitleIndex}" Value="1" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Visibility" Value="Collapsed" />
								</MultiDataTrigger>
								<Trigger Property="IsExpanded" Value="false">
									<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
								</Trigger>
								<Trigger Property="HasItems" Value="false">
									<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
								</Trigger>
								<Trigger Property="IsSelected" Value="true">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true" />
										<Condition Property="IsSelectionActive" Value="false" />
									</MultiTrigger.Conditions>
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>


		</ResourceDictionary>

	</Window.Resources>

	<Grid>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />

			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<StackPanel
				Grid.ColumnSpan="2"
				Margin="5,5,5,0"
				Orientation="Vertical"
				>

			<DockPanel Margin="0">

				<Border Style="{StaticResource Border.Settings.Title}">

					<Label x:Name="Label31"
							Content="Sheet Organization File"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">

					<TextBox x:Name="tbx32"
							HorizontalAlignment="Stretch"
							d:DataContext="{Binding Source={x:Static sample:SampleData.FullFilePath}}"
							DataContext="{Binding ElementName=WinClassfTest,
																		Path=ClassificationFile.FileName,
																		FallbackValue='file'}"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding Mode=OneWay}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>

			</DockPanel>


			<DockPanel Margin="0,5,0,0">

				<Border Style="{StaticResource Border.Settings.Title}">

					<Label x:Name="Label36"
							Content="Sheet Sample File Path"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx34"
							HorizontalAlignment="Stretch"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=ClassificationFile.SampleFileName,
														 Mode=OneWay,
														 FallbackValue='file'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<DockPanel Margin="0,5,0,0">

				<Border Style="{StaticResource Border.Settings.Title}">
					<Label x:Name="Label38"
							Content="Sheet Sample File Building"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx38"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=PhaseBuilding,
														 Mode=OneWay,
														 FallbackValue='building'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>

			<DockPanel
					Margin="0,5,0,0"
					Visibility="Collapsed"
					>

				<Border Style="{StaticResource Border.Settings.Title}">
					<Label x:Name="Label40"
							Content="Is Configured"
							Style="{StaticResource Label.Settings.Title}"
							/>
				</Border>

				<Border Style="{StaticResource Border.Settings.Button}">
					<TextBox x:Name="Tbx40"
							HorizontalScrollBarVisibility="Hidden"
							MaxLines="1"
							MinLines="1"
							ScrollViewer.CanContentScroll="True"
							Text="{Binding ElementName=WinClassfTest,
														 Path=IsConfigured,
														 Mode=OneWay,
														 FallbackValue='true'}"
							VerticalScrollBarVisibility="Disabled"
							Style="{StaticResource TextBox.Setting.Value}"
							>
					</TextBox>
				</Border>
			</DockPanel>



			<DockPanel Margin="0,0,0,0">

				<Button x:Name="BtnTest"
						Content="Test"
						Margin="0,15,0,15"
						Width="{StaticResource Normal.Button.Width}"
						Height="{StaticResource Normal.Button.Height}"
						HorizontalAlignment="Left"
						VerticalAlignment="Bottom"
						DockPanel.Dock="right"
						Click="BtnTest_OnClick"
						Style="{StaticResource Button.Normal.Style}"
						Template="{StaticResource Button.Normal.ControlTemplate}"
						/>

			</DockPanel>


		</StackPanel>

		<Button x:Name="BtnExpand"
				Content="Expand"
				Grid.Column="1"
				Grid.Row="5"
				Margin="5,5,100,5"
				Width="{StaticResource Normal.Button.Width}"
				Height="{StaticResource Normal.Button.Height}"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				DockPanel.Dock="right"
				Click="BtnExpand_OnClick"
				Style="{StaticResource Button.Normal.Style}"
				Template="{StaticResource Button.Normal.ControlTemplate}"
				/>

		<Button x:Name="BtnDone"
				Content="Done"
				Grid.Column="1"
				Grid.Row="5"
				Margin="5"
				Width="{StaticResource Normal.Button.Width}"
				Height="{StaticResource Normal.Button.Height}"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				DockPanel.Dock="right"
				Click="BtnDone_OnClick"
				Style="{StaticResource Button.Normal.Style}"
				Template="{StaticResource Button.Normal.ControlTemplate}"
				/>

		<Label x:Name="Label21"
				Content="{Binding TreeViewTitle,
													FallbackValue='Title'}"
				Grid.Column="0"
				Grid.Row="1"
				Grid.ColumnSpan="2"
				Margin="5,0,5,0"
				Padding="2,1,2,2"
				VerticalAlignment="Bottom"
				FontSize="13"
				Background="{StaticResource Win.Title.Background}"
				Foreground="White"
				/>

		<Label x:Name="Label22"
				Content="{Binding TestFileDescription,
													FallbackValue='Description'}"
				Grid.Column="0"
				Grid.Row="2"
				Grid.ColumnSpan="2"
				Margin="5,5,5,0"
				Padding="2,1,2,2"
				VerticalAlignment="Bottom"
				FontSize="13"
				Background="{StaticResource Win.Title.Background}"
				Foreground="White"
				/>

		<TreeView
				Grid.Column="0"
				Grid.Row="3"
				Grid.ColumnSpan="2"
				Grid.RowSpan="2"
				Margin="5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				d:DataContext="{Binding Source={x:Static sample:SampleData.TreeBase}}"
				DataContext="{Binding Path=BaseOfTree}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Visibility="Visible"
				Background="Transparent"
				Foreground="White"
				ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
				ItemTemplate="{DynamicResource DataTemplate1}"
				ItemsSource="{Binding ChildrenView}"
				Style="{DynamicResource TreeViewStyle1}"
				>

			<TreeView.Resources>
				<HierarchicalDataTemplate x:Key="DataTemplate1"
						DataType="node:TreeNode"
						ItemsSource="{Binding ChildrenView}"
						>

					<Grid HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<DockPanel
								Grid.Column="0"
								Grid.Row="0"
								Grid.ColumnSpan="2"
								HorizontalAlignment="Stretch"
								>
							<Border
									DockPanel.Dock="Left"
									Style="{StaticResource Border.BookMark.Icon}"
									>
								<Path x:Name="Plus"
										Style="{StaticResource Path.BookMark.Icon}"
										>
								</Path>
							</Border>


							<Border
									DockPanel.Dock="Left"
									Style="{StaticResource Border.BookMark.Title}"
									>
								<DockPanel>

									<Label
											Content="{Binding Item.MergeItems.Count}"
											ContentStringFormat="{}({0})"
											Style="{StaticResource Label.BookMark.Title}"
											/>

									<!--  <Label Margin="5,0,0,5"  -->
									<!--  Content="{Binding ExtItemCountLast}"  -->
									<!--  Style="{StaticResource Label.BookMark.Title}" />  -->
									<!--    -->
									<!--    -->
									<!--  <Label Margin="5,0,0,5"  -->
									<!--  Content="{Binding ExtItemCountCurrent}"  -->
									<!--  Style="{StaticResource Label.BookMark.Title}" />  -->

									<Label
											Content="{Binding Path=Item.Title,
																				FallbackValue=title}"
											Style="{StaticResource Label.BookMark.Title}"
											/>
								</DockPanel>
							</Border>

						</DockPanel>

						<DockPanel
								x:Name="Dp01"
								Grid.Column="0"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								>

							<ListView
									x:Name="Lv1"
									Margin="{StaticResource Listview.ItemList.Margin}"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Bottom"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Bottom"
									ScrollViewer.CanContentScroll="False"
									ScrollViewer.HorizontalScrollBarVisibility="Disabled"
									ScrollViewer.VerticalScrollBarVisibility="Disabled"
									Background="Transparent"
									BorderThickness="0"
									ItemsSource="{Binding Item.MergeItems}"
									>
								<ListView.ItemTemplate>
									<DataTemplate DataType="mergeSupport:MergeItem">
										<Grid 
												x:Name="Gd01"
												Margin="1,0,0,0">

											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition Width="Auto" MinWidth="100" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>

											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>

											<Path
													Margin="0,0,10,0"
													Width="10"
													Height="10"
													Data="M 0,0 4,8 8,0 z"
													Fill="red"
													RenderTransformOrigin="0.5,0.5"
													Stretch="UniformToFill"
													StrokeThickness="0"
													>
												<Path.RenderTransform>
													<RotateTransform Angle="270" CenterX="0" CenterY="0" />
												</Path.RenderTransform>
											</Path>

											<Label
													Content="{Binding Path=FilePath.FileNameObject.SheetNumber}"
													Grid.Column="1"
													Grid.Row="0"
													Margin="0,0,10,0"
													Padding="0,2,0,0"
													Foreground="White"
													/>
											<Label
													Content="{Binding Path=FilePath.FileNameObject.SheetTitle}"
													Grid.Column="2"
													Grid.Row="0"
													Margin="10,0,10,0"
													Padding="0,2,0,0"
													Foreground="White"
													/>

										</Grid>
									</DataTemplate>
								</ListView.ItemTemplate>

							</ListView>

						</DockPanel>

						<!-- <Grid.Style> -->
						<!-- 	<Style TargetType="Grid"> -->
						<!-- 		<Setter Property="Visibility" Value="Visible" /> -->
						<!-- 		<Style.Triggers> -->
						<!-- 			<MultiDataTrigger> -->
						<!-- 				<MultiDataTrigger.Conditions> -->
						<!-- 					<Condition Binding="{Binding ExtItemCountLast}" Value="0" /> -->
						<!-- 					<Condition Binding="{Binding ElementName=WinClassfTest, Path=TreeViewTitleIndex}" Value="1" /> -->
						<!-- 				</MultiDataTrigger.Conditions> -->
						<!-- 				<Setter Property="Visibility" Value="Collapsed" /> -->
						<!-- 			</MultiDataTrigger> -->
						<!-- 		</Style.Triggers> -->
						<!-- -->
						<!-- -->
						<!-- 	</Style> -->
						<!-- </Grid.Style> -->


					</Grid>
					<!-- </Grid> -->

				</HierarchicalDataTemplate>
			</TreeView.Resources>

		</TreeView>

		<TextBox
				Grid.Column="0"
				Grid.Row="4"
				Grid.ColumnSpan="2"
				Visibility="Collapsed"
				HorizontalScrollBarVisibility="Visible"
				Text="{Binding Tbx1Message,
											 Mode=OneWay}"
				VerticalScrollBarVisibility="Visible"
				Background="Transparent"
				Foreground="White"
				/>



	</Grid>
</Window>
