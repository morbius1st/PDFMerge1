<ResourceDictionary
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:custom="clr-namespace:ClassifierEditor.Windows.Support"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		>
	<!--  xmlns:treeSupport="clr-namespace:AndyShared.ClassificationDataSupport.TreeSupport;assembly=WpfShared"  -->

	<sys:Double x:Key="ConditionFontSize">12</sys:Double>

	<sys:Double x:Key="BarSizeOutline">12</sys:Double>
	<sys:Double x:Key="TrackWidth">4</sys:Double>
	<sys:Double x:Key="RepeatButtonLength">10</sys:Double>
	<sys:Double x:Key="RepeatButtonIconLength">6</sys:Double>
	<sys:Double x:Key="RepeatButtonIconGirth">6</sys:Double>

	<Thickness x:Key="IconMarginTop">0, 0, 0, 0</Thickness>
	<Thickness x:Key="IconMarginBottom">0, 0, 0, 0</Thickness>
	<Thickness x:Key="IconMarginLeft">0, 0, 0, 0</Thickness>
	<Thickness x:Key="IconMarginRight">0, 0, 0, 0</Thickness>

	<SolidColorBrush x:Key="Mouse.Over" Color="DeepSkyBlue"/>
	<SolidColorBrush x:Key="NotEnabled" Color="RoyalBlue"/>
	<SolidColorBrush x:Key="DropDown" Color="CornflowerBlue"/>

	<sys:Double x:Key="DropDown.Width">180.0</sys:Double>


	<ControlTemplate x:Key="Tv1ScrollViewerControlTemplate1"
			TargetType="{x:Type ScrollViewer}"
			>
		<Grid x:Name="Grid"
				Background="{TemplateBinding Background}"
				>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Rectangle x:Name="Corner"
					Grid.Column="2"
					Grid.Row="2"
					Fill="black"
					/>
			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
					Content="{TemplateBinding Content}"
					Grid.Column="0"
					Grid.Row="1"
					Grid.ColumnSpan="2"
					Margin="{TemplateBinding Padding}"
					CanContentScroll="{TemplateBinding CanContentScroll}"
					CanHorizontallyScroll="False"
					CanVerticallyScroll="False"
					ContentTemplate="{TemplateBinding ContentTemplate}"
					/>

			<ScrollBar x:Name="PART_VerticalScrollBar"
					Grid.Column="2"
					Grid.Row="1"
					Margin="0,0,0,0"
					Width="{StaticResource BarSizeOutline}"
					Value="{Binding VerticalOffset,
													Mode=OneWay,
													RelativeSource={RelativeSource TemplatedParent}}"
					Background="{StaticResource ScrollBarBkg}"
					Cursor="Arrow"
					Maximum="{TemplateBinding ScrollableHeight}"
					Minimum="0"
					ViewportSize="{TemplateBinding ViewportHeight}"
					Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
					Style="{DynamicResource ScrollBarStyle}"
					/>

			<ScrollBar x:Name="PART_HorizontalScrollBar"
					Grid.Column="1"
					Grid.Row="2"
					Height="{StaticResource BarSizeOutline}"
					MinHeight="{StaticResource BarSizeOutline}"
					Value="{Binding HorizontalOffset,
													Mode=OneWay,
													RelativeSource={RelativeSource TemplatedParent}}"
					Background="{StaticResource ScrollBarBkg}"
					AutomationProperties.AutomationId="HorizontalScrollBar"
					ClipToBounds="True"
					Cursor="Arrow"
					Maximum="{TemplateBinding ScrollableWidth}"
					Minimum="0"
					Orientation="Horizontal"
					ViewportSize="{TemplateBinding ViewportWidth}"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
					Style="{DynamicResource ScrollBarStyle}"
					/>

		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" x:Name="ComboBoxTextBox_01"
			TargetType="{x:Type TextBox}"
			>

		<Border x:Name="PART_ContentHost"
				Background="{TemplateBinding Background}"
				Focusable="False"
				/>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxToggleButton1"
			TargetType="{x:Type ToggleButton}"
			>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="20" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Border x:Name="Border"
					Grid.Column="0"
					BorderThickness="1"
					CornerRadius="2"
					/>
			<Border
					Grid.Column="0"
					Grid.ColumnSpan="2"
					Margin="0"
					Padding="0"
					Background="Transparent"
					CornerRadius="2,0,0,2"
					/>
			<Path x:Name="Arrow"
					Grid.Column="0"
					Margin="0,1.5,0,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="M 0,0 4,8 8,0 z"
					Fill="red"
					RenderTransformOrigin="0.5,0.5"
					>
				<Path.RenderTransform>
					<TransformGroup>
						<RotateTransform Angle="-90" />
					</TransformGroup>
				</Path.RenderTransform>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="true">
				<Setter
						TargetName="Arrow"
						Property="Fill"
						Value="OrangeRed"
						/>
				<Setter
						TargetName="Arrow"
						Property="RenderTransform"
						>
					<Setter.Value>
						<RotateTransform Angle="0" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTemplate1"
			TargetType="ComboBox"
			>
		<Border x:Name="bdr_cbt1"
				Margin="0,0,0,0"
				Padding="4,0,10,0"
				BorderThickness="0"
				CornerRadius="3"
				>
			<Border.Style>
				<Style TargetType="Border">
					<Setter
							Property="Background"
							Value="{Binding Background,
															RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
							/>
					<!-- <Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" /> -->

					<Style.Triggers>
						<!--  true  -->
						<Trigger Property="IsMouseOver" Value="true">
							<Setter
									Property="Background"
									Value="{Binding Path=(custom:CustomProperties.MouseOverBrush),
																	RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
									/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<!--  false  -->
							<Setter
									Property="TextElement.Foreground"
									Value="{StaticResource ItemsControl.Text.Disabled}"
									/>
							<Setter
									Property="Background"
									Value="{Binding Path=(custom:CustomProperties.NotEnabledBrush),
																	RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
									/>
						</Trigger>

					</Style.Triggers>
				</Style>
			</Border.Style>

			<Grid x:Name="cbx_gd1"
					Margin="0"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="20" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<ToggleButton x:Name="ToggleButton"
						Grid.Column="0"
						Grid.ColumnSpan="2"
						Background="{TemplateBinding Background}"
						IsChecked="{Binding IsDropDownOpen,
																Mode=TwoWay,
																RelativeSource={RelativeSource TemplatedParent}}"
						ClickMode="Press"
						Focusable="false"
						Template="{StaticResource ComboBoxToggleButton1}"
						/>

				<ContentPresenter x:Name="ContentSite"
						Content="{TemplateBinding SelectionBoxItem}"
						Grid.Column="1"
						Margin="0,0,1,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						IsHitTestVisible="False"
						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
						>

				</ContentPresenter>

				<TextBox x:Name="PART_EditableTextBox"
						Grid.Column="1"
						Margin="3,0,3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Bottom"
						Background="Transparent"
						Foreground="{TemplateBinding Foreground}"
						IsReadOnly="{TemplateBinding IsReadOnly}"
						Focusable="True"
						Visibility="Hidden"
						Style="{x:Null}"
						Template="{StaticResource ComboBoxTextBox}"
						/>

				<Popup x:Name="Popup"
						AllowsTransparency="True"
						Grid.Column="1"
						Margin="0"
						IsOpen="{TemplateBinding IsDropDownOpen}"
						Focusable="False"
						Placement="Bottom"
						PopupAnimation="Slide"
						>
					<!--  IsOpen="{TemplateBinding IsDropDownOpen}"  -->

					<Grid x:Name="DropDown"
							Margin="2,2,0,0"
							MinWidth="{TemplateBinding ActualWidth}"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							SnapsToDevicePixels="True"
							>
						<Border x:Name="DropDownBorder"
								Margin="0"
								Padding="0"
								Background="{Binding Path=(custom:CustomProperties.DropDownBrush),
																		 RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
								BorderThickness="0"
								>
							<!--  Background="{StaticResource ItemsControl.ListItem.Background.Normal}"  -->
							<!--  <Setter Property="Background" Value="{Binding Path=(custom:CustomProperties.NotEnabledBrush),  -->
							<!--  RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>  -->
							<!--  Background="{TemplateBinding Background}"  -->
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
							</Border.BorderBrush>

						</Border>

						<ScrollViewer
								Width="{TemplateBinding custom:CustomProperties.DropDownWidth}"
								Padding="0"
								SnapsToDevicePixels="True"
								Template="{DynamicResource Tv1ScrollViewerControlTemplate1}"
								>
							<StackPanel
									IsItemsHost="True"
									KeyboardNavigation.DirectionalNavigation="Contained"
									/>

						</ScrollViewer>
					</Grid>
				</Popup>

				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="MouseOver" />
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ColorAnimationUsingKeyFrames
										Storyboard.TargetName="PART_EditableTextBox"
										Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
										>
									<EasingColorKeyFrame
											Value="{StaticResource DisabledForegroundColor}"
											KeyTime="0"
											/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="EditStates">
						<VisualState x:Name="Editable">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames
										Storyboard.TargetName="PART_EditableTextBox"
										Storyboard.TargetProperty="(UIElement.Visibility)"
										>
									<DiscreteObjectKeyFrame
											Value="{x:Static Visibility.Visible}"
											KeyTime="0"
											/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames
										Storyboard.TargetName="ContentSite"
										Storyboard.TargetProperty="(UIElement.Visibility)"
										>
									<DiscreteObjectKeyFrame
											Value="{x:Static Visibility.Hidden}"
											KeyTime="0"
											/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Uneditable" />
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
			</Grid>
		</Border>

		<!-- </Border> -->
		<ControlTemplate.Triggers>

			<Trigger Property="HasItems" Value="false">
				<Setter
						TargetName="DropDownBorder"
						Property="MinHeight"
						Value="95"
						/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter
						Property="ScrollViewer.CanContentScroll"
						Value="false"
						/>
			</Trigger>
			<Trigger Property="AllowsTransparency" Value="true" SourceName="Popup">
				<Setter
						TargetName="DropDownBorder"
						Property="CornerRadius"
						Value="4"
						/>
				<Setter
						TargetName="DropDownBorder"
						Property="Margin"
						Value="0,2,0,0"
						/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<DataTemplate x:Key="CbxEx1Dt1">
		<TextBlock
				Margin="0"
				Padding="0,0,0,2"
				Text="{Binding Path=Name}"
				>
			<TextBlock.Style>
				<Style TargetType="TextBlock">
					<Setter
							Property="Foreground"
							Value="White"
							/>
					<Setter
							Property="Visibility"
							Value="Visible"
							/>
					<Style.Triggers>
						<DataTrigger Value="0" Binding="{Binding Path=OpCodeValue}">
							<Setter
									Property="Visibility"
									Value="Collapsed"
									/>
						</DataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter
									Property="Foreground"
									Value="{StaticResource ItemsControl.Text.Disabled}"
									/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</TextBlock.Style>
		</TextBlock>
	</DataTemplate>

	<Style x:Key="CbxExStyle1"
			TargetType="ComboBox"
			>
		<Setter
				Property="OverridesDefaultStyle"
				Value="true"
				/>
		<Setter
				Property="ScrollViewer.CanContentScroll"
				Value="true"
				/>
		<Setter
				Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto"
				/>
		<Setter
				Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto"
				/>
		<Setter
				Property="SnapsToDevicePixels"
				Value="true"
				/>
		<Setter
				Property="Background"
				Value="{StaticResource ItemsControl.Subject.Background.Normal}"
				/>
		<Setter
				Property="Foreground"
				Value="{StaticResource ItemsControl.Text.Normal}"
				/>
	</Style>

	<ComboBox x:Key="CbxEx1" x:Name="Cbx1"
			Margin="5,0,0,0"
			Padding="0,1,0,1"
			HorizontalAlignment="Left"
			FontSize="12"
			BorderThickness="2"
			custom:CustomProperties.MouseOverBrush="{StaticResource ItemsControl.Subject.Background.MouseOver}"
			custom:CustomProperties.NotEnabledBrush="{StaticResource ItemsControl.Subject.Background.Disabled}"
			IsEditable="False"
			custom:CustomProperties.DropDownBrushh="{StaticResource ItemsControl.ListItem.Background.Normal}"
			custom:CustomProperties.DropDownWidth="180.0"
			MaxDropDownHeight="200"
			SelectedIndex="{Binding ValueCompOpCode,
															FallbackValue='1'}"
			ItemTemplate="{StaticResource CbxEx1Dt1}"
			FocusVisualStyle="{x:Null}"
			Style="{StaticResource CbxExStyle1}"
			Template="{StaticResource ComboBoxTemplate1}"
			>

	</ComboBox>

</ResourceDictionary>