<UserControl x:Name="ListView01"
		x:Class="Sylvester.lvTestControl"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:fileSupport="clr-namespace:Sylvester.FileSupport"
		xmlns:local="clr-namespace:Sylvester"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:support="clr-namespace:Sylvester.Support"
		mc:Ignorable="d"
		d:DataContext="{Binding pm.CvRevision,
														RelativeSource={RelativeSource FindAncestor,
																													 AncestorType={x:Type local:MainWindow}},
														Mode=OneWay,
														FallbackValue='this is text'}"
		d:DesignHeight="380.2"
		d:DesignWidth="541.8"
		>


	<UserControl.Resources>

		<x:Static x:Key="Sheet"
				Member="fileSupport:FileType.SHEET_PDF"
				/>
		<x:Static x:Key="NonSheet"
				Member="fileSupport:FileType.NON_SHEET_PDF"
				/>
		<x:Static x:Key="Other"
				Member="fileSupport:FileType.OTHER"
				/>


		<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
		<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
		<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
		<SolidColorBrush x:Key="ListBox.Disabled.Border2" Color="#FFD9D9D9" />

		<Style x:Key="lvtestStyle1"
				TargetType="{x:Type ListView}"
				>
			<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
			<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
			<Setter Property="ScrollViewer.PanningMode" Value="Both" />
			<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListView}">
						<Border x:Name="Bd"
								Padding="1"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								SnapsToDevicePixels="true"
								>
							<ScrollViewer
									Padding="{TemplateBinding Padding}"
									Focusable="false"
									Template="{StaticResource ScrollViewerNarrow}"
									>
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
								<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border2}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsGrouping" Value="true" />
									<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
								</MultiTrigger.Conditions>
								<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</UserControl.Resources>

	<ListView x:Name="lvTest"
			Padding="5"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
			Foreground="White"
			Focusable="False"
			ScrollViewer.CanContentScroll="False"
			ScrollViewer.VerticalScrollBarVisibility="Auto"
			ScrollViewer.HorizontalScrollBarVisibility="Hidden"
			ItemContainerStyle="{DynamicResource ListViewItemStyle2}"
			ItemTemplate="{DynamicResource DataTemplateTest2}"
			ItemsSource="{Binding FallbackValue={x:Null}}"
			Style="{DynamicResource lvtestStyle1}"
			>

		<ListView.Resources>

			<Style x:Key="lblSheetInfo"
					TargetType="{x:Type Label}"
					>
				<Setter Property="Focusable" Value="false" />
				<Setter Property="Foreground" Value="#d8d8d8" />
				<Setter Property="Margin" Value="0,0,0,0" />
				<Setter Property="Padding" Value="0" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate x:Name="lblCtrlTemplate"
								TargetType="{x:Type Label}"
								>
							<Border
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									CornerRadius="3"
									SnapsToDevicePixels="true"
									>
								<ContentPresenter
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="#AAAAAA" />
								</Trigger>
								<DataTrigger Value="{StaticResource Sheet}" Binding="{Binding FileType}">
									<Setter Property="Foreground" Value="White" />
								</DataTrigger>
								<DataTrigger Value="{StaticResource NonSheet}" Binding="{Binding FileType}">
									<Setter Property="Foreground" Value="LightGray" />
								</DataTrigger>
								<DataTrigger Value="{StaticResource Other}" Binding="{Binding FileType}">
									<Setter Property="Foreground" Value="#BABABA" />
								</DataTrigger>

							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<DataTemplate x:Key="DataTemplateTest2" x:Name="itemTemplate"
					DataType="fileSupport:FileRevision"
					>
				<Border x:Name="Border"
						Margin="0"
						BorderThickness="1,1,3,3"
						BorderBrush="#333333"
						>

					<Grid
							Margin="0,0,0,0"
							Width="Auto"
							HorizontalAlignment="Stretch"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<CheckBox x:Name="chkBx"
								Margin="0"
								VerticalAlignment="Center"
								IsChecked="{Binding Selected,
																		FallbackValue=false}"
								Visibility="{Binding Path=CheckBoxVisibility,
																		 ElementName=ListView01}"
								>
						</CheckBox>

						<Label x:Name="testShtNum"
								Content="{Binding SheetName,
																	FallbackValue=c:\\name\\name\\name\\value.pdf}"
								Grid.Column="1"
								Margin="5,-1,0,2"
								HorizontalContentAlignment="Left"
								Style="{StaticResource lblSheetInfo}"
								/>
					</Grid>
				</Border>

			</DataTemplate>

			<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3800C3FF" />
			<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#86EEFF" />
			<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
			<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
			<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#4D26A0DA" />
			<SolidColorBrush x:Key="Item.SelectedInactive.Background2" Color="#2B5387FA" />
			<!--  />  -->
			<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF57C7FF" />
			<!--  />  -->
			<SolidColorBrush x:Key="Item.SelectedInactive.Border2" Color="#9F26A0DA" />
			<SolidColorBrush x:Key="Item.NotEnabled.Foreground" Color="#FFDADADA" />

			<Style x:Key="ListViewItemStyle2" x:Name="lvTest_lvStyle"
					TargetType="{x:Type ListViewItem}"
					>
				<Setter Property="IsSelected" Value="{Binding Selected}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<!-- <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}" /> -->
				<!-- <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}" /> -->

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate x:Name="lvCtrlTemplate"
								TargetType="{x:Type ListViewItem}"
								>
							<Border x:Name="Bd"
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
									>
								<ContentPresenter x:Name="Presenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Border>
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
								</MultiTrigger>

								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="False" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background2}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border2}" />
								</MultiTrigger>

								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Selector.IsSelectionActive" Value="True" />
										<Condition Property="IsSelected" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
								</MultiTrigger>

								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource Item.NotEnabled.Foreground}" />
								</Trigger>
								<DataTrigger Value="false" Binding="{Binding ElementName=ListView01, Path=CanSelect}">
									<Setter TargetName="Bd" Property="Background" Value="Transparent" />
									<Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
								</DataTrigger>

							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ListView.Resources>
	</ListView>

</UserControl>
