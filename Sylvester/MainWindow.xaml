<Window Name="mainwin" Title="MainWindow"
		x:Class="Sylvester.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:filesupport="clr-namespace:Sylvester.FileSupport"
		xmlns:generic="clr-namespace:System.Collections.Generic;assembly=mscorlib"
		xmlns:local="clr-namespace:Sylvester"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Width="1200"
		Height="850"
		Loaded="Mainwin_Loaded"
		mc:Ignorable="d"
		Background="#333333"
		>
	<Window.Resources>

		<sys:Double x:Key="lblRotTitleWidth">55</sys:Double>

		<filesupport:MatchStatus x:Key="match">DOES_MATCH</filesupport:MatchStatus>
		<filesupport:MatchStatus x:Key="notmatch">DOES_NOT_MATCH</filesupport:MatchStatus>
		<filesupport:MatchStatus x:Key="FileNew">NEW_FILE</filesupport:MatchStatus>

		<GridLength x:Key="glSpare">*</GridLength>

		<Style x:Key="lblHeader"
				TargetType="Label"
				>
			<Setter Property="BorderBrush" Value="DimGray" />
			<Setter Property="BorderThickness" Value="1,0,0,0" />
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Margin" Value="2,0,0,0" />
			<Setter Property="Padding" Value="2,0,3,0" />
		</Style>

		<!-- -->
		<!-- <GridLength x:Key="glChkBx">20</GridLength> -->
		<!-- <GridLength x:Key="glFolder">70</GridLength> -->
		<!-- <GridLength x:Key="glSheetNumber">120</GridLength> -->
		<!-- <GridLength x:Key="glSeparator">70</GridLength> -->
		<!-- <GridLength x:Key="glSheetName">*</GridLength> -->
		<!-- -->
		<!-- <GridLength x:Key="glRowHeight">18</GridLength> -->
		<!-- -->
		<!-- <Style x:Key="bdrMatches" -->
		<!-- 		TargetType="Border" -->
		<!-- 		> -->
		<!-- 	<Setter Property="BorderBrush" Value="Transparent" /> -->
		<!-- 	<Setter Property="BorderThickness" Value="1" /> -->
		<!-- 	<Setter Property="Margin" Value="4,1,0,1" /> -->
		<!-- </Style> -->
		<!-- -->
		<!-- -->
		<!-- <Style x:Key="lblTitle" -->
		<!-- 		TargetType="Label" -->
		<!-- 		BasedOn="{StaticResource lblHeader}" -->
		<!-- 		> -->
		<!-- 	<Setter Property="BorderThickness" Value="1,0,1,0" /> -->
		<!-- 	<Setter Property="MinWidth" Value="90" /> -->
		<!-- </Style> -->
		<!-- -->
		<!-- <Style x:Key="lblValue" -->
		<!-- 		TargetType="Label" -->
		<!-- 		> -->
		<!-- 	<Setter Property="Foreground" Value="LightGray" /> -->
		<!-- 	<Setter Property="Margin" Value="3,1,6,1" /> -->
		<!-- 	<Setter Property="Padding" Value="2,0,3,0" /> -->
		<!-- 	~1~ <Setter Property="BorderThickness" Value=".5" /> @1@ -->
		<!-- 	~1~ <Setter Property="BorderBrush" Value="Gray" /> @1@ -->
		<!-- </Style> -->


	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="110" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="60" />
		</Grid.RowDefinitions>

		<ListView Name="lvBase"
				Grid.Column="0"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				d:DataContext="{Binding ElementName=mainwin,
																Path=fm.cv}"
				DataContext="{Binding ElementName=mainwin,
															Mode=OneWay,
															Path=fm.cv}"
				ScrollViewer.CanContentScroll="False"
				Background="#444444"
				Foreground="White"
				ItemTemplate="{DynamicResource DataTemplateTest}"
				ItemsSource="{Binding}"
				>

			<ListView.Resources>

				<DataTemplate x:Key="DataTemplateTest"
						DataType="filesupport:SheetIdTest"
						>
					<Border
							CornerRadius="10"
							BorderThickness="8,1,.5,5"
							>
						<Border.BorderBrush>
							<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
								<GradientStop Offset="0.938" Color="#FF1C2F32" />
								<GradientStop Offset="0.998" Color="#FFAAEAF3" />
							</LinearGradientBrush>
						</Border.BorderBrush>
						<Border
								Margin="-8,-1,-.5,-5"
								Padding="0,0,0,5"
								CornerRadius="10"
								BorderThickness="12,2.5,.5,0"
								BorderBrush="#FFAAEAF3"
								>
							<Grid
									Margin="4,0,0,0"
									Width="Auto"
									HorizontalAlignment="Stretch"
									>
								<Grid.ColumnDefinitions>

									<ColumnDefinition Width="{StaticResource glSpare}" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>

									<RowDefinition Height="Auto" />

								</Grid.RowDefinitions>

								<StackPanel
										Grid.Column="0"
										Grid.Row="0"
										Margin="0,4,6,0"
										Orientation="Horizontal"
										>

									<StackPanel
											Margin="0"
											Width="Auto"
											Orientation="Vertical"
											>

										<!--  titles  -->
										<!--  base  -->
										<Label Content="Update"
												Margin="0"
												Padding="3,0,8,0"
												HorizontalContentAlignment="left"
												Foreground="White"
												BorderThickness="0,0,0,1"
												BorderBrush="DimGray"
												/>

										<!--  matched  -->
										<CheckBox
												Margin="0,2,0,0"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Background="#FFAAEAF3"
												BorderThickness="0,0,2,2"
												BorderBrush="DimGray"
												IsChecked="{Binding MakeChanges}"
												/>
									</StackPanel>

									<StackPanel
											Margin="0"
											Width="Auto"
											Orientation="Vertical"
											>

										<!--  titles  -->
										<!--  current  -->
										<Label Content="Current"
												Margin="0"
												Padding="3,0,3,0"
												HorizontalContentAlignment="left"
												Foreground="White"
												BorderThickness="0,0,1,1"
												BorderBrush="DimGray"
												/>

										<!--  revision  -->
										<Label Content="Revision"
												Margin="0"
												Padding="3,0,3,0"
												HorizontalContentAlignment="Left"
												Foreground="White"
												BorderThickness="0,0,1,0"
												BorderBrush="DimGray"
												/>
									</StackPanel>

									<StackPanel Orientation="Vertical">
										<StackPanel Orientation="Horizontal">
											<Label Name="ShtNum" Content="{Binding MatchedSheetNumber, FallbackValue=base value}"
													Margin="1,0,1,0"
													Padding="4,0,4,0"
													HorizontalContentAlignment="Right"
													Foreground="White"
													BorderThickness="1"
													BorderBrush="Transparent"
													/>

											<Label Name="Sep" Content="{Binding MatchedSeparator, FallbackValue=sep}"
													Margin="1,0,1,0"
													Padding="4,0,4,0"
													HorizontalContentAlignment="Center"
													Foreground="White"
													BorderThickness="1"
													BorderBrush="Transparent"
													/>

											<Label Name="ShtName" Content="{Binding MatchedSheetName, FallbackValue=sheet name}"
													Margin="1,0,1,0"
													Padding="4,0,4,0"
													HorizontalContentAlignment="Left"
													Foreground="White"
													BorderThickness="1"
													BorderBrush="Transparent"
													/>

											<Label Content="{Binding Comment, FallbackValue=comment}"
													Margin="1,0,1,0"
													Padding="4,0,0,0"
													HorizontalContentAlignment="right"
													Foreground="White"
													BorderThickness="1"
													BorderBrush="Transparent"
													/>

										</StackPanel>

										<StackPanel Orientation="Horizontal">

											<Label Name="testShtNum" Content="{Binding SheetNumber, FallbackValue=value}"
													Margin="1,0,1,0"
													Width="{Binding ElementName=ShtNum,
																					Path=ActualWidth}"
													Padding="4,0,4,0"
													HorizontalContentAlignment="Right"
													Foreground="White"
													BorderThickness="1"
													>
												<Label.Style>
													<Style TargetType="Label">
														<Setter Property="BorderBrush" Value="Transparent" />
														<Style.Triggers>
															<DataTrigger
																	Binding="{Binding Path=SheetNumberMatches}"
																	Value="false"
																	>
																<Setter Property="BorderBrush" Value="Red" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Label.Style>
											</Label>

											<Label Content="{Binding Separator, FallbackValue=s}"
													Margin="1,0,1,0"
													Width="{Binding ElementName=Sep,
																					Path=ActualWidth}"
													Padding="4,0,4,0"
													HorizontalContentAlignment="Center"
													Foreground="White"
													BorderThickness="1"
													>
												<Label.Style>
													<Style TargetType="Label">
														<Setter Property="BorderBrush" Value="Transparent" />
														<Style.Triggers>

															<DataTrigger
																	Binding="{Binding Path=SeparationMatches}"
																	Value="false"
																	>
																<Setter Property="BorderBrush" Value="Red" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Label.Style>
											</Label>

											<Label Content="{Binding SheetName, FallbackValue=name}"
													Margin="1,0,1,0"
													Width="{Binding ElementName=ShtName,
																					Path=ActualWidth}"
													Padding="4,0,4,0"
													HorizontalContentAlignment="Left"
													Foreground="White"
													BorderThickness="1"
													>
												<Label.Style>
													<Style TargetType="Label">
														<Setter Property="BorderBrush" Value="Transparent" />
														<Style.Triggers>

															<DataTrigger
																	Binding="{Binding Path=SheetNameMatches}"
																	Value="false"
																	>
																<Setter Property="BorderBrush" Value="Red" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Label.Style>
											</Label>

										</StackPanel>

									</StackPanel>
								</StackPanel>

							</Grid>
						</Border>
					</Border>

				</DataTemplate>
			</ListView.Resources>
		</ListView>

		<!-- -->
		<!-- <ListView Name="lbTest" -->
		<!-- 		Grid.Column="0" -->
		<!-- 		Grid.Row="1" -->
		<!-- 		HorizontalAlignment="Stretch" -->
		<!-- 		VerticalAlignment="Stretch" -->
		<!-- 		d:DataContext="{Binding ElementName=mainwin, -->
		<!-- 														Mode=OneWay, -->
		<!-- 														Path=fm.TestFiles.SheetFiles.Files}" -->
		<!-- 		DataContext="{Binding ElementName=mainwin, -->
		<!-- 													Mode=OneWay, -->
		<!-- 													Path=fm.TestFiles.SheetFiles.Files}" -->
		<!-- 		ScrollViewer.CanContentScroll="False" -->
		<!-- 		Background="#444444" -->
		<!-- 		Foreground="White" -->
		<!-- 		ItemContainerStyle="{DynamicResource ListViewItemStyle1}" -->
		<!-- 		ItemTemplate="{DynamicResource DataTemplateTest}" -->
		<!-- 		ItemsSource="{Binding}" -->
		<!-- 		Style="{DynamicResource ListViewStyle1}" -->
		<!-- 		> -->
		<!-- -->
		<!-- 	<ListView.Resources> -->
		<!-- -->
		<!-- 		<DataTemplate x:Key="DataTemplateTest" -->
		<!-- 				DataType="filesupport:SheetIdBase" -->
		<!-- 				> -->
		<!-- 			<StackPanel -->
		<!-- 					Margin="0" -->
		<!-- 					Orientation="Vertical" -->
		<!-- 					> -->
		<!-- 				<StackPanel Orientation="Horizontal"> -->
		<!-- 					<Label Content="File Name" -->
		<!-- 							Style="{StaticResource lblTitle}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="{Binding Path=FullFileRoute.FileName, FallbackValue=\\asdf\\asdf\\asdf\\asdf}" -->
		<!-- 							Style="{StaticResource lblValue}" -->
		<!-- 							/> -->
		<!-- 				</StackPanel> -->
		<!-- 				<StackPanel Orientation="Horizontal"> -->
		<!-- 					<Label Content="Sheet Number" -->
		<!-- 							Style="{StaticResource lblTitle}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="{Binding Path=SheetID, FallbackValue=A A1.0-1}" -->
		<!-- 							MinWidth="100" -->
		<!-- 							Style="{StaticResource lblValue}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="Separator" -->
		<!-- 							Style="{StaticResource lblTitle}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="{Binding Path=Separator, FallbackValue=-}" -->
		<!-- 							MinWidth="30" -->
		<!-- 							Style="{StaticResource lblValue}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="Sheet Name" -->
		<!-- 							Style="{StaticResource lblTitle}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="{Binding Path=SheetName, FallbackValue=Sheet Name}" -->
		<!-- 							Style="{StaticResource lblValue}" -->
		<!-- 							/> -->
		<!-- 				</StackPanel> -->
		<!-- 				<StackPanel Orientation="Horizontal"> -->
		<!-- 					<Label Content="Adj Sht Num" -->
		<!-- 							Style="{StaticResource lblTitle}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="{Binding Path=AdjustedSheetID, FallbackValue=A1 0 1}" -->
		<!-- 							MinWidth="100" -->
		<!-- 							Style="{StaticResource lblValue}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="Comment" -->
		<!-- 							Style="{StaticResource lblTitle}" -->
		<!-- 							/> -->
		<!-- 					<Label Content="{Binding Path=Comment, FallbackValue=(no comment)}" -->
		<!-- 							Style="{StaticResource lblValue}" -->
		<!-- 							/> -->
		<!-- 				</StackPanel> -->
		<!-- 			</StackPanel> -->
		<!-- 		</DataTemplate> -->
		<!-- 		<SolidColorBrush x:Key="ListBox.Static.Background" -->
		<!-- 				Color="#FFFFFFFF" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="ListBox.Static.Border" -->
		<!-- 				Color="#FFABADB3" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="ListBox.Disabled.Background" -->
		<!-- 				Color="#FFFFFFFF" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="ListBox.Disabled.Border" -->
		<!-- 				Color="#FFD9D9D9" -->
		<!-- 				/> -->
		<!-- 		<Style x:Key="ListViewStyle1" -->
		<!-- 				TargetType="{x:Type ListView}" -->
		<!-- 				> -->
		<!-- 			<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" /> -->
		<!-- 			<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" /> -->
		<!-- 			<Setter Property="BorderThickness" Value="1" /> -->
		<!-- 			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" /> -->
		<!-- 			<Setter Property="ScrollViewer.CanContentScroll" Value="true" /> -->
		<!-- 			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" /> -->
		<!-- 			<Setter Property="ScrollViewer.PanningMode" Value="Both" /> -->
		<!-- 			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" /> -->
		<!-- 			<Setter Property="Stylus.IsFlicksEnabled" Value="False" /> -->
		<!-- 			<Setter Property="Template"> -->
		<!-- 				<Setter.Value> -->
		<!-- 					<ControlTemplate TargetType="{x:Type ListView}"> -->
		<!-- 						<Border x:Name="Bd" -->
		<!-- 								Padding="1" -->
		<!-- 								SnapsToDevicePixels="true" -->
		<!-- 								Background="{TemplateBinding Background}" -->
		<!-- 								BorderThickness="{TemplateBinding BorderThickness}" -->
		<!-- 								BorderBrush="{TemplateBinding BorderBrush}" -->
		<!-- 								> -->
		<!-- 							<ScrollViewer -->
		<!-- 									Padding="{TemplateBinding Padding}" -->
		<!-- 									Focusable="false" -->
		<!-- 									> -->
		<!-- 								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" /> -->
		<!-- 							</ScrollViewer> -->
		<!-- 						</Border> -->
		<!-- 						<ControlTemplate.Triggers> -->
		<!-- 							<Trigger Property="IsEnabled" Value="false"> -->
		<!-- 								<Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" /> -->
		<!-- 								<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" /> -->
		<!-- 							</Trigger> -->
		<!-- 							<MultiTrigger> -->
		<!-- 								<MultiTrigger.Conditions> -->
		<!-- 									<Condition Property="IsGrouping" Value="true" /> -->
		<!-- 									<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" /> -->
		<!-- 								</MultiTrigger.Conditions> -->
		<!-- 								<Setter Property="ScrollViewer.CanContentScroll" Value="false" /> -->
		<!-- 							</MultiTrigger> -->
		<!-- 						</ControlTemplate.Triggers> -->
		<!-- 					</ControlTemplate> -->
		<!-- 				</Setter.Value> -->
		<!-- 			</Setter> -->
		<!-- 			<Setter Property="VerticalContentAlignment" Value="Center" /> -->
		<!-- -->
		<!-- 		</Style> -->
		<!-- -->
		<!-- -->
		<!-- 		<SolidColorBrush x:Key="Item.MouseOver.Background" -->
		<!-- 				Color="#B3FFCF00" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="Item.MouseOver.Border" -->
		<!-- 				Color="#a826A0Da" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="Item.SelectedInactive.Background" -->
		<!-- 				Color="#3DDADADA" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="Item.SelectedInactive.Border" -->
		<!-- 				Color="#FFDADADA" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="Item.SelectedActive.Background" -->
		<!-- 				Color="#3D26A0DA" -->
		<!-- 				/> -->
		<!-- 		<SolidColorBrush x:Key="Item.SelectedActive.Border" -->
		<!-- 				Color="#FF26A0DA" -->
		<!-- 				/> -->
		<!-- -->
		<!-- -->
		<!-- 		<Style x:Key="ListViewItemStyle1" -->
		<!-- 				TargetType="{x:Type ListViewItem}" -->
		<!-- 				> -->
		<!-- 			<Setter Property="Background" Value="Transparent" /> -->
		<!-- 			<Setter Property="BorderBrush" Value="Transparent" /> -->
		<!-- 			<Setter Property="BorderThickness" Value="1" /> -->
		<!-- 			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" /> -->
		<!-- 			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
		<!-- 			<Setter Property="Padding" Value="4,1" /> -->
		<!-- 			<Setter Property="SnapsToDevicePixels" Value="True" /> -->
		<!-- 			<Setter Property="Template"> -->
		<!-- 				<Setter.Value> -->
		<!-- 					<ControlTemplate TargetType="{x:Type ListViewItem}"> -->
		<!-- 						<Border x:Name="Bd" -->
		<!-- 								Padding="{TemplateBinding Padding}" -->
		<!-- 								SnapsToDevicePixels="true" -->
		<!-- 								Background="{TemplateBinding Background}" -->
		<!-- 								BorderThickness="{TemplateBinding BorderThickness}" -->
		<!-- 								BorderBrush="{TemplateBinding BorderBrush}" -->
		<!-- 								> -->
		<!-- 							<ContentPresenter -->
		<!-- 									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" -->
		<!-- 									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" -->
		<!-- 									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" -->
		<!-- 									/> -->
		<!-- 						</Border> -->
		<!-- 						<ControlTemplate.Triggers> -->
		<!-- 							<MultiTrigger> -->
		<!-- 								<MultiTrigger.Conditions> -->
		<!-- 									<Condition Property="IsMouseOver" Value="True" /> -->
		<!-- 								</MultiTrigger.Conditions> -->
		<!-- 								<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" /> -->
		<!-- 								<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" /> -->
		<!-- 							</MultiTrigger> -->
		<!-- 							<MultiTrigger> -->
		<!-- 								<MultiTrigger.Conditions> -->
		<!-- 									<Condition Property="Selector.IsSelectionActive" Value="False" /> -->
		<!-- 									<Condition Property="IsSelected" Value="True" /> -->
		<!-- 								</MultiTrigger.Conditions> -->
		<!-- 								<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" /> -->
		<!-- 								<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" /> -->
		<!-- 							</MultiTrigger> -->
		<!-- 							<MultiTrigger> -->
		<!-- 								<MultiTrigger.Conditions> -->
		<!-- 									<Condition Property="Selector.IsSelectionActive" Value="True" /> -->
		<!-- 									<Condition Property="IsSelected" Value="True" /> -->
		<!-- 								</MultiTrigger.Conditions> -->
		<!-- 								<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" /> -->
		<!-- 								<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" /> -->
		<!-- 							</MultiTrigger> -->
		<!-- 							<Trigger Property="IsEnabled" Value="False"> -->
		<!-- 								<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" /> -->
		<!-- 							</Trigger> -->
		<!-- 						</ControlTemplate.Triggers> -->
		<!-- 					</ControlTemplate> -->
		<!-- 				</Setter.Value> -->
		<!-- 			</Setter> -->
		<!-- 			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" /> -->
		<!-- 		</Style> -->
		<!-- -->
		<!-- -->
		<!-- 	</ListView.Resources> -->
		<!-- </ListView> -->


		<ListView Name="lvBase2"
				Grid.Column="1"
				Grid.Row="0"
				Grid.RowSpan="2"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				d:DataContext="{Binding ElementName=mainwin,
																Path=fm.cv2}"
				DataContext="{Binding ElementName=mainwin,
															Mode=OneWay,
															Path=fm.cv2}"
				ScrollViewer.CanContentScroll="False"
				Background="#444444"
				Foreground="White"
				ItemContainerStyle="{DynamicResource ListViewItemStyle2}"
				ItemTemplate="{DynamicResource DataTemplateTest2}"
				ItemsSource="{Binding}"
				>
			<!--  ItemContainerStyle="{DynamicResource ListViewItemStyle1}"  -->

			<ListView.Resources>

				<Style x:Key="lblRoot"
						TargetType="Label"
						>
					<Setter Property="Foreground" Value="#d8d8d8" />
					<Setter Property="Margin" Value="6,0,1,0" />
					<Setter Property="Padding" Value="4,0,4,3" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="Label">
								<Border
										Padding="{TemplateBinding Padding}"
										CornerRadius="3"
										SnapsToDevicePixels="true"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										>
									<ContentPresenter
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											/>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="#AAAAAA" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>

				<Style x:Key="lblMatched"
						TargetType="Label"
						BasedOn="{StaticResource lblRoot}"
						>
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileNew}"
								Value="true"
								>
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="lblTitle"
						TargetType="Label"
						BasedOn="{StaticResource lblRoot}"
						>
					<Setter Property="Foreground" Value="PaleTurquoise">
					</Setter>

				</Style>

				<Style x:Key="lblFileNew"
						TargetType="Label"
						BasedOn="{StaticResource lblRoot}"
						>
					<Setter Property="Visibility" Value="Collapsed" />
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileNew}"
								Value="true"
								>
							<Setter Property="Visibility" Value="Visible" />
						</DataTrigger>
					</Style.Triggers>
				</Style>


				<Style x:Key="lblTestRoot"
						TargetType="Label"
						BasedOn="{StaticResource lblRoot}"
						>
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="BorderThickness" Value=".5,0,.5,4" />
					<Setter Property="Padding" Value="4,.5,4,0" />
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileMatches}"
								Value="true"
								>
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>

				</Style>

				<Style x:Key="lblTestShtNum"
						TargetType="Label"
						BasedOn="{StaticResource lblTestRoot}"
						>
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileNew}"
								Value="false"
								>
							<Setter Property="Width" Value="{Binding ElementName=ShtNum, Path=ActualWidth}" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding SheetNumberMatches}"
								Value="{StaticResource notmatch}"
								>
							<Setter Property="BorderBrush" Value="Red" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding SheetNumberMatches}"
								Value="{StaticResource match}"
								>
							<Setter Property="BorderBrush" Value="LawnGreen" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="lblTestSep"
						TargetType="Label"
						BasedOn="{StaticResource lblTestRoot}"
						>
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileNew}"
								Value="false"
								>
							<Setter Property="Width" Value="{Binding ElementName=Sep, Path=ActualWidth}" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding SeparationMatches}"
								Value="{StaticResource notmatch}"
								>
							<Setter Property="BorderBrush" Value="Red" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding SeparationMatches}"
								Value="{StaticResource match}"
								>
							<Setter Property="BorderBrush" Value="LawnGreen" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="lblTestShtName"
						TargetType="Label"
						BasedOn="{StaticResource lblTestRoot}"
						>
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileNew}"
								Value="false"
								>
							<Setter Property="Width" Value="{Binding ElementName=ShtName, Path=ActualWidth}" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding SheetNameMatches}"
								Value="{StaticResource notmatch}"
								>
							<Setter Property="BorderBrush" Value="Red" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding SheetNameMatches}"
								Value="{StaticResource match}"
								>
							<Setter Property="BorderBrush" Value="LawnGreen" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="lblTestComment"
						TargetType="Label"
						BasedOn="{StaticResource lblTestRoot}"
						>
					<Setter Property="Visibility" Value="Visible" />
					<Style.Triggers>

						<DataTrigger
								Binding="{Binding FileNew}"
								Value="true"
								>
							<Setter Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>


				<Style x:Key="lblTestMatches"
						TargetType="Label"
						BasedOn="{StaticResource lblTestRoot}"
						>
					<Setter Property="Visibility" Value="Collapsed" />
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileMatches}"
								Value="true"
								>
							<Setter Property="Visibility" Value="Visible" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<Style x:Key="ckbxApply"
						TargetType="CheckBox"
						>
					<Setter Property="Background" Value="#FFCAEAF3" />
					<Setter Property="HorizontalAlignment" Value="Center" />
					<Setter Property="Margin" Value="0" />
					<Setter Property="VerticalAlignment" Value="Center" />
					<Style.Triggers>
						<DataTrigger
								Binding="{Binding FileNew}"
								Value="true"
								>
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
						<DataTrigger
								Binding="{Binding FileMatches}"
								Value="true"
								>
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>

				<DataTemplate x:Key="DataTemplateTest2"
						DataType="filesupport:TestFile"
						>

					<Border
							CornerRadius="5"
							BorderThickness="5,1,.5,6"
							>
						<Border.BorderBrush>
							<LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
								<GradientStop Offset="0.03" Color="#FF111132" />
								<GradientStop Offset="0.10" Color="#FFAAEAF3" />
							</LinearGradientBrush>
						</Border.BorderBrush>
						<Border
								Margin="-5,-1,-.5,-.5"
								Padding="0,0,0,2"
								CornerRadius="4"
								BorderThickness="12,2.5,.5,.5"
								BorderBrush="#FFAAEAF3"
								>
							<Grid
									Margin="4,0,0,2"
									Width="Auto"
									HorizontalAlignment="Stretch"
									>
								<Grid.ColumnDefinitions>

									<ColumnDefinition Width="{StaticResource glSpare}" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>

									<RowDefinition Height="Auto" />

								</Grid.RowDefinitions>

								<StackPanel
										Grid.Column="0"
										Grid.Row="0"
										Margin="0,4,6,0"
										Width="Auto"
										Orientation="Horizontal"
										>

									<StackPanel
											Margin="2,0,6,0"
											Width="Auto"
											VerticalAlignment="Center"
											Orientation="Vertical"
											>
										<!--  matched  -->
										<CheckBox
												Margin="0,0,0,0"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												IsChecked="{Binding Apply}"
												Template="{DynamicResource CheckBoxControlTemplate1}"
												>
											<CheckBox.Effect>
												<DropShadowEffect />
											</CheckBox.Effect>

											<CheckBox.Style>
												<Style TargetType="CheckBox">
													<Setter Property="Background" Value="#FFCAEAF3" />
													<Setter Property="BorderBrush" Value="DarkTurquoise" />
													<Style.Triggers>
														<Trigger Property="IsEnabled" Value="false">
															<!--  <Setter Property="Background"  -->
															<!--  Value="#FF70A3B5" />  -->
															<Setter Property="Background" Value="Red" />
															<Setter Property="BorderBrush" Value="Red" />
														</Trigger>
													</Style.Triggers>

												</Style>
											</CheckBox.Style>

										</CheckBox>

									</StackPanel>

									<StackPanel
											Width="Auto"
											Orientation="Vertical"
											>
										<StackPanel
												Width="Auto"
												Orientation="Horizontal"
												>
											<Label Content="Current"
													Margin="0"
													Width="{StaticResource lblRotTitleWidth}"
													Padding="3,0,3,3"
													HorizontalContentAlignment="Right"
													BorderThickness="0,0,1,1"
													BorderBrush="#999999"
													Style="{StaticResource lblTitle}"
													/>


											<Label Name="ShtNum" Content="{Binding MatchedSheetNumber, FallbackValue=base value}"
													HorizontalContentAlignment="Right"
													Style="{StaticResource lblMatched}"
													/>

											<Label Name="Sep" Content="{Binding MatchedSeparator, FallbackValue=sep}"
													HorizontalContentAlignment="Center"
													Style="{StaticResource lblMatched}"
													/>

											<Label Name="ShtName" Content="{Binding MatchedSheetName, FallbackValue=sheet name}"
													Width="Auto"
													HorizontalContentAlignment="Left"
													Style="{StaticResource lblMatched}"
													/>

											<Label Content=" File does not exist in the list of current files "
													HorizontalContentAlignment="Left"
													BorderThickness=".5,4,.5,0"
													BorderBrush="#CECE00"
													Style="{StaticResource lblFileNew}"
													/>

											<!--  <Label Content="{Binding Comment, FallbackValue=comment}"  -->
											<!--  HorizontalContentAlignment="right"  -->
											<!--  Style="{StaticResource lblTestComment}"  -->
											<!--  >  -->
											<!-- </Label> -->

										</StackPanel>

										<StackPanel Name="spTest"
												Orientation="Horizontal"
												>
											<Label Content="Revision"
													Margin="0"
													Width="{StaticResource lblRotTitleWidth}"
													Padding="3,1,3,0"
													HorizontalContentAlignment="Right"
													BorderThickness="0,0,1,0"
													BorderBrush="#999999"
													Style="{StaticResource lblTitle}"
													/>
											<Label Name="testShtNum" Content="{Binding SheetNumber, FallbackValue=value}"
													HorizontalContentAlignment="Right"
													Style="{StaticResource lblTestShtNum}"
													/>

											<Label Content="{Binding Separator, FallbackValue=s}"
													HorizontalContentAlignment="Center"
													Style="{StaticResource lblTestSep}"
													/>

											<Label Content="{Binding SheetName, FallbackValue=name}"
													HorizontalContentAlignment="Left"
													Style="{StaticResource lblTestShtName}"
													/>

											<Label Content=" Revision file name matches "
													BorderBrush="LawnGreen"
													Style="{StaticResource lblTestMatches}"
													/>

										</StackPanel>

									</StackPanel>
								</StackPanel>

							</Grid>
						</Border>
					</Border>

				</DataTemplate>

				<SolidColorBrush x:Key="Item.MouseOver.Background"
						Color="#3800C3FF"
						/>
				<!-- <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" /> -->
				<SolidColorBrush x:Key="Item.MouseOver.Border"
						Color="#86EEFF"
						/>
				<SolidColorBrush x:Key="Item.SelectedInactive.Background"
						Color="#3DDADADA"
						/>
				<SolidColorBrush x:Key="Item.SelectedInactive.Border"
						Color="#FFDADADA"
						/>
				<SolidColorBrush x:Key="Item.SelectedActive.Background"
						Color="#3D26A0DA"
						/>
				<SolidColorBrush x:Key="Item.SelectedActive.Border"
						Color="#FF26A0DA"
						/>
				<SolidColorBrush x:Key="Item.NotEnabled.Foreground"
						Color="#FFDADADA"
						/>


				<Style x:Key="ListViewItemStyle2"
						TargetType="{x:Type ListViewItem}"
						>
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="BorderThickness" Value="1" />
					<!-- <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" /> -->
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					<Setter Property="Padding" Value="4,1" />
					<Setter Property="SnapsToDevicePixels" Value="True" />
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListViewItem}">
								<Border x:Name="Bd"
										Padding="{TemplateBinding Padding}"
										SnapsToDevicePixels="true"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										>
									<ContentPresenter x:Name="Presenter"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											/>
								</Border>
								<ControlTemplate.Triggers>
									<DataTrigger
											Binding="{Binding FileNew}"
											Value="true"
											>
										<Setter Property="IsEnabled" Value="False" />
									</DataTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
										<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
									</MultiTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="Selector.IsSelectionActive" Value="False" />
											<Condition Property="IsSelected" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
										<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
									</MultiTrigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="Selector.IsSelectionActive" Value="True" />
											<Condition Property="IsSelected" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
										<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedActive.Border}" />
									</MultiTrigger>
									<!-- <Trigger Property="IsEnabled" Value="False"> -->
									<!-- 	<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource Item.NotEnabled.Foreground}" /> -->
									<!-- </Trigger> -->
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>

				</Style>

				<ControlTemplate x:Key="CheckBoxControlTemplate1"
						TargetType="{x:Type CheckBox}"
						>
					<Grid x:Name="templateRoot"
							SnapsToDevicePixels="True"
							Background="Transparent"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Border x:Name="checkBoxBorder"
								Margin="1"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>
							<Grid x:Name="markGrid">
								<Path x:Name="optionMark"
										Margin="1"
										Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
										Fill="#FF212121"
										Opacity="0"
										Stretch="None"
										/>
								<Rectangle x:Name="indeterminateMark"
										Margin="2"
										Fill="#FF212121"
										Opacity="0"
										/>
							</Grid>
						</Border>
						<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}"
								Grid.Column="1"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								ContentStringFormat="{TemplateBinding ContentStringFormat}"
								Focusable="False"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="True">
							<Setter Property="FocusVisualStyle">
								<Setter.Value>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Rectangle
															Margin="14,0,0,0"
															SnapsToDevicePixels="True"
															Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
															StrokeDashArray="1 2"
															StrokeThickness="1"
															/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="4,-1,0,0" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="checkBoxBorder" Property="Background" Value="#FFF3F9FF" />
							<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FF5593FF" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="#FF212121" />
							<Setter TargetName="optionMark" Property="Fill" Value="#FF212121" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="checkBoxBorder" Property="Background" Value="#FF70A3B5" />
							<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#3C6A7B" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="#FF707070" />
							<Setter TargetName="optionMark" Property="Fill" Value="#FF707070" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="checkBoxBorder" Property="Background" Value="#FFD9ECFF" />
							<Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FF3C77DD" />
							<Setter TargetName="indeterminateMark" Property="Fill" Value="#FF212121" />
							<Setter TargetName="optionMark" Property="Fill" Value="#FF212121" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
							<Setter TargetName="optionMark" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
							<Setter TargetName="optionMark" Property="Opacity" Value="0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>


			</ListView.Resources>
		</ListView>





		<StackPanel
				Grid.Column="0"
				Grid.Row="2"
				Grid.ColumnSpan="3"
				HorizontalAlignment="Right"
				Orientation="Horizontal"
				>

			<Button Name="btnReset" Content="Reset"
					Margin="10"
					Width="90"
					Height="36"
					Click="BtnReset_OnClick"
					/>
					
			<Button Name="btnRead" Content="Read Files"
					Margin="10"
					Width="90"
					Height="36"
					Click="BtnRead_OnClick"
					/>


			<Button Name="btnGo" Content="Go"
					Margin="10"
					Width="90"
					Height="36"
					Click="BtnGo_OnClick"
					/>

			<Button Name="btnDone" Content="Done"
					Margin="10"
					Width="90"
					Height="36"
					Click="BtnDone_OnClick"
					/>

		</StackPanel>
	</Grid>
</Window>
