<UserControl
		x:Class="Sylvester.UserControls.ObliqueButton"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:Sylvester.UserControls"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		x:Name="obliqueButton"
		Margin="0,0,-5.5,0"
		Padding="0"
		d:DesignWidth="200"
		d:DesignHeight="15"
		Tag="{Binding ElementName=obliqueButton,
									Path=Index,
									FallbackValue=-1}"
		mc:Ignorable="d"
		>
		<!-- Height="{Binding RelativeSource={RelativeSource TemplatedParent}, -->
		<!-- 								 Path=Height, -->
		<!-- 								 FallbackValue=15}" -->
		
	<UserControl.Resources>

		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle
								Margin="2"
								SnapsToDevicePixels="true"
								Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
								StrokeDashArray="1 2"
								StrokeThickness="1"
								/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<SolidColorBrush
				x:Key="Path.Arrow.Fill"
				Color="#999999"
				/>

		<SolidColorBrush
				x:Key="Path.Favorite.Fill"
				Color="OrangeRed"
				/>

		<SolidColorBrush
				x:Key="Path.Plus.Fill"
				Color="Lime"
				/>



		<SolidColorBrush
				x:Key="Button.Static.Background"
				Color="#444444"
				/>

		<SolidColorBrush
				x:Key="Button.Static.Foreground"
				Color="#CCCCCC"
				/>

		<SolidColorBrush
				x:Key="Button.Static.Border"
				Color="#FF707070"
				/>

		<SolidColorBrush
				x:Key="Button.MouseOver.Background"
				Color="#FF3A779B"
				/>
		<SolidColorBrush
				x:Key="Button.MouseOver.Foreground"
				Color="White"
				/>
		<SolidColorBrush
				x:Key="Button.MouseOver.Border"
				Color="#FFC7EAFF"
				/>

		<SolidColorBrush
				x:Key="Button.Pressed.Background"
				Color="#FFC4E5F6"
				/>
		<SolidColorBrush
				x:Key="Button.Pressed.Border"
				Color="#FF2C628B"
				/>
		<SolidColorBrush
				x:Key="Button.Disabled.Background"
				Color="#FFF4F4F4"
				/>
		<SolidColorBrush
				x:Key="Button.Disabled.Border"
				Color="#FFADB2B5"
				/>
		<SolidColorBrush
				x:Key="Button.Disabled.Foreground"
				Color="#FF838383"
				/>


		<Style
				x:Key="ButtonStyle"
				TargetType="{x:Type Button}"
				>
			<Setter Property="Foreground" Value="{Binding ElementName=obliqueButton, Path=FontBrush, FallbackValue=white}" />
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
			<Setter Property="BorderBrush" Value="{Binding ElementName=obliqueButton, Path=BorderBrush, FallbackValue=gray}" />
			<Setter Property="BorderThickness" Value="1,0,0,0" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Stretch" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
								x:Name="border"
								SnapsToDevicePixels="true"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>
							<ContentPresenter
									x:Name="CP1"
									Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Focusable="False"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
						</Border>
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=ShowBorder}" Value="False">
								<Setter Property="BorderThickness" Value="0" />
							</DataTrigger>
							<Trigger Property="IsDefaulted" Value="true">
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}" />
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="CP1" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
								<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
								<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</UserControl.Resources>


	<!--#region > button-->

	<Button
			x:Name="InnerButton"
			HorizontalAlignment="Left"
			Tag="{Binding ElementName=obliqueButton}"
			Style="{StaticResource ButtonStyle}"
			>
		<Button.LayoutTransform>
			<SkewTransform AngleX="20" AngleY="0" />
		</Button.LayoutTransform>

		<Button.ContentTemplate>
			<DataTemplate>
				<StackPanel
						x:Name="InnerSp"
						Orientation="Horizontal"
						>
					<StackPanel.LayoutTransform>
						<SkewTransform AngleX="-20" />
					</StackPanel.LayoutTransform>

					<!--#region > beginning panel-->
					<!--  not skewed by default  -->

					<StackPanel
							x:Name="Beginning"
							Orientation="Horizontal"

							>
						<StackPanel.Style>
							<Style TargetType="StackPanel">
								<Setter Property="Margin" Value="1.0,2.5, 2.5, 2.0" />
								<Setter Property="LayoutTransform">
									<Setter.Value>
										<SkewTransform AngleX="0" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<!--  false  -->
									<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=SkewBeginning, FallbackValue=false}" Value="true">
										<Setter Property="LayoutTransform">
											<Setter.Value>
												<SkewTransform AngleX="20" />
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" Value="-2,0,-3.5,0" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>

						<Path
								x:Name="Star"
								Margin="0,0,0,0"
								Data="F1M0,0 -2,6 3.5,2 -3.5,2 2,6 0,0z"
								Fill="{Binding ElementName=obliqueButton,
															 Path=FavoritesBrush,
															 FallbackValue={StaticResource Path.Favorite.Fill}}"
								Opacity="1"
								Stretch="UniformToFill"
								>
							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Visibility" Value="Collapsed">
									</Setter>
									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=ShowFavorite, FallbackValue=true}" Value="true">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>

								
								<!-- Data="F1M -1,0 1,0 1,2.5 3.5,2.5 3.5,4.5 1,4.5 1,7 -1,7 -1,4.5 -3.5,4.5 -3.5,2.5 -1,2.5 -1,0 z" -->
						<Path
								x:Name="Plus"
								Margin="0"
								Data="F1M .15,0 .15,.4, .55,.4 .55,.7 .15,.7 .15,1.1 -.15,1.1 -.15,.7 -.55,.7 -.55,.4 -.15,.4 -.15,0 .15,0 z"
								Fill="{Binding ElementName=obliqueButton,
															 Path=PlusBrush,
															 FallbackValue={StaticResource Path.Plus.Fill}}"
								Opacity="1"
								Stretch="UniformTofill"
								>
							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Visibility" Value="Collapsed">
									</Setter>
									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=ShowPlus, FallbackValue=true}" Value="true">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>

					</StackPanel>

					<!--#endregion-->

					<!--#region > middle panel-->
					<!--  not skewed by default  -->

					<StackPanel
							x:Name="Middle"
							Orientation="Horizontal"

							>
						<StackPanel.Style>
							<Style TargetType="StackPanel">
								<Setter Property="Margin" Value="0" />
								<Setter Property="LayoutTransform">
									<Setter.Value>
										<SkewTransform AngleX="0" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<!--  false  -->
									<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=SkewMiddle, FallbackValue=false}" Value="true">
										<Setter Property="LayoutTransform">
											<Setter.Value>
												<SkewTransform AngleX="20" />
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" Value="0,-1,0,1">
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>

								<!-- Height="{Binding ElementName=obliqueButton, -->
								<!-- 								 Path=Height}" -->
						<Label
								Content="{Binding ElementName=obliqueButton,
																	Path=Text,
																	FallbackValue=Live Laugh Love}"
								Padding="0"
								Margin="{Binding ElementName=obliqueButton, Path=TextMargin, FallbackValue='0'}"
								VerticalContentAlignment="Center"
								FontFamily="Segoe UI Semilight"
								FontSize="{Binding ElementName=obliqueButton, Path=FontSize, FallbackValue=9.5}"
								Background="Transparent"
								Foreground="{Binding ElementName=InnerButton,
																		 Path=Foreground,
																		 FallbackValue=white}"
								>

							<Label.Style>
								<Style TargetType="Label">
									<Setter Property="Visibility" Value="Collapsed">
									</Setter>
									<Style.Triggers>
										<!--  true  -->
										<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=ShowText, FallbackValue=true}" Value="true">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>

					</StackPanel>

					<!--#endregion-->

					<!--#region > end panel-->
					<!--  skewed by default  -->

					<StackPanel
							x:Name="End"
							Orientation="Horizontal"

					>
						<StackPanel.Style>
							<Style TargetType="StackPanel">
								<Setter Property="Margin" Value="0,0,0,0" />
								<Setter Property="LayoutTransform">
									<Setter.Value>
										<SkewTransform AngleX="0" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<!--  true  -->
									<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=SkewEnd, FallbackValue=true}" Value="true">
										<Setter Property="LayoutTransform">
											<Setter.Value>
												<SkewTransform AngleX="20" />
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" Value="1,2.5,-1.5,2">
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>

						<Path
								x:Name="Arrow"
								Margin="0"
								
								VerticalAlignment="Stretch"
								Data="F1M0,0 5.5,4.75 0,10 0,1z"
								Opacity="1"
								Stretch="Fill"
								Width="auto"
								>
							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Fill" Value="{StaticResource Path.Arrow.Fill}" />
									<Setter Property="Visibility" Value="Collapsed">
									</Setter>
									<Style.Triggers>
										<!--  true  -->
										<DataTrigger Binding="{Binding ElementName=obliqueButton, Path=ShowArrow, FallbackValue=true}" Value="true">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding ElementName=InnerButton, Path=IsMouseOver}" Value="True">
											<Setter Property="Fill" Value="{StaticResource Button.MouseOver.Border}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>

					</StackPanel>
					<!--#endregion-->

				</StackPanel>

			</DataTemplate>
		</Button.ContentTemplate>
	</Button>

	<!--#endregion-->

</UserControl>
