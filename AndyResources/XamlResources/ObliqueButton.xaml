<UserControl x:Name="obliqueButton"
		x:Class="AndyResources.XamlResources.ObliqueButton"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:AndyResources.XamlResources"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Margin="0,0,-5.5,0"
		Padding="0"
		mc:Ignorable="d"
		d:DesignHeight="20"
		d:DesignWidth="100"
		Tag="{Binding ElementName=obliqueButton,
									Path=Index,
									FallbackValue=-1}"
		>

	<UserControl.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../SVG/IconStar.xaml" />
				<ResourceDictionary Source="../SVG/IconHistory.xaml" />
				<ResourceDictionary Source="../SVG/IconPlus.xaml" />
				<ResourceDictionary Source="../SVG/IconTriangleOblique.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
			<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Blue" />
			<SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionTextBrushKey}" Color="Green" />
			<SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="BlueViolet" />
			<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="HotPink" />

			<SolidColorBrush x:Key="Path.Plus.Fill">Lime</SolidColorBrush>
			<SolidColorBrush x:Key="Path.Favorite.Fill">OrangeRed</SolidColorBrush>
			<SolidColorBrush x:Key="Path.Favorite.Fill2" Color="#FF581A" />
			<SolidColorBrush x:Key="Path.History.Fill" Color="#00efff" />
			<SolidColorBrush x:Key="Path.Arrow.Fill" Color="#999999" />
			<SolidColorBrush x:Key="Background" Color="#333333" />

			<SolidColorBrush x:Key="FldrRtFntBrush" Color="#FFEEEEEE" />
			<SolidColorBrush x:Key="Button.Static.Background" Color="#444444" />
			<SolidColorBrush x:Key="MouseOver.Foreground">White</SolidColorBrush>
			<SolidColorBrush x:Key="MouseOver.Border.Background" Color="#FF3A779B" />
			<SolidColorBrush x:Key="MouseOver.Border" Color="#FFC7EAFF" />
			<SolidColorBrush x:Key="Pressed.Border.Background" Color="#FFC4E5F6" />
			<SolidColorBrush x:Key="Pressed.Border" Color="#FF2C628B" />
			<SolidColorBrush x:Key="Disabled.Foreground" Color="#FFDDDDDD" />
			<SolidColorBrush x:Key="Disabled.Border.Background" Color="#FF646464" />
			<SolidColorBrush x:Key="Disabled.Border" Color="#FFADB2B5" />

			<sys:Boolean x:Key="ButtonDefault">true</sys:Boolean>
			<sys:Double x:Key="Button.Disabled.Opacity">0.60</sys:Double>

			<Style x:Key="ButtonStyle"
					TargetType="Button"
					>
				<Setter Property="Foreground" Value="{Binding ElementName=obliqueButton, Path=FontBrush, FallbackValue=white}" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
				<Setter Property="BorderBrush" Value="{Binding ElementName=obliqueButton, Path=BorderBrush, FallbackValue=gray}" />
				<Setter Property="BorderThickness" Value="1,0,0,0" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="Margin" Value="{Binding ElementName=obliqueButton, Path=ObliqueButtonMargin}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Opacity" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
									>
								<ContentPresenter x:Name="CP1"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										Focusable="False"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>

							</Border>
							<ControlTemplate.Triggers>
								<DataTrigger Value="False" Binding="{Binding ElementName=obliqueButton, Path=ShowBorder}">
									<Setter Property="BorderThickness" Value="0" />
								</DataTrigger>
								<Trigger Property="IsDefaulted" Value="true">
									<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Foreground" Value="{StaticResource MouseOver.Foreground}" />
									<Setter TargetName="border" Property="Background" Value="{StaticResource MouseOver.Border.Background}" />
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MouseOver.Border}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="border" Property="Background" Value="{StaticResource Pressed.Border.Background}" />
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Pressed.Border}" />
								</Trigger>

								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Opacity" Value="{StaticResource Button.Disabled.Opacity}" />
									<Setter TargetName="CP1" Property="TextElement.Foreground" Value="{StaticResource Disabled.Foreground}" />
									<Setter Property="TextElement.Foreground" Value="{StaticResource Disabled.Foreground}" />
									<Setter TargetName="border" Property="Background" Value="{StaticResource Disabled.Border.Background}" />
									<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Disabled.Border}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

		</ResourceDictionary>
	</UserControl.Resources>


	<!--#region > button-->

	<Button x:Name="InnerButton"
			HorizontalAlignment="Left"
			Tag="{Binding ElementName=obliqueButton}"
			Style="{StaticResource ButtonStyle}"
			>
		<Button.LayoutTransform>
			<SkewTransform AngleX="20" AngleY="0" />
		</Button.LayoutTransform>

		<Button.ContentTemplate>
			<DataTemplate>
				<StackPanel x:Name="InnerSp"
						Orientation="Horizontal"
						>
					<StackPanel.LayoutTransform>
						<SkewTransform AngleX="-20" />
					</StackPanel.LayoutTransform>

					<!--#region > beginning panel-->
					<!--  not skewed by default  -->

					<StackPanel x:Name="Beginning"
							Orientation="Horizontal"
							VerticalAlignment="Stretch"
							>
						<StackPanel.Style>
							<Style TargetType="StackPanel">
								<Setter Property="Margin" Value="1.0,1.0,2.5,1.0" />
								<Setter Property="LayoutTransform">
									<Setter.Value>
										<SkewTransform AngleX="0" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<!--  false  -->
									<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=SkewBeginning, FallbackValue=false}">
										<Setter Property="LayoutTransform">
											<Setter.Value>
												<SkewTransform AngleX="20" />
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" Value="-2,1,-3.5,1" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>

						<!--#region > favorites symbol-->

								<!-- Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=ActualHeight}" -->
						<Path x:Name="Star"
								Margin="0"
								
								Data="{DynamicResource Icon.Svg.Star}"
								Fill="{Binding ElementName=obliqueButton,
															 Path=FavoritesBrush,
															 FallbackValue={StaticResource Path.Favorite.Fill}}"
								Stretch="UniformToFill"
								>
							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=ShowFavorite, FallbackValue={StaticResource ButtonDefault}}">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>

									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
						<!--#endregion-->

						<!--#region > history symbol-->
								<!-- Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=ActualHeight}" -->
						<Path x:Name="History"
								Margin="0"
								
								
								Data="{DynamicResource Icon.Svg.History}"
								Fill="{Binding ElementName=obliqueButton,
															 Path=HistoryBrush,
															 FallbackValue={StaticResource Path.History.Fill}}"
								Stretch="Uniform"
								>

							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Visibility" Value="Collapsed" />

									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=ShowHistory, FallbackValue={StaticResource ButtonDefault}}">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>

									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
						<!--#endregion-->


						<!--#region > select folder symbol-->
								<!-- Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=ActualHeight}" -->
						<Path x:Name="Plus"
								Margin="0"
								Data="{DynamicResource Icon.Svg.Plus}"
								Fill="{Binding ElementName=obliqueButton,
															 Path=PlusBrush,
															 FallbackValue={StaticResource Path.Plus.Fill}}"
								Stretch="UniformToFill"
								>
							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=ShowPlus, FallbackValue={StaticResource ButtonDefault}}">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
						<!--#endregion-->

					</StackPanel>

					<!--#endregion-->

					<!--#region > middle panel-->
					<!--  not skewed by default  -->

					<StackPanel x:Name="Middle"
							Orientation="Horizontal"
							>
						<StackPanel.Style>
							<Style TargetType="StackPanel">
								<Setter Property="Margin" Value="0" />
								<Setter Property="LayoutTransform">
									<Setter.Value>
										<SkewTransform AngleX="0" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<!--  false  -->
									<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=SkewMiddle, FallbackValue=false}">
										<Setter Property="LayoutTransform">
											<Setter.Value>
												<SkewTransform AngleX="20" />
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" Value="0,-1,0,1" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>

						<Label
								Content="{Binding ElementName=obliqueButton,
																	Path=Text,
																	FallbackValue=Live Laugh Love}"
								Margin="{Binding ElementName=obliqueButton,
																 Path=TextMargin,
																 FallbackValue='0,-2,0,0'}"
								Padding="0"
								VerticalContentAlignment="Center"
								FontFamily="Segoe UI Semilight"
								FontSize="{Binding ElementName=obliqueButton,
																	 Path=FontSize,
																	 FallbackValue=9.5}"
								Background="Transparent"
								Foreground="{Binding ElementName=InnerButton,
																		 Path=Foreground,
																		 FallbackValue=White}"
								>
							<Label.Resources />


							<Label.Style>
								<Style TargetType="Label">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=ShowText, FallbackValue={StaticResource ButtonDefault}}">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>

					</StackPanel>

					<!--#endregion-->

					<!--#region > end panel-->
					<!--  skewed by default  -->

					<StackPanel x:Name="End"
							Orientation="Horizontal"
							>
						<StackPanel.Style>
							<Style TargetType="StackPanel">
								<Setter Property="Margin" Value="0,0,0,0" />
								<Setter Property="LayoutTransform">
									<Setter.Value>
										<SkewTransform AngleX="0" />
									</Setter.Value>
								</Setter>
								<Style.Triggers>
									<!--  true  -->
									<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=SkewEnd, FallbackValue=true}">
										<Setter Property="LayoutTransform">
											<Setter.Value>
												<SkewTransform AngleX="20" />
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" Value="1,2.5,-1.5,2" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>

						<Path x:Name="Arrow"
								Margin="0"
								Width="auto"
								VerticalAlignment="Stretch"
								Data="F1M0,0 5.5,4.75 0,10 0,1z"
								Opacity="1"
								Stretch="Fill"
								>
							<Path.Style>
								<Style TargetType="Path">
									<Setter Property="Fill" Value="{StaticResource Path.Arrow.Fill}" />
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<!--  false  -->
										<DataTrigger Value="true" Binding="{Binding ElementName=obliqueButton, Path=ShowArrow, FallbackValue={StaticResource ButtonDefault}}">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
										<DataTrigger Value="True" Binding="{Binding ElementName=InnerButton, Path=IsMouseOver}">
											<Setter Property="Fill" Value="{StaticResource MouseOver.Border}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>

					</StackPanel>
					<!--#endregion-->

				</StackPanel>

			</DataTemplate>
		</Button.ContentTemplate>
	</Button>

	<!--#endregion-->

</UserControl>
