<ResourceDictionary
		x:Class="AndyResources.XamlResources.ClassificationTreeResources"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:convert="clr-namespace:AndyShared.Support"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:mergeSupport="clr-namespace:AndyShared.MergeSupport"

		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:treeSupport="clr-namespace:AndyShared.ClassificationDataSupport.TreeSupport"
		>
	<!--  x:Class="ResourceFiles.XamlResources.ClassificationTreeResources"  -->

	<ResourceDictionary.MergedDictionaries>

		<!-- <ResourceDictionary Source="pack://application:,,,AndyResources/XamlResources/ScrollBar.xaml" /> -->
		<!-- <ResourceDictionary Source="pack://application:,,,AndyResources/XamlResources/MasterVisualResources.xaml" /> -->
		<!-- <ResourceDictionary Source="pack://application:,,,AndyResources/XamlResources/VisualStates.xaml" /> -->
		<!-- <ResourceDictionary Source="pack://application:,,,AndyResources/XamlResources/IconResources.xaml" /> -->

		<ResourceDictionary Source="..\XamlResources\ScrollBar.xaml" />
		<ResourceDictionary Source="..\XamlResources\MasterVisualResources.xaml" />
		<ResourceDictionary Source="..\XamlResources\VisualStates.xaml" />
		<ResourceDictionary Source="..\XamlResources\IconResources.xaml" />


	</ResourceDictionary.MergedDictionaries>

	<convert:MultiBoolOr x:Key="BoolOr" />
	<convert:EqualsToBool x:Key="Equals" />
	<convert:Int32Comparison x:Key="IntCompare" />

	<sys:Double x:Key="Title.Width">130</sys:Double>

	<sys:Double x:Key="BkMrkItemHeight">20</sys:Double>
	<sys:Double x:Key="BkMrkIconWidthDbl">20</sys:Double>
	<sys:Double x:Key="BkMrkItemRowHeightDbl">26</sys:Double>
	<sys:Double x:Key="ListView.Item.Star.Height">10</sys:Double>
	<sys:Double x:Key="ListView.Item.Star.Width">11</sys:Double>

	<SolidColorBrush x:Key="Path.Plus.Star.Fill" Color="OrangeRed" />
	<SolidColorBrush x:Key="Path.Plus.Fill">LawnGreen</SolidColorBrush>

	<Thickness x:Key="Listview.ItemList.Margin"
			Bottom="5"
			Left="0"
			Right="0"
			Top="0"
			/>

	<!--
		notes
		Tv1  -> [] Tv1_TvStyle
		-> [] Tv1_ItemContainerStyle
		[] Tv1_ItemTemplate vv
		includes Lv1_visibility (toggle button) -> [] ExpandCollapseToggleStyle01
		includes Lv1 (listview) -> [visual states] ListBox.NoHighlight.Dark.ItemContainer (match Lv2)
		
		[] Tv1_ItemContainerStyle
		includes Expander -> [] ExpandCollapseToggleStyle02
		
		[] Tv1_TvStyle -> Lv2 (listview) -> [visual states] ListBox.NoHighlight.Dark.ItemContainer (match Lv1)
		
		
		
		ScrollViewerControlTemplate1
		
		ExpandCollapseToggleStyle01
		ExpandCollapseToggleStyle02
		
		Tv1_ItemContainerStyle
		Tv1_TvStyle  -> Lv2 -> [visual states] ListBox.NoHighlight.Dark.ItemContainer
		Tv1_ItemTemplate -> Lv1 ->  [visual states] ListBox.NoHighlight.Dark.ItemContainer
		
		Tv1 -> [] Tv1_ItemTemplate
		-> [] Tv1_ItemContainerStyle
		-> [] Tv1_TvStyle
	-->

	<Style x:Key="Label.Base"
			TargetType="Label"
			>
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />


	</Style>

	<Style x:Key="Button.Base"
			TargetType="Button"
			>
		<Setter Property="Margin" Value="5,0,0,0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Height" Value="35" />
		<Setter Property="Width" Value="90" />
		<Setter Property="TextBlock.TextAlignment" Value="Center" />
	</Style>

	<Style x:Key="Label.Settings.Title"
			TargetType="Label"
			BasedOn="{StaticResource Label.Base}"
			>
		<Setter Property="Padding" Value="15,0,15,1" />
	</Style>

	<Style x:Key="Label.BookMark.Title"
			TargetType="Label"
			BasedOn="{StaticResource Label.Base}"
			>
		<Setter Property="Margin" Value="5,0,0,2" />
		<Setter Property="Padding" Value="5,0,0,0" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
	</Style>

	<Style x:Key="StackPanel.Base"
			TargetType="StackPanel"
			>
		<Setter Property="Margin" Value="0" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
	</Style>

	<Style x:Key="StackPanel.Horizontal"
			TargetType="StackPanel"
			BasedOn="{StaticResource StackPanel.Base}"
			>
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="Margin" Value="5,5,0,0" />
	</Style>

	<Style x:Key="Border.Settings.Base"
			TargetType="Border"
			>
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="CornerRadius" Value="3" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>

	<Style x:Key="Border.Settings.Title"
			TargetType="Border"
			BasedOn="{StaticResource Border.Settings.Base}"
			>
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="{StaticResource Label.Status.Title.Background}" />
		<Setter Property="Background" Value="{StaticResource Label.Status.Title.Background}" />
	</Style>

	<Style x:Key="Border.Settings.Button"
			TargetType="Border"
			BasedOn="{StaticResource Border.Settings.Base}"
			>
		<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" />
		<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" />
		<Setter Property="Margin" Value="5,0,0,0" />
	</Style>

	<Style x:Key="Path.BookMark.Icon"
			TargetType="Path"
			>
		<Setter Property="Margin" Value="4.0" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Fill" Value="{StaticResource Path.Plus.Fill}" />
		<Setter Property="Data" Value="{StaticResource Icon.Svg.SelectFolder}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Stretch" Value="UniformToFill" />
	</Style>

	<Style x:Key="Border.BookMark.Base"
			TargetType="Border"
			>
		<Setter Property="Height" Value="{StaticResource BkMrkItemHeight}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="CornerRadius" Value="4" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>

	<Style x:Key="Border.BookMark.Title"
			TargetType="Border"
			BasedOn="{StaticResource Border.BookMark.Base}"
			>
		<Setter Property="Margin" Value="0,3,0,3" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Background" Value="{StaticResource Element.Value.Background.Normal}" />
		<Setter Property="BorderBrush" Value="{StaticResource Element.Value.Background.Normal}" />
	</Style>

	<Style x:Key="Border.BookMark.Icon"
			TargetType="Border"
			BasedOn="{StaticResource Border.BookMark.Base}"
			>
		<Setter Property="Width" Value="{StaticResource BkMrkIconWidthDbl}" />
		<Setter Property="Margin" Value="3" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Background" Value="{StaticResource Element.Icon.Background.Normal}" />
		<Setter Property="BorderBrush" Value="{StaticResource Element.Title.Background.Normal}" />
	</Style>

	<!--#region > scroll viewer template-->

	<!--  scroll viewer template  -->
	<ControlTemplate x:Key="ScrollViewerControlTemplate1"
			TargetType="{x:Type ScrollViewer}"
			>
		<Grid x:Name="Grid"
				Background="{TemplateBinding Background}"
				>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<Rectangle x:Name="Corner"
					Grid.Column="2"
					Grid.Row="2"
					Fill="Transparent"
					/>

			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
					Content="{TemplateBinding Content}"
					Grid.Column="0"
					Grid.Row="1"
					Grid.ColumnSpan="2"
					Margin="{TemplateBinding Padding}"
					CanContentScroll="{TemplateBinding CanContentScroll}"
					CanHorizontallyScroll="False"
					CanVerticallyScroll="False"
					ContentTemplate="{TemplateBinding ContentTemplate}"
					/>
			<ScrollBar x:Name="PART_VerticalScrollBar"
					Grid.Column="2"
					Grid.Row="1"
					Margin="0,0,0,0"
					Width="{StaticResource BarSizeOutline}"
					MinWidth="{StaticResource BarSize}"
					Value="{Binding VerticalOffset,
													Mode=OneWay,
													RelativeSource={RelativeSource TemplatedParent}}"
					Background="{StaticResource ScrollBarBkg}"
					Cursor="Arrow"
					Maximum="{TemplateBinding ScrollableHeight}"
					Minimum="0"
					ViewportSize="{TemplateBinding ViewportHeight}"
					Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
					Style="{DynamicResource ScrollBarStyle}"
					/>

			<ScrollBar x:Name="PART_HorizontalScrollBar"
					Grid.Column="0"
					Grid.Row="2"
					Grid.ColumnSpan="2"
					Height="{StaticResource BarSizeOutline}"
					MinHeight="{StaticResource BarSize}"
					Value="{Binding HorizontalOffset,
													Mode=OneWay,
													RelativeSource={RelativeSource TemplatedParent}}"
					Background="{StaticResource ScrollBarBkg}"
					AutomationProperties.AutomationId="HorizontalScrollBar"
					Cursor="Arrow"
					Maximum="{TemplateBinding ScrollableWidth}"
					Minimum="0"
					Orientation="Horizontal"
					ViewportSize="{TemplateBinding ViewportWidth}"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
					Style="{DynamicResource ScrollBarStyle}"
					/>
		</Grid>
	</ControlTemplate>

	<!--#endregion-->

	<!--#region > toggle style 01 (merge list)-->

	<!--  this is the toggle at the node level  -->
	<Style x:Key="ExpandCollapseToggleStyle01"
			TargetType="{x:Type ToggleButton}"
			>
		<Setter Property="Focusable" Value="False" />
		<!-- <Setter Property="Width" Value="100" /> -->
		<Setter Property="Width" Value="auto" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">

					<Border x:Name="bdr_toggle"
							Margin="{Binding RelativeSource={RelativeSource TemplatedParent},
															 Path=Margin}"
							Padding="{Binding RelativeSource={RelativeSource TemplatedParent},
																Path=Padding}"
							VerticalAlignment="Center"
							>
						<!--  Width="100"  -->
						<Grid
								Margin="5,-1,0,1"
								Height="Auto"
								VerticalAlignment="Center"
								>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition Height="*" />

							</Grid.RowDefinitions>
							<Path x:Name="ExpandPath"
									Grid.Column="0"
									Grid.Row="0"
									Width="10"
									Height="10"
									Data="M 0,0 4,8 8,0 z"
									Fill="{TemplateBinding Foreground}"
									RenderTransformOrigin="0.5,0.5"
									Stretch="Fill"
									StrokeThickness="0"
									>
								<Path.RenderTransform>
									<RotateTransform Angle="0" CenterX="0" CenterY="0" />
								</Path.RenderTransform>
							</Path>

							<ContentControl
									Content="{Binding RelativeSource={RelativeSource TemplatedParent},
																		Path=Content}"
									Grid.Column="1"
									Grid.Row="0"
									/>

						</Grid>

					</Border>

					<ControlTemplate.Triggers>

						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="ExpandPath" Property="Visibility" Value="Hidden" />
						</Trigger>

						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="ExpandPath" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="270" />
								</Setter.Value>
							</Setter>
							<!-- <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill2}" /> -->
							<!-- <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke2}" /> -->
							<!-- <Setter TargetName="bdr_toggle" Property="Background" Value="Transparent" /> -->
						</Trigger>

						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
							<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill2}" />
						</Trigger>


						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsChecked" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
							<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill2}" />
						</MultiTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region > toggle style 02  (tree nodes)-->

	<!--  this is the toggle at the node level  -->
	<Style x:Key="ExpandCollapseToggleStyle02"
			TargetType="{x:Type ToggleButton}"
			>
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="26" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">


					<Border x:Name="Bdr_Plus2"
							Style="{StaticResource Border.BookMark.Icon}"
							>
						<Path x:Name="Plus"
								Style="{StaticResource Path.BookMark.Icon}"
								>
						</Path>
					</Border>

					<ControlTemplate.Triggers>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding Path=IsExpandedAlt}" />
								<Condition Value="true" Binding="{Binding Path=ChildCount, Converter={StaticResource IntCompare}, ConverterParameter='> 0'}" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="Plus" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="45" CenterX="6" CenterY="6" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="Plus" Property="Fill" Value="{StaticResource Path.Plus.Fill}" />
						</MultiDataTrigger>

						<DataTrigger Value="0" Binding="{Binding Path=ChildCount}">
							<Setter TargetName="Plus" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill2}" />
							<Setter TargetName="Plus" Property="Data" Value="{StaticResource Icon.Svg.Dash}" />
							<Setter TargetName="Plus" Property="Stretch" Value="Uniform" />

						</DataTrigger>

						<DataTrigger Value="0" Binding="{Binding ChildrenMergeItemCount}">
							<Setter TargetName="Bdr_Plus2" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region > Tv1 container style-->

	<!--  primary treeview container style  -->
	<Style x:Key="Tv1_ItemContainerStyle"
			TargetType="{x:Type TreeViewItem}"
			>
		<Setter Property="IsExpanded" Value="{Binding IsExpandedAlt}" />
		<Setter Property="Visibility" Value="Visible" />
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="1,0,0,0" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Name="Ct01"
						TargetType="{x:Type TreeViewItem}"
						>
					<Grid x:Name="GdTvi01">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<ToggleButton x:Name="Expander"
								Grid.Column="0"
								Grid.Row="0"
								Margin="0"
								Height="{StaticResource BkMrkItemRowHeightDbl}"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								IsChecked="{Binding IsExpandedAlt,
																		Mode=TwoWay,
																		FallbackValue=false}"
								ClickMode="Press"
								Style="{StaticResource ExpandCollapseToggleStyle02}"
								/>

						<Border x:Name="Bd"
								Grid.Column="1"
								Grid.Row="0"
								Width="Auto"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								SnapsToDevicePixels="true"
								>

							<ContentPresenter x:Name="PART_Header"
									ContentSource="Header"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
						</Border>
						<ItemsPresenter x:Name="ItemsHost"
								Grid.Column="1"
								Grid.Row="1"
								/>
					</Grid>

					<ControlTemplate.Triggers>

						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>


						<DataTrigger Value="0" Binding="{Binding ExtMergeItemCount, Mode=OneWay, FallbackValue=0}">
							<Setter TargetName="GdTvi01" Property="Visibility" Value="Collapsed" />
						</DataTrigger>

						<DataTrigger Value="false" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=HasItems}">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</DataTrigger>

						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
							<!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" /> -->
						</Trigger>


						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
							<!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" /> -->
						</MultiTrigger>

						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--#endregion-->

	<!--#region > Tv1 Style-->

	<!--  primary treeview style + template  -->
	<Style x:Key="Tv1_TvStyle"
			TargetType="{x:Type TreeView}"
			>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="BorderBrush" Value="LightSlateGray" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border x:Name="Bd"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							SnapsToDevicePixels="true"
							>

						<ScrollViewer x:Name="_tv_scrollviewer_"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								CanContentScroll="false"
								Focusable="false"
								HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
								Template="{DynamicResource ScrollViewerControlTemplate1}"
								>

							<DockPanel HorizontalAlignment="Stretch">

								<StackPanel x:Name="Sp02"
										HorizontalAlignment="Stretch"
										DockPanel.Dock="Top"
										Orientation="Vertical"
										>


									<DockPanel x:Name="Dp_Lv2_Expander"
											HorizontalAlignment="Stretch"
											>

										<Border x:Name="Tv_Expander"
												Style="{StaticResource Border.BookMark.Icon}"
												>
											<Path x:Name="Plus"
													Style="{StaticResource Path.BookMark.Icon}"
													>
											</Path>
										</Border>

										<Border
												DockPanel.Dock="Left"
												Style="{StaticResource Border.BookMark.Title}"
												>

											<DockPanel>

												<ToggleButton x:Name="Lv2_visibility"
														Margin="0,1,0,0"
														Height="{StaticResource BkMrkItemRowHeightDbl}"
														VerticalAlignment="Center"
														VerticalContentAlignment="Center"
														Background="Transparent"
														IsChecked="{Binding Item.IsVisible,
																								Mode=TwoWay,
																								FallbackValue=false}"
														ClickMode="Press"
														DockPanel.Dock="Left"
														>

													<ToggleButton.Content>

														<StackPanel
																HorizontalAlignment="Left"
																Orientation="Horizontal"
																>

															<Label x:Name="Lbl02"
																	Content="{Binding ElementName=WinClassfTest,
																										Path=TreeBaseTitle,
																										FallbackValue='Title'}"
																	Margin="0"
																	Padding="8,0,0,1"
																	DataContext="{Binding}"
																	Foreground="White"
																	DockPanel.Dock="Left"
																	Style="{StaticResource Label.BookMark.Title}"
																	/>

															<Label
																	Content="{Binding ExtMergeItemCount,
																										Mode=OneWay,
																										FallbackValue=0}"
																	Margin="0"
																	Padding="8,0,0,1"
																	Foreground="White"
																	ContentStringFormat="{}( {0} Total Merge Items )"
																	Style="{StaticResource Label.BookMark.Title}"
																	/>
														</StackPanel>

													</ToggleButton.Content>

													<ToggleButton.Style>
														<Style
																TargetType="ToggleButton"
																BasedOn="{StaticResource ExpandCollapseToggleStyle01}"
																>
															<Setter Property="Visibility" Value="Visible" />
															<Setter Property="Foreground" Value="Red" />
															<Setter Property="IsEnabled" Value="True" />
															<Style.Triggers>
																<DataTrigger Value="0" Binding="{Binding Item.MergeItems.Count}">
																	<Setter Property="IsEnabled" Value="False" />
																	<Setter Property="Foreground" Value="PaleVioletRed" />
																</DataTrigger>
															</Style.Triggers>

														</Style>
													</ToggleButton.Style>
												</ToggleButton>

											</DockPanel>
										</Border>
									</DockPanel>

									<!--  part of Lv2 header  -->
									<ListView x:Name="Lv2"
											Margin="25,0,0,0"
											Width="Auto"
											Padding="0"
											HorizontalAlignment="Stretch"
											Background="Transparent"
											BorderThickness="0"
											ScrollViewer.CanContentScroll="False"
											ScrollViewer.HorizontalScrollBarVisibility="Disabled"
											ScrollViewer.VerticalScrollBarVisibility="Disabled"
											ItemContainerStyle="{DynamicResource ListBox.NoHighlight.Dark.ItemContainer}"
											ItemsSource="{Binding Item.MergeItems}"
											PreviewMouseWheel="UIElement_OnPreviewMouseWheel"

											>
											<!-- PreviewMouseWheel="UIElement_OnPreviewMouseWheel" -->
										<!--  Margin="{StaticResource Listview.ItemList.Margin}"  -->

										<ListView.ItemTemplate>
											<DataTemplate x:Name="Dt02"
													DataType="mergeSupport:MergeItem"
													>
												<Grid x:Name="Gd03"
														Margin="6,0,0,0"
														>

													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition
																Width="Auto"
																MinWidth="100"
																/>
														<ColumnDefinition Width="*" />
													</Grid.ColumnDefinitions>

													<Grid.RowDefinitions>
														<RowDefinition Height="Auto" />
													</Grid.RowDefinitions>

													<Path
															Margin="0,0,10,0"
															Width="{StaticResource ListView.Item.Star.Width}"
															Height="{StaticResource ListView.Item.Star.Height}"
															Data="{StaticResource Icon.Svg.Star}"
															Fill="{StaticResource Path.Plus.Star.Fill}"
															RenderTransformOrigin="0.5,0.5"
															Stretch="UniformToFill"
															StrokeThickness="0"
															>
													</Path>

													<Label x:Name="Lbl03"
															Content="{Binding Path=FilePath.FileNameObject.SheetNumber}"
															Grid.Column="1"
															Grid.Row="0"
															Margin="0,0,10,2"
															Padding="0,2,0,0"
															Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																									 Path=Foreground}"
															Style="{StaticResource Label.Base}"
															/>
													<Label x:Name="Lbl04"
															Content="{Binding Path=FilePath.FileNameObject.SheetTitle}"
															Grid.Column="2"
															Grid.Row="0"
															Margin="10,0,10,2"
															Padding="0,2,0,0"
															Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																									 Path=Foreground}"
															Style="{StaticResource Label.Base}"
															/>

												</Grid>
											</DataTemplate>
										</ListView.ItemTemplate>
										<ListView.Style>
											<Style TargetType="ListView">
												<Setter Property="Visibility" Value="Visible" />
												<Style.Triggers>
													<DataTrigger Value="false" Binding="{Binding Item.IsVisible}">
														<Setter Property="Visibility" Value="Collapsed" />
													</DataTrigger>
													<DataTrigger Value="0" Binding="{Binding ExtMergeItemCount, Mode=OneWay, FallbackValue=0}">
														<Setter Property="Visibility" Value="Collapsed">
														</Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ListView.Style>
									</ListView>
								</StackPanel>

								<ItemsPresenter
										Margin="25,0,0,0"
										DockPanel.Dock="Bottom"
										/>

							</DockPanel>
						</ScrollViewer>

					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->

	<!--#region > Tv1_ItemTemplate-->

	<HierarchicalDataTemplate x:Key="Tv1_ItemTemplate"
			DataType="treeSupport:TreeNode"
			ItemsSource="{Binding Children}"
			>

		<Grid HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<DockPanel
					Grid.Column="0"
					Grid.Row="0"
					Grid.ColumnSpan="2"
					HorizontalAlignment="Stretch"
					>

				<!--  <Border  -->
				<!--  DockPanel.Dock="Left"  -->
				<!--  Style="{StaticResource Border.BookMark.Icon}"  -->
				<!--  >  -->
				<!--  <Path x:Name="Plus"  -->
				<!--  Style="{StaticResource Path.BookMark.Icon}"  -->
				<!--  >  -->
				<!-- 	</Path> -->
				<!-- </Border> -->

				<Border
						DockPanel.Dock="Left"
						Style="{StaticResource Border.BookMark.Title}"
						>

					<DockPanel>

						<ToggleButton x:Name="Lv1_visibility"
								Margin="0,1,0,0"
								Height="{StaticResource BkMrkItemRowHeightDbl}"
								VerticalAlignment="Center"
								Background="Transparent"
								IsChecked="{Binding Item.IsVisible,
																		Mode=TwoWay,
																		FallbackValue=false}"
								ClickMode="Press"
								DockPanel.Dock="Left"
								>

							<ToggleButton.Content>
								<StackPanel
										Margin="0,-1,0,1"
										Orientation="Horizontal"
										>

									<Label
											Content="{Binding Path=Item.Title,
																				FallbackValue=title}"
											Margin="0,0,0,2"
											Padding="8,0,0,0"
											Foreground="White"
											Style="{StaticResource Label.BookMark.Title}"
											/>

									<Label
											Content="{Binding ExtMergeItemCount,
																				Mode=OneWay,
																				FallbackValue=0}"
											Margin="0,0,0,0"
											Padding="8,0,0,0"
											Foreground="White"
											ContentStringFormat="{}( {0} Total Merge Items )"
											Style="{StaticResource Label.BookMark.Title}"
											/>


								</StackPanel>

							</ToggleButton.Content>

							<ToggleButton.Style>
								<Style
										TargetType="ToggleButton"
										BasedOn="{StaticResource ExpandCollapseToggleStyle01}"
										>
									<Setter Property="Visibility" Value="Visible" />
									<Setter Property="Foreground" Value="Red" />
									<Setter Property="IsEnabled" Value="True" />
									<Style.Triggers>
										<DataTrigger Value="0" Binding="{Binding Item.MergeItems.Count}">
											<Setter Property="IsEnabled" Value="False" />
											<Setter Property="Foreground" Value="PaleVioletRed" />
											<!-- <Setter Property="Visibility" Value="Hidden"/> -->
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>

					</DockPanel>
				</Border>
			</DockPanel>


			<DockPanel x:Name="Dp01"
					Grid.Column="0"
					Grid.Row="1"
					Grid.ColumnSpan="2"
					>

				<ListView x:Name="Lv1"
						Margin="{StaticResource Listview.ItemList.Margin}"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Bottom"
						HorizontalContentAlignment="Stretch"
						VerticalContentAlignment="Bottom"
						Background="Transparent"
						BorderThickness="0"
						ScrollViewer.CanContentScroll="False"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						ScrollViewer.VerticalScrollBarVisibility="Disabled"
						ItemContainerStyle="{StaticResource ListBox.NoHighlight.Dark.ItemContainer}"
						ItemsSource="{Binding Item.MergeItems}"
						PreviewMouseWheel="UIElement_OnPreviewMouseWheel"
						>
					<ListView.ItemTemplate>

						<DataTemplate DataType="mergeSupport:MergeItem">
							<Grid x:Name="Gd01"
									Margin="3,0,5,0"
									>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition
											Width="Auto"
											MinWidth="100"
											/>
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Path
										Margin="0,0,8,0"
										Width="{StaticResource ListView.Item.Star.Width}"
										Height="{StaticResource ListView.Item.Star.Height}"
										Data="{StaticResource Icon.Svg.Star}"
										Fill="{StaticResource Path.Plus.Star.Fill}"
										RenderTransformOrigin="0.5,0.5"
										Stretch="UniformToFill"
										StrokeThickness="0"
										>
								</Path>

								<Label
										Content="{Binding Path=FilePath.FileNameObject.SheetNumber}"
										Grid.Column="1"
										Grid.Row="0"
										Margin="0,0,10,2"
										Padding="0,2,0,0"
										Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																				 Path=Foreground}"
										Style="{StaticResource Label.Base}"
										/>
								<Label
										Content="{Binding Path=FilePath.FileNameObject.SheetTitle}"
										Grid.Column="2"
										Grid.Row="0"
										Margin="10,0,10,2"
										Padding="0,2,0,0"
										Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},
																				 Path=Foreground}"
										Style="{StaticResource Label.Base}"
										/>

							</Grid>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>

				<DockPanel.Style>
					<Style TargetType="DockPanel">
						<Setter Property="Visibility" Value="Visible" />
						<Style.Triggers>
							<DataTrigger Value="false" Binding="{Binding Item.IsVisible}">
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</DockPanel.Style>

			</DockPanel>
		</Grid>

	</HierarchicalDataTemplate>

	<!--#endregion-->

</ResourceDictionary>
