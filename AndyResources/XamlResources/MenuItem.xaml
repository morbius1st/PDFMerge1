<ResourceDictionary
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		>

	<SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0" />
	<SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999" />
	<SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121" />
	<SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7" />
	<SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070" />
	<SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000" />
	<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000" />

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>

	<sys:Double x:Key="c1">32</sys:Double>
	<sys:Double x:Key="c1IconWidth">26</sys:Double>
	<sys:Double x:Key="c1IconHeight">16</sys:Double>

	<!-- <GridLength x:Key="c2">13</GridLength> -->
	<GridLength x:Key="c2">4</GridLength>
	<sys:Double x:Key="c2Glyph">22</sys:Double>

	<GridLength x:Key="c3">*</GridLength>
	<GridLength x:Key="c4">30</GridLength>
	<GridLength x:Key="c6">20</GridLength>





	<Style x:Key="MenuScrollButton"
			TargetType="{x:Type RepeatButton}"
			BasedOn="{x:Null}"
			>
		<Setter Property="ClickMode" Value="Hover" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="templateRoot"
							Background="Transparent"
							BorderThickness="1"
							BorderBrush="Transparent"
							SnapsToDevicePixels="true"
							>
						<ContentPresenter
								Margin="6"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}"
			TargetType="{x:Type ScrollViewer}"
			BasedOn="{x:Null}"
			>
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border
								Grid.Column="0"
								Grid.Row="1"
								>
							<ScrollContentPresenter
									Margin="{TemplateBinding Padding}"
									CanContentScroll="{TemplateBinding CanContentScroll}"
									/>
						</Border>
						<RepeatButton
								Grid.Column="0"
								Grid.Row="0"
								Command="{x:Static ScrollBar.LineUpCommand}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="false"
								Style="{StaticResource MenuScrollButton}"
								>
							<RepeatButton.Visibility>
								<MultiBinding
										ConverterParameter="0"
										Converter="{StaticResource MenuScrollingVisibilityConverter}"
										FallbackValue="Visibility.Collapsed"
										>
									<Binding
											Path="ComputedVerticalScrollBarVisibility"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
									<Binding
											Path="VerticalOffset"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
									<Binding
											Path="ExtentHeight"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
									<Binding
											Path="ViewportHeight"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path
									Data="{StaticResource UpArrow}"
									Fill="{StaticResource Menu.Static.Foreground}"
									/>
						</RepeatButton>
						<RepeatButton
								Grid.Column="0"
								Grid.Row="2"
								Command="{x:Static ScrollBar.LineDownCommand}"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="false"
								Style="{StaticResource MenuScrollButton}"
								>
							<RepeatButton.Visibility>
								<MultiBinding
										ConverterParameter="100"
										Converter="{StaticResource MenuScrollingVisibilityConverter}"
										FallbackValue="Visibility.Collapsed"
										>
									<Binding
											Path="ComputedVerticalScrollBarVisibility"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
									<Binding
											Path="VerticalOffset"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
									<Binding
											Path="ExtentHeight"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
									<Binding
											Path="ViewportHeight"
											RelativeSource="{RelativeSource TemplatedParent}"
											/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path
									Data="{StaticResource DownArrow}"
									Fill="{StaticResource Menu.Static.Foreground}"
									/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
			TargetType="{x:Type MenuItem}"
			>
		<Border x:Name="templateRoot"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				SnapsToDevicePixels="true"
				>
			<Grid 
					x:Name="Grid4x"
					VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
						Margin="3"
						Width="16"
						Height="16"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						ContentSource="Icon"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<Path x:Name="GlyphPanel"
						Margin="3"
						VerticalAlignment="Center"
						Data="{StaticResource Checkmark}"
						FlowDirection="LeftToRight"
						Fill="{StaticResource Menu.Static.Foreground}"
						Visibility="Collapsed"
						/>
				<ContentPresenter
						Grid.Column="1"
						Margin="{TemplateBinding Padding}"
						ContentSource="Header"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter TargetName="GlyphPanel" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
			TargetType="{x:Type MenuItem}"
			>
		<Border x:Name="templateRoot"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				SnapsToDevicePixels="true"
				>
			<Grid 
					x:Name="Grid3x"
					VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
						Margin="3"
						Width="16"
						Height="16"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						ContentSource="Icon"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<Path x:Name="GlyphPanel"
						Margin="3"
						VerticalAlignment="Center"
						Data="{StaticResource Checkmark}"
						FlowDirection="LeftToRight"
						Fill="{TemplateBinding Foreground}"
						Visibility="Collapsed"
						/>
				<ContentPresenter
						Grid.Column="1"
						Margin="{TemplateBinding Padding}"
						ContentSource="Header"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<Popup x:Name="PART_Popup"
						AllowsTransparency="true"
						IsOpen="{Binding IsSubmenuOpen,
														 RelativeSource={RelativeSource TemplatedParent}}"
						Focusable="false"
						Placement="Bottom"
						PlacementTarget="{Binding ElementName=templateRoot}"
						PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
						>
						<!--  -->
					<Border x:Name="SubMenuBorder"
							Padding="2"
							Background="{StaticResource Menu.Static.Background}"
							BorderThickness="1"
							BorderBrush="{StaticResource Menu.Static.Border}"
							>
						<ScrollViewer x:Name="SubMenuScrollViewer"
								Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
																															TypeInTargetAssembly={x:Type FrameworkElement}}}"
								>
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas
										Width="0"
										Height="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										>
									<Rectangle x:Name="OpaqueRect"
											Width="{Binding ActualWidth,
																			ElementName=SubMenuBorder}"
											Height="{Binding ActualHeight,
																			 ElementName=SubMenuBorder}"
											Fill="{Binding Background,
																		 ElementName=SubMenuBorder}"
											/>
								</Canvas>
								<Rectangle
										Margin="29,2,0,2"
										Width="1"
										HorizontalAlignment="Left"
										Fill="{StaticResource Menu.Static.Separator}"
										/>
								<ItemsPresenter x:Name="ItemsPresenter"
										KeyboardNavigation.DirectionalNavigation="Cycle"
										Grid.IsSharedSizeScope="true"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										KeyboardNavigation.TabNavigation="Cycle"
										/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter TargetName="GlyphPanel" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" Value="false" SourceName="SubMenuScrollViewer">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
			TargetType="{x:Type MenuItem}"
			>
		<Border x:Name="templateRoot"
				Height="22"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				SnapsToDevicePixels="true"
				>
			<Grid 
					x:Name="Grid2x"
					Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition
							Width="Auto"
							MinWidth="{StaticResource c1}"
							SharedSizeGroup="MenuItemIconColumnGroup"
							/>
					<ColumnDefinition Width="{StaticResource c2}" />
					<ColumnDefinition Width="{StaticResource c3}" />
					<ColumnDefinition Width="{StaticResource c4}" />
					<ColumnDefinition
							Width="Auto"
							SharedSizeGroup="MenuItemIGTColumnGroup"
							/>
					<ColumnDefinition Width="{StaticResource c6}" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
						Margin="3"
						Width="{StaticResource c1IconWidth}"
						Height="{StaticResource c1IconHeight}"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						ContentSource="Icon"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<Border x:Name="GlyphPanel"
						Margin="-1,0,0,0"
						Width="{StaticResource c2Glyph}"
						Height="{StaticResource c2Glyph}"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Background="{StaticResource MenuItem.Selected.Background}"
						BorderThickness="1"
						BorderBrush="{StaticResource MenuItem.Selected.Border}"
						ClipToBounds="False"
						Visibility="Hidden"
						>

					<Path x:Name="Glyph"
							Width="10"
							Height="11"
							Data="{StaticResource Checkmark}"
							FlowDirection="LeftToRight"
							Fill="{StaticResource Menu.Static.Foreground}"
							/>
				</Border>
				<ContentPresenter x:Name="menuHeaderContainer"
						Grid.Column="2"
						Margin="{TemplateBinding Padding}"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						ContentSource="Header"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<TextBlock x:Name="menuGestureText"
						Grid.Column="4"
						Margin="{TemplateBinding Padding}"
						VerticalAlignment="Center"
						Opacity="0.7"
						Text="{TemplateBinding InputGestureText}"
						/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Background}" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}"
			TargetType="{x:Type MenuItem}"

			>
		<Border x:Name="templateRoot"
				Height="22"
				Background="{TemplateBinding Background}"
				BorderThickness="{TemplateBinding BorderThickness}"
				BorderBrush="{TemplateBinding BorderBrush}"
				SnapsToDevicePixels="true"
				>
			<Grid 
					x:Name="Grid1x"
					Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition
							Width="Auto"
							MinWidth="{StaticResource c1}"
							SharedSizeGroup="MenuItemIconColumnGroup"
							/>
					<ColumnDefinition Width="{StaticResource c2}" />
					<ColumnDefinition Width="{StaticResource c3}" />
					<ColumnDefinition Width="{StaticResource c4}" />
					<ColumnDefinition
							Width="Auto"
							SharedSizeGroup="MenuItemIGTColumnGroup"
							/>
					<ColumnDefinition Width="{StaticResource c6}" />
				</Grid.ColumnDefinitions>

				<ContentPresenter x:Name="Icon"
						Margin="3"
						Width="{StaticResource c1IconWidth}"
						Height="{StaticResource c1IconHeight}"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						ContentSource="Icon"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<Border x:Name="GlyphPanel"
						Margin="-1,0,0,0"
						Width="{StaticResource c2Glyph}"
						Height="{StaticResource c2Glyph}"
						VerticalAlignment="Center"
						Background="{StaticResource MenuItem.Highlight.Background}"
						BorderThickness="1"
						BorderBrush="{StaticResource MenuItem.Highlight.Border}"
						Visibility="Hidden"
						>
					<Path x:Name="Glyph"
							Width="9"
							Height="11"
							Data="{DynamicResource Checkmark}"
							FlowDirection="LeftToRight"
							Fill="{StaticResource Menu.Static.Foreground}"
							/>
				</Border>
				<ContentPresenter
						Grid.Column="2"
						Margin="{TemplateBinding Padding}"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						ContentSource="Header"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						/>
				<TextBlock
						Grid.Column="4"
						Margin="{TemplateBinding Padding}"
						VerticalAlignment="Center"
						Opacity="0.7"
						Text="{TemplateBinding InputGestureText}"
						/>
				<Path x:Name="RightArrow"
						Grid.Column="5"
						Margin="10,0,0,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Data="{StaticResource RightArrow}"
						Fill="{StaticResource Menu.Static.Foreground}"
						/>
				<Popup x:Name="PART_Popup"
						AllowsTransparency="true"
						IsOpen="{Binding IsSubmenuOpen,
														 RelativeSource={RelativeSource TemplatedParent}}"
						Focusable="false"
						HorizontalOffset="-2"
						Placement="Right"
						VerticalOffset="-3"
						PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
						>

					<Border x:Name="SubMenuBorder"
							Padding="2"
							Background="{StaticResource Menu.Static.Background}"
							BorderThickness="1"
							BorderBrush="{StaticResource Menu.Static.Border}"
							>
						<ScrollViewer x:Name="SubMenuScrollViewer"
								Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
																															TypeInTargetAssembly={x:Type FrameworkElement}}}"
								>
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas
										Width="0"
										Height="0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										>
									<Rectangle x:Name="OpaqueRect"
											Width="{Binding ActualWidth,
																			ElementName=SubMenuBorder}"
											Height="{Binding ActualHeight,
																			 ElementName=SubMenuBorder}"
											Fill="{Binding Background,
																		 ElementName=SubMenuBorder}"
											/>
								</Canvas>
								<Rectangle
										Margin="29,2,0,2"
										Width="1"
										HorizontalAlignment="Left"
										Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
										/>
								<ItemsPresenter x:Name="ItemsPresenter"
										KeyboardNavigation.DirectionalNavigation="Cycle"
										Grid.IsSharedSizeScope="true"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										KeyboardNavigation.TabNavigation="Cycle"
										/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="Transparent" />
				<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
				<Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" Value="false" SourceName="SubMenuScrollViewer">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<Style x:Key="MenuItemStyle1"
			TargetType="MenuItem"
			>

		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
				<Setter Property="Padding" Value="6,0" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Background" Value="{StaticResource Menu.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}" />
				<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
				<Setter Property="Padding" Value="6,0" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>