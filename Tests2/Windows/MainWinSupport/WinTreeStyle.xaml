<ResourceDictionary
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:Tests2.Windows.MainWinSupport"
		>
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="WinTreeDesigns.xaml" />
	</ResourceDictionary.MergedDictionaries>


	<Style x:Key="WinTreeStyle"
			TargetType="{x:Type TreeViewItem}"
			>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="1,0,0,0" />
		<Setter Property="local:TVIExtender.UseExtender" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid Name="grid_win_form">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource TvTreeMarginLeft}" />
							<ColumnDefinition Width="Auto" MinWidth="{StaticResource TvToggBtnColWidthLeft}" />
							<ColumnDefinition Width="Auto" MinWidth="{StaticResource TvToggBtnColWidthRight}" />
							<ColumnDefinition Width="{StaticResource TvTreeMarginRight}" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<!--  upper left corner  -->
						<Border x:Name="VertLineTop"
								Grid.Column="1"
								Grid.Row="0"
								Margin="0,0,-2,0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								BorderThickness="{StaticResource TvVertConnThk}"
								BorderBrush="{StaticResource VertConnectorLine}"
								/>

						<!--  upper right corner  -->
						<Border x:Name="HorizLine"
								Grid.Column="2"
								Grid.Row="0"
								Grid.ColumnSpan="2"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								BorderThickness="{StaticResource TvHorizConnThk}"
								BorderBrush="White"
								/>

						<!--  lower left corner  -->
						<Border x:Name="VertLineBottom"
								Grid.Column="1"
								Grid.Row="1"
								Grid.RowSpan="2"
								Margin="0,0,-2,0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								BorderThickness="{StaticResource TvVertConnThk}"
								BorderBrush="{StaticResource VertConnectorLine}"
								/>


						<ToggleButton x:Name="Expander"
								Grid.Column="1"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.ColumnSpan="2"
								Margin="{StaticResource ToggleBtnMargin}"
								HorizontalAlignment="Left"
								ClickMode="Press"
								IsChecked="{Binding Path=IsExpanded,
																		RelativeSource={RelativeSource TemplatedParent}}"
								Style="{DynamicResource ExpandCollapseToggleStyle}"
								/>

						<Border Name="Bd"
								Grid.Column="4"
								Grid.Row="0"
								Grid.RowSpan="2"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								>

							<ContentPresenter x:Name="PART_Header"
									MinWidth="20"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									ContentSource="Header"
									/>
						</Border>

						<ItemsPresenter x:Name="ItemsHost"
								Grid.Column="4"
								Grid.Row="2"
								Grid.ColumnSpan="2"
								/>
					</Grid>

					<ControlTemplate.Triggers>

						<Trigger Property="local:TVIExtender.IsLastOne" Value="True">
							<Setter TargetName="VertLineBottom" Property="Visibility" Value="Hidden" />
						</Trigger>

						<Trigger Property="local:TVIExtender.IsFirstOne" Value="True">
							<Setter TargetName="VertLineTop" Property="Visibility" Value="Hidden" />
						</Trigger>

						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>

						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false" />
								<Condition Property="Width" Value="Auto" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false" />
								<Condition Property="Height" Value="Auto" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinHeight" Value="{StaticResource TvToggBtnColWidthRight}" />
						</MultiTrigger>

						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="White" />
							<Setter TargetName="Bd" Property="Background" Value="Blue" />
						</MultiTrigger>

						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>

		</Setter>




	</Style>

</ResourceDictionary>
