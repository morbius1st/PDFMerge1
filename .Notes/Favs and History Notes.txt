See > StoreAndRead2.xaml.cs < for status



Description of how favorites and history are save and found.

do this as a separate app / dll / and use from other assemblies.

being saved:

1. classification file locations
2. sample file locations (only as a "file pair")

presentation per user

1.  as a favorite list (user adds items to the list)
2.  as a history list (program adds item to the list)
3.  as a "file pair" favorite (user adds a pair to the list)  (sylverter only / implement later but plan now)
4.  as a "file pair" history list (program add a pair ot the list) (sylverter only / implement later but plan now)

location of data files are stored in suite setting file - need to add this to andy config??

wrong: location of data file must be the site folder that can be (this folder will be restricted and cannot be accessed)


storage method

vvvvvvvvvvvvv rev 2 vvvvvvvvvvvvvvvvvvvvv
* per user data file
	* located in the suite folder
	* as a sub-folder in "Favs And History"
	* with a separate file per user (expect only one or two users per computer / folder)
	* will have a single file per user that will contain all of the data:

	1.  list of classf file favs					(ClassifileList)
		key: job number + filename					(FileListKey)
		value: file path							(FilePath<>)

	2.  list of sample file favs					(SampleFileList)
		key: job number + filename					(FIleListKey)
		value: file path							(FIlePath<>)

	3.  user list of favs								(UserFavClassfList)
		key: job number  + padding + display name		(UserListKey)
		value:										(UserFavClassfListValue)
			key from 1
			icon name

	4.	user list of folder pairs						(UserFavPairList)
		key: job number + padding + display name		(UserListKey)
		value:										(UserFavPairListValue)
			key from 1
			key from 2
			icon name

	5.	user history / classf file						(UserHistClassfList)
		key: job number + padding + display name		(UserListKey)
		value:										(UserHistClassfListValue)
			file path for classf file
			icon name

	6.	user history / folder pair						(UserHistSmplList)
		key: job number + padding + display name		(UserListKey)
		value:										(UserHistPairListValue)
			file path for classf file
			file path for sample file
			icon name



^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

vvvvvvvvvvvvv nope - will not work vvvvvvvvvvvvvvvvvvvvv
value class:
1. Std saved folder
	a. given display name (may be empty)
	b. filepath

data file classes
1. data file for favs
	a. a list of ALL saved classification files - based on a dictionary
	b. key is project number + arbitrary key to allow connection finding later
	c. value is: Std saved folder

2. data file for history
	a.  a list of ALL saved sample files / all sample files go into a common folder
		to limit duplication and to allow re-use - based on a dictionary
	b. key is project number + arbitrary key to allow connection finding later
	c. value is: Std saved folder

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

vvvvvvvvvvvvv rev 1 vvvvvvvvvvvvvvvvvvvvv
3. per user data file / dictionary
	* located in the suite folder
	* as a sub-folder in "Favs And History"
	* with a separate file per user (expect only one or two users per computer / folder)
	* will have a single file per user that will contain
	* unique number is a sequential number per user and is used for all of the below
		a. the list of possible favs 
			key: project number + type code + code + unique number
			Code: provided but can be revised by the user
			Value: path
		a. includes list of favorites
			i. key: project number + arbitrary value key
			ii. value is: Std saved folder
		b. includes a history list (last 10 (optional quantity setting here?))
			i. key: project number + arbitrary value key
			ii. value is: Std saved folder
		c. includes a folder pair list (points to a favorite + sample file) of favs
			i. key: fav key
			ii. value is: Std saved folder
		d. includes a folder pair list (points to a history + sample file) history
			i. key: history key
			ii. value is: Std saved folder

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^





functions
1.  UI
	a. purpose
		i. allow the user to select a favorite
		ii. allow the user to select a history (& add to favs)
		iii. allow the user to select a folder pair favorite
		iv. allow the user to select a folder pair history (& add to favs)
		v. maintenance
			* edit / delete / etc. favs & history
			* edit / delete / etc. folder pair favs & history

2. utility
	z. save the last classf file worked on
	a. provide a list of favs for the current project
	b. add a fav
	c. add a history
	d. provide a list of users?

3. needed
	a. user name (to allow access to other than the current user's info)
	b. project number



