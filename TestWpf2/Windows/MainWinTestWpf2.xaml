<Window
		x:Class="TestWpf2.Windows.MainWinTestWpf2"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:TestWpf2.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		Title="MainWindow"
		Name="mainWinTestWpf2"
		Width="800"
		Height="550"
		mc:Ignorable="d"
		Background="{StaticResource Normal.Window.Background}"
		DataContext="{Binding ElementName=mainWinTestWpf2}"
		>

	<Window.Resources>

		<Style x:Key="TreeViewItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
		<PathGeometry x:Key="TreeArrow"
				Figures="M0,0 L0,6 L6,0 z"
				/>
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
		<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />


		<Style x:Key="ExpandCollapseToggleStyle"
				TargetType="{x:Type ToggleButton}"
				>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="Width" Value="16" />
			<Setter Property="Height" Value="16" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border
								Width="16"
								Height="16"
								Padding="5,5,5,5"
								Background="Transparent"
								>
							<Path x:Name="ExpandPath"
									Data="{StaticResource TreeArrow}"
									Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
									Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
									>
								<Path.RenderTransform>
									<RotateTransform Angle="135" CenterX="3" CenterY="3" />
								</Path.RenderTransform>
							</Path>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="ExpandPath" Property="RenderTransform">
									<Setter.Value>
										<RotateTransform Angle="180" CenterX="3" CenterY="3" />
									</Setter.Value>
								</Setter>
								<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
								<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
								<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True" />
									<Condition Property="IsChecked" Value="True" />
								</MultiTrigger.Conditions>
								<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
								<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="TreeViewItemStyle1"
				TargetType="{x:Type TreeViewItem}"
				>
			<!-- <Setter Property="IsExpanded" Value="True"/> -->
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="Padding" Value="1,0,0,0" />
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="19" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<ToggleButton x:Name="Expander"
									IsChecked="{Binding IsExpanded,
																			RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press"
									Style="{StaticResource ExpandCollapseToggleStyle}"
									/>
							<Border x:Name="Bd"
									Grid.Column="1"
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									SnapsToDevicePixels="true"
									>
								<ContentPresenter x:Name="PART_Header"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										ContentSource="Header"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
							</Border>
							<ItemsPresenter x:Name="ItemsHost"
									Grid.Column="1"
									Grid.Row="1"
									Grid.ColumnSpan="2"
									/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="false">
								<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true" />
									<Condition Property="IsSelectionActive" Value="false" />
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
								<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
					<Setter Property="ItemsPanel">
						<Setter.Value>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel />
							</ItemsPanelTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>



	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="7*" />
			<ColumnDefinition Width="7*" />
			<ColumnDefinition Width="4*" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="6" />
			<RowDefinition Height="*" />
			<RowDefinition Height="50" />
		</Grid.RowDefinitions>

		<ProgressBar x:Name="Pb1"
				Grid.Column="0"
				Grid.Row="0"
				Height="3"
				VerticalAlignment="Bottom"
				Value="{Binding Pb1Value}"
				Background="Transparent"
				BorderThickness="0"
				Maximum="{Binding Pb1MaxValue}"
				/>



		<DockPanel
				Grid.Column="0"
				Grid.Row="2"
				Grid.ColumnSpan="3"
				Margin="5"
				HorizontalAlignment="Right"
				>

			<Button x:Name="BtnDebug"
					Content="Debug"
					Margin="5,0,0,0"
					Width="70"
					Height="30"
					VerticalAlignment="Bottom"
					Click="BtnDebug_OnClick"
					/>
			
			<Button x:Name="BtnTestProgress"
					Content="Test ProgBar"
					Margin="5,0,0,0"
					Width="70"
					Height="30"
					VerticalAlignment="Bottom"
					Click="BtnTestProgress_OnClick"
					/>
			<!-- -->
			<!-- <Button x:Name="BtnClear" -->
			<!-- 		Content="Clear" -->
			<!-- 		Margin="5,0,0,0" -->
			<!-- 		Width="70" -->
			<!-- 		Height="30" -->
			<!-- 		VerticalAlignment="Bottom" -->
			<!-- 		Click="BtnClear_OnClick" -->
			<!-- 		/> -->
			<!-- -->
			<!-- <Button x:Name="BtnCount" -->
			<!-- 		Content="Count" -->
			<!-- 		Margin="5,0,0,0" -->
			<!-- 		Width="70" -->
			<!-- 		Height="30" -->
			<!-- 		VerticalAlignment="Bottom" -->
			<!-- 		Click="BtnCount_OnClick" -->
			<!-- 		/> -->
			<!-- -->
			<!-- <Button x:Name="BtnTest" -->
			<!-- 		Content="Test" -->
			<!-- 		Margin="5,0,0,0" -->
			<!-- 		Width="70" -->
			<!-- 		Height="30" -->
			<!-- 		VerticalAlignment="Bottom" -->
			<!-- 		Click="BtnTest_OnClick" -->
			<!-- 		/> -->

		</DockPanel>

		<DockPanel
				Grid.Column="2"
				Grid.Row="1"
				Margin="15,5,5,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				>

			<StackPanel
					DockPanel.Dock="Top"
					Orientation="Horizontal"
					>
				<Label
						Content="Extended Count"
						Margin="0"
						Width="120"
						Padding="0"
						Foreground="White"
						/>
				<Label
						Content="{Binding Path=ExtendedCount,
															Mode=OneWay,
															FallbackValue=0}"
						Margin="0,0,0,0"
						Padding="0"
						Foreground="White"
						/>
			</StackPanel>

			<StackPanel
					DockPanel.Dock="Top"
					Orientation="Horizontal"
					>
				<Label
						Content="Test Count"
						Margin="0"
						Width="120"
						Padding="0"
						Foreground="White"
						/>
				<Label
						Content="{Binding Path=TestCount,
															Mode=OneWay,
															FallbackValue=0}"
						Margin="0,0,0,0"
						Padding="0"
						Foreground="White"
						/>
			</StackPanel>

			<StackPanel
					DockPanel.Dock="Top"
					Orientation="Horizontal"
					>
				<Label
						Content="Ext Merge Count"
						Margin="0"
						Width="120"
						Padding="0"
						Foreground="White"
						/>
				<Label
						Content="{Binding Path=ExtendedMergeCount,
															Mode=OneWay,
															FallbackValue=0}"
						Margin="0,0,0,0"
						Padding="0"
						Foreground="White"
						/>
			</StackPanel>


		</DockPanel>


		<TextBox x:Name="Tbx1"
				Grid.Column="1"
				Grid.Row="1"
				Background="Transparent"
				Foreground="White"
				Text="{Binding TbxMessage,
											 Mode=OneWay}"
				/>


		<TreeView x:Name="Tv1"
				Grid.Column="0"
				Grid.Row="1"
				DataContext="{Binding Source={x:Static local:MainWinTestWpf2.Sd},
															Path=TreeRoot}"
				d:DataContext="{Binding Source={x:Static local:MainWinTestWpf2.Sd},
																Path=Root}"
				Background="Transparent"
				ItemContainerStyle="{StaticResource TreeViewItemStyle1}"
				ItemsSource="{Binding Path=ChildNodes}"
				>
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding ChildNodes}">
					<DockPanel HorizontalAlignment="Stretch">
						<StackPanel
								DockPanel.Dock="Top"
								Orientation="Horizontal"
								>
							<Label
									Content="{Binding ExtCount}"
									Margin="10,0,0,0"
									Padding="0"
									Foreground="White"
									/>

							<Label
									Content="{Binding ExtMergeCount}"
									Margin="10,0,0,0"
									Padding="0"
									Foreground="White"
									/>

							<Label
									Content="{Binding ExtData.MergeCount}"
									Margin="10,0,0,0"
									Padding="0"
									Foreground="White"
									/>

							<Label
									Content="{Binding Name}"
									Margin="10,0,0,0"
									Padding="0"
									Foreground="White"
									>
							</Label>
						</StackPanel>

						<DockPanel HorizontalAlignment="Stretch">

							<Label
									Content="{Binding ExtData.ExtName}"
									Margin="5,0,0,0"
									Padding="0"
									Foreground="White"
									DockPanel.Dock="Top"
									>
							</Label>

							<Label
									Content="No Merge items"
									Margin="5,0,0,0"
									Padding="0"
									Foreground="DarkSalmon"
									DockPanel.Dock="Top"
									>
								<Label.Style>
									<Style TargetType="Label">
										<Setter Property="Visibility" Value="Collapsed" />
										<Style.Triggers>
											<DataTrigger Value="0" Binding="{Binding Path=ExtData.MergeCount}">
												<Setter Property="Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Label.Style>

							</Label>

							<ListView
									Margin="5,0,0,0"
									Padding="0"
									Background="Black"
									DockPanel.Dock="Top"
									ItemsSource="{Binding Path=ExtData.MergeInfo}"
									>
								<ListView.Style>
									<Style TargetType="ListView">
										<Setter Property="Visibility" Value="Visible" />
										<Style.Triggers>
											<DataTrigger Value="0" Binding="{Binding Path=ExtData.MergeCount}">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ListView.Style>
								<ListView.ItemTemplate>
									<DataTemplate>
										<StackPanel Orientation="Horizontal">
											<Label
													Content="{Binding Path=MergeNumber}"
													Padding="0,0,10,0"
													Foreground="White"
													/>
											<Label
													Content="{Binding Path=MergeName}"
													Foreground="White"
													/>

										</StackPanel>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>

							<DockPanel.Style>
								<Style TargetType="DockPanel">
									<Setter Property="Visibility" Value="Visible" />
									<Style.Triggers>
										<DataTrigger Value="false" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=IsSelected}">
											<Setter Property="Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</DockPanel.Style>

						</DockPanel>




					</DockPanel>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>

	</Grid>
</Window>
