<Button x:Name="skewedButton"
		x:Class="WpfShared.Windows.ResourceFiles.SkewedBtn.SkewedButton"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfShared.Windows.ResourceFiles.SkewedBtn"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Padding="0"
		mc:Ignorable="d"
		d:DesignHeight="35"
		ContentTemplate="{DynamicResource DataTemplate}"
		Template="{DynamicResource ControlTemplate}"

		>
	<!-- Click="SkewedButton_OnClick" -->

	<Button.Resources>

		<SolidColorBrush x:Key="Static.Background" Color="#FF444444" />
		<SolidColorBrush x:Key="Static.ForeGround" Color="#FFCCCCCC" />
		<SolidColorBrush x:Key="Static.Border" Color="#FF666666" />

		<SolidColorBrush x:Key="Disabled.Background" Color="#FF646464" />
		<SolidColorBrush x:Key="Disabled.Border" Color="#FFADB2B5" />

		<SolidColorBrush x:Key="MouseOver.Background" Color="#FF616161" />
		<SolidColorBrush x:Key="MouseOver.Border" Color="#FFC7EAFF" />

		<!-- <SolidColorBrush x:Key="MouseOver.Foreground" Color="White"/> -->
		<!-- <SolidColorBrush x:Key="Pressed.Border.Background" Color="#FFC4E5F6" /> -->
		<!-- <SolidColorBrush x:Key="Pressed.Border" Color="#FF2C628B" /> -->


		<!--  default style  -->
		<Style TargetType="Button">
			
			<Setter Property="BorderThickness" Value="0,0,3,0" />
			<Setter Property="BorderBrush" Value="{StaticResource Static.Border}" />
			<Setter Property="Width" Value="90" />
		</Style>

		<Style TargetType="local:SkewedButton">
			<Setter Property="ButtonSkewAngle" Value="20" />
		</Style>

		<Path x:Key="p"
				Margin="0"
				Width="20"
				Height="15"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Data="M 0,0 0,4 4,4 4,0 z"
				Fill="Red"
				Stretch="Uniform"
				/>

		<TextBlock x:Key="t"
				Margin="0,0,15,0"
				Padding="0"
				HorizontalAlignment="right"
				VerticalAlignment="bottom"
				Background="Transparent"
				Foreground="{StaticResource Static.ForeGround}"
				Text="Text"
		/>

		<DataTemplate x:Key="DataTemplate">
			<Grid x:Name="DtGrid">

				<ContentControl x:Name="IconContent" 
						Content="{Binding ElementName=skewedButton,
															Path=Icon,
															FallbackValue={StaticResource p}}"
						HorizontalAlignment="{Binding Content.HorizontalAlignment,
																					RelativeSource={RelativeSource Self},
																					FallbackValue='Center'}"
						VerticalAlignment="{Binding Content.VerticalAlignment,
																				RelativeSource={RelativeSource Self},
																				FallbackValue='Center'}"
						/>


					<ContentControl x:Name="TextContent"
							Content="{Binding ElementName=skewedButton,
																Path=TextBlk,
																FallbackValue={StaticResource t}}"
							HorizontalAlignment="{Binding Content.HorizontalAlignment,
																						RelativeSource={RelativeSource Self},
																						FallbackValue='Center'}"
							VerticalAlignment="{Binding Content.VerticalAlignment,
																						RelativeSource={RelativeSource Self},
																						FallbackValue='Center'}"

							/>


			</Grid>
		</DataTemplate>


		<ControlTemplate x:Key="ControlTemplate"
				TargetType="{x:Type Button}"
				>

			<Grid x:Name="skbgrid"
					Background="Transparent"
					SnapsToDevicePixels="True"
					>

				<Border x:Name="border"
						Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SkewedButton}},
																 Path=Background,
																 FallbackValue={StaticResource Static.Background}}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						RenderTransformOrigin="1,1"
						>
					<Border.RenderTransform>
						<SkewTransform AngleX="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:SkewedButton}}, Path=ButtonSkewAngle, FallbackValue='20.0', TargetNullValue='20.0'}" />
					</Border.RenderTransform>
				</Border>

				<ContentPresenter x:Name="skbcontentPresenter"
						Content="{TemplateBinding Content}"
						Margin="{TemplateBinding Padding}"
						Width="{TemplateBinding Width}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						ContentStringFormat="{TemplateBinding ContentStringFormat}"
						Focusable="False"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						/>
			</Grid>

			<ControlTemplate.Triggers>
				<Trigger Property="IsDefaulted" Value="True">
					<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="true" />
						<Condition Property="IsPressed" Value="False" />
					</MultiTrigger.Conditions>
					<Setter TargetName="border" Property="Background" Value="{StaticResource MouseOver.Background}" />
					<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MouseOver.Border}" />
					<!-- <Setter TargetName="border" Property="Background" Value="#FF6E666D" /> -->
					<!-- <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" /> -->
				</MultiTrigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="border" Property="Background" Value="{StaticResource Disabled.Background}" />
					<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Disabled.Border}" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

	</Button.Resources>

</Button>
