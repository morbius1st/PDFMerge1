<Window
		x:Class="WpfShared.Windows.Window1"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfShared.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:xs="clr-namespace:AndySharedResources.XamlResources"
		Title="Window1"
		Width="800"
		Height="450"
		mc:Ignorable="d"
		Background="{DynamicResource Window.Background}"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/ScrollBar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterVisualResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
			</ResourceDictionary.MergedDictionaries>


			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
									Margin="2"
									SnapsToDevicePixels="true"
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									StrokeDashArray="1 2"
									StrokeThickness="1"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFF0F0F0" />
				<GradientStop Offset="1.0" Color="#FFE5E5E5" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
			<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFECF4FC" />
				<GradientStop Offset="1.0" Color="#FFDCECFC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
			<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
			<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFEBF4FC" />
				<GradientStop Offset="1.0" Color="#FFDCECFC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
			<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
			<LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFDAECFC" />
				<GradientStop Offset="1.0" Color="#FFC4E0FC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
			<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
			<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFDAEBFC" />
				<GradientStop Offset="1.0" Color="#FFC4E0FC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Background2" Color="#FFF0F0F0" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />

			<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />



			<Style x:Key="ComboBoxToggleButton"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="IsTabStop" Value="false" />
				<Setter Property="Focusable" Value="false" />
				<Setter Property="ClickMode" Value="Press" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border x:Name="templateRoot"
									SnapsToDevicePixels="true"
									Background="{StaticResource ComboBox.Static.Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{StaticResource ComboBox.Static.Border}"
									>
								<Border x:Name="splitBorder"
										Margin="0"
										Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
										HorizontalAlignment="Right"
										SnapsToDevicePixels="true"
										BorderThickness="1"
										BorderBrush="Transparent"
										>
									<Path x:Name="arrow"
											Margin="0"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
											Fill="{StaticResource ComboBox.Static.Glyph}"
											/>
								</Border>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
										<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
										<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
										<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
								</MultiDataTrigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
								</MultiDataTrigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background2}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
										<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
								</MultiDataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ComboBoxTemplate"
					TargetType="{x:Type ComboBox}"
					>
				<Grid x:Name="templateRoot"
						SnapsToDevicePixels="true"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
					</Grid.ColumnDefinitions>

					<Popup x:Name="PART_Popup"
							AllowsTransparency="true"
							Grid.ColumnSpan="2"
							Margin="1"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							IsOpen="{Binding IsDropDownOpen,
															 Mode=TwoWay,
															 RelativeSource={RelativeSource TemplatedParent}}"
							>
						<Themes:SystemDropShadowChrome x:Name="shadow"
								MinWidth="{Binding ActualWidth,
																	 ElementName=templateRoot}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Color="Transparent"
								>
							<Border x:Name="dropDownBorder"
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
									BorderThickness="1"
									BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
									>
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid x:Name="grid"
											RenderOptions.ClearTypeHint="Enabled"
											>
										<Canvas x:Name="canvas"
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top"
												>
											<Rectangle x:Name="opaqueRect"
													Width="{Binding ActualWidth,
																					ElementName=dropDownBorder}"
													Height="{Binding ActualHeight,
																					 ElementName=dropDownBorder}"
													Fill="{Binding Background,
																				 ElementName=dropDownBorder}"
													/>
										</Canvas>
										<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>

					<ToggleButton x:Name="toggleButton"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							IsChecked="{Binding IsDropDownOpen,
																	Mode=TwoWay,
																	RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource ComboBoxToggleButton}"
							/>

					<ContentPresenter x:Name="contentPresenter"
							Content="{TemplateBinding SelectionBoxItem}"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							IsHitTestVisible="false"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							/>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
						<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
						<Setter TargetName="shadow" Property="Color" Value="#71000000" />
					</Trigger>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsGrouping" Value="true" />
							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</MultiTrigger>
					<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
						<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>


			<Style x:Key="ComboBoxEditableTextBox"
					TargetType="{x:Type TextBox}"
					>
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="AllowDrop" Value="true" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="MinHeight" Value="0" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<ScrollViewer x:Name="PART_ContentHost"
									Focusable="false"
									HorizontalScrollBarVisibility="Hidden"
									VerticalScrollBarVisibility="Hidden"
									Background="Transparent"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ComboBoxEditableTemplate"
					TargetType="{x:Type ComboBox}"
					>
				<Grid x:Name="templateRoot"
						SnapsToDevicePixels="true"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
					</Grid.ColumnDefinitions>
					<Popup x:Name="PART_Popup"
							AllowsTransparency="true"
							Grid.ColumnSpan="2"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							IsOpen="{Binding IsDropDownOpen,
															 RelativeSource={RelativeSource TemplatedParent}}"
							>
						<Themes:SystemDropShadowChrome x:Name="shadow"
								MinWidth="{Binding ActualWidth,
																	 ElementName=templateRoot}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Color="Transparent"
								>
							<Border x:Name="dropDownBorder"
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
									BorderThickness="1"
									BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
									>
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid x:Name="grid"
											RenderOptions.ClearTypeHint="Enabled"
											>
										<Canvas x:Name="canvas"
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top"
												>
											<Rectangle x:Name="opaqueRect"
													Width="{Binding ActualWidth,
																					ElementName=dropDownBorder}"
													Height="{Binding ActualHeight,
																					 ElementName=dropDownBorder}"
													Fill="{Binding Background,
																				 ElementName=dropDownBorder}"
													/>
										</Canvas>
										<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton x:Name="toggleButton"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							IsChecked="{Binding IsDropDownOpen,
																	Mode=TwoWay,
																	RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource ComboBoxToggleButton}"
							/>
					<Border x:Name="border"
							Margin="{TemplateBinding BorderThickness}"
							Background="{StaticResource TextBox.Static.Background}"
							>
						<TextBox x:Name="PART_EditableTextBox"
								Margin="{TemplateBinding Padding}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								IsReadOnly="{Binding IsReadOnly,
																		 RelativeSource={RelativeSource TemplatedParent}}"
								Style="{StaticResource ComboBoxEditableTextBox}"
								/>
					</Border>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsEnabled" Value="false">
						<Setter TargetName="border" Property="Opacity" Value="0.56" />
					</Trigger>
					<Trigger Property="IsKeyboardFocusWithin" Value="true">
						<Setter Property="Foreground" Value="Black" />
					</Trigger>
					<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
						<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
						<Setter TargetName="shadow" Property="Color" Value="#71000000" />
					</Trigger>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsGrouping" Value="true" />
							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</MultiTrigger>
					<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
						<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<Style x:Key="Cbox1Style1"
					TargetType="{x:Type ComboBox}"
					>
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="Padding" Value="6,3,5,3" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
				<Style.Triggers>
					<Trigger Property="IsEditable" Value="true">
						<Setter Property="IsTabStop" Value="false" />
						<Setter Property="Padding" Value="2" />
						<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
					</Trigger>
				</Style.Triggers>
			</Style>




			<Style x:Key="CboxFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Path x:Name="Arrow"
										Grid.Column="0"
										Margin="0,1.5,0,0"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Data="M 0,0 0,8 8,4 z"
										Fill="red" />
								<Rectangle
										Grid.Column="0"
										Grid.ColumnSpan="2"
										Margin="2,0,0,0"
										Fill="#44ffffff"
										SnapsToDevicePixels="true">

									<!--  Fill="#44545454"  -->

									<Rectangle.Stroke>
										<SolidColorBrush Color="{StaticResource Gray.220}" />
									</Rectangle.Stroke>
								</Rectangle>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ComboBoxToggleButton1"
					TargetType="{x:Type ToggleButton}"
					>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="20" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Border x:Name="Border"
							Grid.Column="0"
							CornerRadius="2"
							BorderThickness="1"
							/>
					<Border
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Margin="0"
							Padding="0"
							CornerRadius="2,0,0,2"
							Background="Transparent"
							/>
					<Path x:Name="Arrow"
							Grid.Column="0"
							Margin="0,1.5,0,0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Data="M 0,0 4,8 8,0 z"
							Fill="red"
							RenderTransformOrigin="0.5,0.5"
							>
						<Path.RenderTransform>
							<TransformGroup>
								<RotateTransform Angle="-90" />
							</TransformGroup>
						</Path.RenderTransform>
					</Path>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsChecked" Value="true">
						<Setter TargetName="Arrow" Property="Fill" Value="OrangeRed" />
						<Setter TargetName="Arrow" Property="RenderTransform">
							<Setter.Value>
								<RotateTransform Angle="0" />
							</Setter.Value>
						</Setter>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<ControlTemplate x:Key="ComboBoxTextBox" x:Name="ComboBoxTextBox"
					TargetType="{x:Type TextBox}"
					>

				<Border x:Name="PART_ContentHost"
						Focusable="False"
						Background="{TemplateBinding Background}"
						/>
			</ControlTemplate>

			<ControlTemplate x:Key="ComboBoxTemplate1"
					TargetType="ComboBox"
					>
				<Border
						Margin="0,0,0,0"
						Padding="8,0,10,0"
						CornerRadius="3"
						BorderThickness="0"
						>
					<!--  Background="{StaticResource ItemsControl.Subject.Background.Normal}"  -->
					<Border.Style>
						<Style TargetType="Border">
							<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" />

							<Style.Triggers>
								<!--  true  -->
								<Trigger Property="IsMouseOver" Value="true">

									<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.MouseOver}" />

								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<!--  false  -->

									<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Disabled}" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</Border.Style>


					<Grid Margin="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ToggleButton x:Name="ToggleButton"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								ClickMode="Press"
								Focusable="false"
								Background="{TemplateBinding Background}"
								IsChecked="{Binding IsDropDownOpen,
																		Mode=TwoWay,
																		RelativeSource={RelativeSource TemplatedParent}}"
								Template="{StaticResource ComboBoxToggleButton1}"
								/>

						<ContentPresenter x:Name="ContentSite"
								Content="{TemplateBinding SelectionBoxItem}"
								Grid.Column="1"
								Margin="0,0,1,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								IsHitTestVisible="False"
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
								>
						</ContentPresenter>

						<TextBox x:Name="PART_EditableTextBox"
								Grid.Column="1"
								Margin="3,0,3,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom"
								Focusable="True"
								Visibility="Hidden"
								Background="Transparent"
								Foreground="{TemplateBinding Foreground}"
								IsReadOnly="{TemplateBinding IsReadOnly}"
								Style="{x:Null}"
								Template="{StaticResource ComboBoxTextBox}"
								/>

						<Popup x:Name="Popup"
								AllowsTransparency="True"
								Grid.Column="1"
								Margin="0"
								Focusable="False"
								Placement="Bottom"
								PopupAnimation="Slide"
								IsOpen="{TemplateBinding IsDropDownOpen}"
								>
							<!--  IsOpen="{TemplateBinding IsDropDownOpen}"  -->

							<Grid x:Name="DropDown"
									Margin="2,2,0,0"
									MinWidth="{TemplateBinding ActualWidth}"
									MaxHeight="{TemplateBinding MaxDropDownHeight}"
									SnapsToDevicePixels="True"
									>
								<Border x:Name="DropDownBorder"
										Margin="0"
										Padding="0"
										Background="{StaticResource ItemsControl.ListItem.Background.Normal}"
										BorderThickness="0"
										>
									<!--  Background="{TemplateBinding Background}"  -->
									<Border.BorderBrush>
										<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
									</Border.BorderBrush>

								</Border>

								<ScrollViewer
										Width="150"
										Padding="0"
										SnapsToDevicePixels="True"
										Template="{DynamicResource Tv1ScrollViewerControlTemplate1}"
										>
									<StackPanel
											KeyboardNavigation.DirectionalNavigation="Contained"
											IsItemsHost="True"
											/>

								</ScrollViewer>
							</Grid>
						</Popup>


						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames
												Storyboard.TargetName="PART_EditableTextBox"
												Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
												>
											<EasingColorKeyFrame
													KeyTime="0"
													Value="{StaticResource DisabledForegroundColor}"
													/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="PART_EditableTextBox"
												Storyboard.TargetProperty="(UIElement.Visibility)"
												>
											<DiscreteObjectKeyFrame
													KeyTime="0"
													Value="{x:Static Visibility.Visible}"
													/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ContentSite"
												Storyboard.TargetProperty="(UIElement.Visibility)"
												>
											<DiscreteObjectKeyFrame
													KeyTime="0"
													Value="{x:Static Visibility.Hidden}"
													/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Uneditable" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</Border>

				<!-- </Border> -->
				<ControlTemplate.Triggers>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
					</Trigger>
					<Trigger Property="IsGrouping" Value="true">
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</Trigger>
					<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
						<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
						<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<ControlTemplate x:Key="Tv1ScrollViewerControlTemplate1"
					TargetType="{x:Type ScrollViewer}"
					>
				<Grid x:Name="Grid"
						Background="{TemplateBinding Background}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Rectangle x:Name="Corner"
							Grid.Column="2"
							Grid.Row="2"
							Fill="black"
							/>
					<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							/>

					<ScrollBar x:Name="PART_VerticalScrollBar"
							Grid.Column="2"
							Grid.Row="1"
							Margin="0,-1,0,0"
							Width="{StaticResource BarSizeOutline}"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

					<ScrollBar x:Name="PART_HorizontalScrollBar"
							Grid.Column="1"
							Grid.Row="2"
							Height="{StaticResource BarSizeOutline}"
							MinHeight="{StaticResource BarSize}"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							ClipToBounds="True"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

				</Grid>
			</ControlTemplate>

			<Style x:Key="ComboBoxItem1"
					TargetType="{x:Type ComboBoxItem}"
					>
				<Setter Property="FocusVisualStyle" Value="{DynamicResource CboxFocusVisual}" />
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBoxItem}">

							<Border x:Name="Border"
									Margin="00,0,0,0"
									Padding="20,2,2,2"
									SnapsToDevicePixels="true"
									Background="Transparent"
									>
								<ContentPresenter x:Name="ContentPresenterA" />
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="SelectionStates">
										<VisualState x:Name="Unselected" />
										<VisualState x:Name="Selected">
											<Storyboard>
												<ColorAnimationUsingKeyFrames
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
														>
													<!--  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush)"  -->
													<!-- ReSharper disable once Xaml.InvalidResourceType -->
													<EasingColorKeyFrame
															KeyTime="0"
															Value="{StaticResource ItemsControl.ListItem.Background.Selected.C}"
															/>
															<!-- Value="{StaticResource ItemsControl.ListItem.Background.Selected.C}" -->
													<!--  color of the drop down selected item  -->
													<!--  Value="{StaticResource SelectedBackgroundColor}  -->
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="SelectedUnfocused">
											<Storyboard>
												<ColorAnimationUsingKeyFrames
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
														>
													<!--  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush)"  -->
													<!-- ReSharper disable once Xaml.InvalidResourceType -->
													<EasingColorKeyFrame
															KeyTime="0"
															Value="{DynamicResource ItemsControl.ListItem.Background.Selected.UnFocused.C}"
															/>
													<!--  color of the drop down selected item focus lost  -->
													<!--  Value="{StaticResource SelectedUnfocusedColor}"  -->
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Cmbx1Style1"
					TargetType="{x:Type ComboBox}"
					>
				<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" />
				<Setter Property="Foreground" Value="{StaticResource ItemsControl.Text.Normal}" />
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}" />

				<Style.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Foreground" Value="{StaticResource ItemsControl.Text.Disabled}" />
					</Trigger>
				</Style.Triggers>

			</Style>



		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<StackPanel Orientation="Vertical">

			<StackPanel Orientation="Horizontal">

				<ComboBox
						Width="140"
						SelectedIndex="1"
						Style="{DynamicResource Cbox1Style1}"
						>
					<ComboBoxItem Content="This is item 1" />
					<ComboBoxItem Content="This is item 2" />
					<ComboBoxItem Content="This is item 3" />
					<ComboBoxItem Content="This is item 4" />
				</ComboBox>

			</StackPanel>


		</StackPanel>

		<ComboBox x:Name="Cbx2"
				Grid.Column="1"
				Grid.Row="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				FontSize="10"
				DockPanel.Dock="left"
				MaxDropDownHeight="100"
				SelectedIndex="1"
				BorderThickness="2"
				IsEditable="False"
				FocusVisualStyle="{x:Null}"
				Style="{DynamicResource Cmbx1Style1}"
				ItemContainerStyle="{DynamicResource ComboBoxItem1}"
				>

			<ComboBoxItem>This is cbx2 item 1</ComboBoxItem>
			<ComboBoxItem>This is cbx2 item 2</ComboBoxItem>
			<ComboBoxItem>This is cbx2 item 3</ComboBoxItem>
			<ComboBoxItem>This is cbx2 item 4</ComboBoxItem>

		</ComboBox>



	</Grid>
</Window>
