<Window x:Name="win1"
		x:Class="WpfShared.Windows.Window1"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfShared.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:xs="clr-namespace:AndyResources.XamlResources"
		xmlns:sve="clr-namespace:WpfShared.Windows.ResourceFiles.ScrollViewerEx"
		xmlns:skb="clr-namespace:WpfShared.Windows.ResourceFiles.SkewedBtn"
		xmlns:fr="clr-namespace:WpfShared.Windows.ResourceFiles.FolderRoute"
		Title="Window1"
		Width="1200"
		Height="750"
		mc:Ignorable="d"
		Background="{DynamicResource Window.Background}"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/ScrollBar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterVisualResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
			</ResourceDictionary.MergedDictionaries>


			<SolidColorBrush x:Key="sc" Color="{xs:XmalColor Color=Blue}" />

			<!--#region > combobox-->

			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle
									Margin="2"
									SnapsToDevicePixels="true"
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
									StrokeDashArray="1 2"
									StrokeThickness="1"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFF0F0F0" />
				<GradientStop Offset="1.0" Color="#FFE5E5E5" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
			<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFECF4FC" />
				<GradientStop Offset="1.0" Color="#FFDCECFC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
			<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
			<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFEBF4FC" />
				<GradientStop Offset="1.0" Color="#FFDCECFC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
			<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
			<LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFDAECFC" />
				<GradientStop Offset="1.0" Color="#FFC4E0FC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
			<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
			<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
				<GradientStop Offset="0.0" Color="#FFDAEBFC" />
				<GradientStop Offset="1.0" Color="#FFC4E0FC" />
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Background2" Color="#FFF0F0F0" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
			<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />

			<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />



			<Style x:Key="ComboBoxToggleButton"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="IsTabStop" Value="false" />
				<Setter Property="Focusable" Value="false" />
				<Setter Property="ClickMode" Value="Press" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border x:Name="templateRoot"
									Background="{StaticResource ComboBox.Static.Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{StaticResource ComboBox.Static.Border}"
									SnapsToDevicePixels="true"
									>
								<Border x:Name="splitBorder"
										Margin="0"
										Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
										HorizontalAlignment="Right"
										BorderThickness="1"
										BorderBrush="Transparent"
										SnapsToDevicePixels="true"
										>
									<Path x:Name="arrow"
											Margin="0"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
											Fill="{StaticResource ComboBox.Static.Glyph}"
											/>
								</Border>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
										<Condition Value="false" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition Value="false" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition Value="true" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
								</MultiDataTrigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
										<Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
								</MultiDataTrigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" />
										<Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
								</Trigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
										<Condition Value="false" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background2}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="false" Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
										<Condition Value="true" Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
									<Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
									<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
									<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
								</MultiDataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ComboBoxTemplate"
					TargetType="{x:Type ComboBox}"
					>
				<Grid x:Name="templateRoot"
						SnapsToDevicePixels="true"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition
								Width="0"
								MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
								/>
					</Grid.ColumnDefinitions>

					<Popup x:Name="PART_Popup"
							AllowsTransparency="true"
							Grid.ColumnSpan="2"
							Margin="1"
							IsOpen="{Binding IsDropDownOpen,
															 Mode=TwoWay,
															 RelativeSource={RelativeSource TemplatedParent}}"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							>
						<Themes:SystemDropShadowChrome x:Name="shadow"
								MinWidth="{Binding ActualWidth,
																	 ElementName=templateRoot}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Color="Transparent"
								>
							<Border x:Name="dropDownBorder"
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
									BorderThickness="1"
									BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
									>
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid x:Name="grid"
											RenderOptions.ClearTypeHint="Enabled"
											>
										<Canvas x:Name="canvas"
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top"
												>
											<Rectangle x:Name="opaqueRect"
													Width="{Binding ActualWidth,
																					ElementName=dropDownBorder}"
													Height="{Binding ActualHeight,
																					 ElementName=dropDownBorder}"
													Fill="{Binding Background,
																				 ElementName=dropDownBorder}"
													/>
										</Canvas>
										<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>

					<ToggleButton x:Name="toggleButton"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							IsChecked="{Binding IsDropDownOpen,
																	Mode=TwoWay,
																	RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource ComboBoxToggleButton}"
							/>

					<ContentPresenter x:Name="contentPresenter"
							Content="{TemplateBinding SelectionBoxItem}"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							IsHitTestVisible="false"
							ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							/>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="HasDropShadow" Value="true" SourceName="PART_Popup">
						<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
						<Setter TargetName="shadow" Property="Color" Value="#71000000" />
					</Trigger>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsGrouping" Value="true" />
							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</MultiTrigger>
					<Trigger Property="ScrollViewer.CanContentScroll" Value="false" SourceName="DropDownScrollViewer">
						<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>


			<Style x:Key="ComboBoxEditableTextBox"
					TargetType="{x:Type TextBox}"
					>
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="AllowDrop" Value="true" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="MinHeight" Value="0" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<ScrollViewer x:Name="PART_ContentHost"
									Background="Transparent"
									Focusable="false"
									HorizontalScrollBarVisibility="Hidden"
									VerticalScrollBarVisibility="Hidden"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ComboBoxEditableTemplate"
					TargetType="{x:Type ComboBox}"
					>
				<Grid x:Name="templateRoot"
						SnapsToDevicePixels="true"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition
								Width="0"
								MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
								/>
					</Grid.ColumnDefinitions>
					<Popup x:Name="PART_Popup"
							AllowsTransparency="true"
							Grid.ColumnSpan="2"
							IsOpen="{Binding IsDropDownOpen,
															 RelativeSource={RelativeSource TemplatedParent}}"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							>
						<Themes:SystemDropShadowChrome x:Name="shadow"
								MinWidth="{Binding ActualWidth,
																	 ElementName=templateRoot}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Color="Transparent"
								>
							<Border x:Name="dropDownBorder"
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
									BorderThickness="1"
									BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
									>
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid x:Name="grid"
											RenderOptions.ClearTypeHint="Enabled"
											>
										<Canvas x:Name="canvas"
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top"
												>
											<Rectangle x:Name="opaqueRect"
													Width="{Binding ActualWidth,
																					ElementName=dropDownBorder}"
													Height="{Binding ActualHeight,
																					 ElementName=dropDownBorder}"
													Fill="{Binding Background,
																				 ElementName=dropDownBorder}"
													/>
										</Canvas>
										<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>
					<ToggleButton x:Name="toggleButton"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							IsChecked="{Binding IsDropDownOpen,
																	Mode=TwoWay,
																	RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource ComboBoxToggleButton}"
							/>
					<Border x:Name="border"
							Margin="{TemplateBinding BorderThickness}"
							Background="{StaticResource TextBox.Static.Background}"
							>
						<TextBox x:Name="PART_EditableTextBox"
								Margin="{TemplateBinding Padding}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								IsReadOnly="{Binding IsReadOnly,
																		 RelativeSource={RelativeSource TemplatedParent}}"
								Style="{StaticResource ComboBoxEditableTextBox}"
								/>
					</Border>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsEnabled" Value="false">
						<Setter TargetName="border" Property="Opacity" Value="0.56" />
					</Trigger>
					<Trigger Property="IsKeyboardFocusWithin" Value="true">
						<Setter Property="Foreground" Value="Black" />
					</Trigger>
					<Trigger Property="HasDropShadow" Value="true" SourceName="PART_Popup">
						<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
						<Setter TargetName="shadow" Property="Color" Value="#71000000" />
					</Trigger>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsGrouping" Value="true" />
							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</MultiTrigger>
					<Trigger Property="ScrollViewer.CanContentScroll" Value="false" SourceName="DropDownScrollViewer">
						<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<Style x:Key="Cbox1Style1"
					TargetType="{x:Type ComboBox}"
					>
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
				<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
				<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="Padding" Value="6,3,5,3" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
				<Style.Triggers>
					<Trigger Property="IsEditable" Value="true">
						<Setter Property="IsTabStop" Value="false" />
						<Setter Property="Padding" Value="2" />
						<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="CboxFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Path x:Name="Arrow"
										Grid.Column="0"
										Margin="0,1.5,0,0"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Data="M 0,0 0,8 8,4 z"
										Fill="red"
										/>
								<Rectangle
										Grid.Column="0"
										Grid.ColumnSpan="2"
										Margin="2,0,0,0"
										Fill="#44ffffff"
										SnapsToDevicePixels="true"
										>

									<!--  Fill="#44545454"  -->

									<Rectangle.Stroke>
										<SolidColorBrush Color="{StaticResource Gray.220}" />
									</Rectangle.Stroke>
								</Rectangle>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<ControlTemplate x:Key="ComboBoxToggleButton1"
					TargetType="{x:Type ToggleButton}"
					>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="20" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Border x:Name="Border"
							Grid.Column="0"
							BorderThickness="1"
							CornerRadius="2"
							/>
					<Border
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Margin="0"
							Padding="0"
							Background="Transparent"
							CornerRadius="2,0,0,2"
							/>
					<Path x:Name="Arrow"
							Grid.Column="0"
							Margin="0,1.5,0,0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Data="M 0,0 4,8 8,0 z"
							Fill="red"
							RenderTransformOrigin="0.5,0.5"
							>
						<Path.RenderTransform>
							<TransformGroup>
								<RotateTransform Angle="-90" />
							</TransformGroup>
						</Path.RenderTransform>
					</Path>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="IsChecked" Value="true">
						<Setter TargetName="Arrow" Property="Fill" Value="OrangeRed" />
						<Setter TargetName="Arrow" Property="RenderTransform">
							<Setter.Value>
								<RotateTransform Angle="0" />
							</Setter.Value>
						</Setter>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<ControlTemplate x:Key="ComboBoxTextBox" x:Name="ComboBoxTextBox"
					TargetType="{x:Type TextBox}"
					>

				<Border x:Name="PART_ContentHost"
						Background="{TemplateBinding Background}"
						Focusable="False"
						/>
			</ControlTemplate>



			<ControlTemplate x:Key="ComboBoxTemplate1"
					TargetType="ComboBox"
					>

				<Border
						Margin="0,0,0,0"
						Padding="8,0,10,0"
						BorderThickness="0"
						CornerRadius="3"
						>
					<!--  Background="{StaticResource ItemsControl.Subject.Background.Normal}"  -->
					<Border.Style>
						<Style TargetType="Border">
							<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" />

							<Style.Triggers>
								<!--  true  -->
								<Trigger Property="IsMouseOver" Value="true">

									<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.MouseOver}" />

								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<!--  false  -->
									<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Disabled}" />
								</Trigger>

							</Style.Triggers>
						</Style>
					</Border.Style>



					<Grid Margin="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<ToggleButton x:Name="ToggleButton"
								Grid.Column="0"
								Background="{TemplateBinding Background}"
								IsChecked="{Binding IsDropDownOpen,
																		Mode=TwoWay,
																		RelativeSource={RelativeSource TemplatedParent}}"
								ClickMode="Press"
								Focusable="false"
								Template="{StaticResource ComboBoxToggleButton1}"
								/>
						<!--  Grid.ColumnSpan="2"  -->

						<ContentPresenter x:Name="ContentSite"
								Content="{TemplateBinding SelectionBoxItem}"
								Grid.Column="1"
								Margin="0,0,1,0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								IsHitTestVisible="False"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
								/>

						<TextBox x:Name="PART_EditableTextBox"
								Grid.Column="1"
								Margin="3,0,3,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom"
								Background="Transparent"
								Foreground="{TemplateBinding Foreground}"
								IsReadOnly="{TemplateBinding IsReadOnly}"
								Focusable="True"
								Visibility="Hidden"
								Style="{x:Null}"
								Template="{StaticResource ComboBoxTextBox}"
								/>

						<Popup x:Name="Popup"
								AllowsTransparency="True"
								Grid.Column="1"
								Margin="0"
								IsOpen="{TemplateBinding IsDropDownOpen}"
								Focusable="False"
								Placement="Bottom"
								PopupAnimation="Slide"
								Closed="Popup_OnClosed"
								>
							<!--  IsOpen="{TemplateBinding IsDropDownOpen}"  -->

							<Grid x:Name="DropDown"
									Margin="2,2,0,0"
									MinWidth="{TemplateBinding ActualWidth}"
									MaxHeight="{TemplateBinding MaxDropDownHeight}"
									SnapsToDevicePixels="True"
									>
								<Border x:Name="DropDownBorder"
										Margin="0"
										Padding="0"
										Background="{StaticResource ItemsControl.ListItem.Background.Normal}"
										BorderThickness="0"
										>
									<!--  Background="{TemplateBinding Background}"  -->
									<Border.BorderBrush>
										<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
									</Border.BorderBrush>

								</Border>

								<ScrollViewer
										Width="150"
										Padding="0"
										SnapsToDevicePixels="True"
										Template="{DynamicResource Tv1ScrollViewerControlTemplate1}"
										>
									<StackPanel
											IsItemsHost="True"
											KeyboardNavigation.DirectionalNavigation="Contained"
											/>

								</ScrollViewer>
							</Grid>
						</Popup>


						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames
												Storyboard.TargetName="PART_EditableTextBox"
												Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
												>
											<EasingColorKeyFrame
													Value="{StaticResource DisabledForegroundColor}"
													KeyTime="0"
													/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="PART_EditableTextBox"
												Storyboard.TargetProperty="(UIElement.Visibility)"
												>
											<DiscreteObjectKeyFrame
													Value="{x:Static Visibility.Visible}"
													KeyTime="0"
													/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
												Storyboard.TargetName="ContentSite"
												Storyboard.TargetProperty="(UIElement.Visibility)"
												>
											<DiscreteObjectKeyFrame
													Value="{x:Static Visibility.Hidden}"
													KeyTime="0"
													/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Uneditable" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</Border>

				<!-- </Border> -->
				<ControlTemplate.Triggers>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
					</Trigger>
					<Trigger Property="IsGrouping" Value="true">
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</Trigger>
					<Trigger Property="AllowsTransparency" Value="true" SourceName="Popup">
						<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
						<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>



			<ControlTemplate x:Key="ComboBoxTemplate2"
					TargetType="ComboBox"
					>

				<!--  <Border  -->
				<!--  Margin="0,0,0,0"  -->
				<!--  Padding="8,0,10,0"  -->
				<!--  BorderThickness="0"  -->
				<!--  CornerRadius="3"  -->
				<!--    -->
				<!--  >  -->
				<!--  ~1~  Background="{StaticResource ItemsControl.Subject.Background.Normal}"  @1@  -->
				<!-- 	<Border.Style> -->
				<!-- 		<Style TargetType="Border"> -->
				<!-- 			<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" /> -->
				<!--    -->
				<!-- 			<Style.Triggers> -->
				<!--  ~1~  true  @1@  -->
				<!-- 				<Trigger Property="IsMouseOver" Value="true"> -->
				<!--    -->
				<!-- 					<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.MouseOver}" /> -->
				<!--    -->
				<!-- 				</Trigger> -->
				<!-- 				<Trigger Property="IsEnabled" Value="False"> -->
				<!--  ~1~  false  @1@  -->
				<!--    -->
				<!-- 					<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Disabled}" /> -->
				<!-- 				</Trigger> -->
				<!-- 			</Style.Triggers> -->
				<!-- 		</Style> -->
				<!-- 	</Border.Style> -->
				<!--    -->


				<Grid Margin="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="20" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<ToggleButton x:Name="ToggleButton"
							Grid.Column="0"
							Background="{TemplateBinding Background}"
							IsChecked="{Binding IsDropDownOpen,
																	Mode=TwoWay,
																	RelativeSource={RelativeSource TemplatedParent}}"
							ClickMode="Press"
							Focusable="false"
							Template="{StaticResource ComboBoxToggleButton1}"
							/>
					<!--  Grid.ColumnSpan="2"  -->


					<ContentPresenter x:Name="ContentSite"
							Content="{TemplateBinding SelectionBoxItem}"
							Grid.Column="1"
							Margin="0,0,1,0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Center"
							IsHitTestVisible="False"
							DockPanel.Dock="Top"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"

							
							/>


					<TextBox x:Name="PART_EditableTextBox"
							Grid.Column="1"
							Margin="3,0,3,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Bottom"
							Background="Transparent"
							Foreground="{TemplateBinding Foreground}"
							IsReadOnly="{TemplateBinding IsReadOnly}"
							Focusable="True"
							Visibility="Hidden"
							Style="{x:Null}"
							Template="{StaticResource ComboBoxTextBox}"
							/>

					<Popup x:Name="Popup"
							AllowsTransparency="True"
							Grid.Column="1"
							Margin="0"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							Focusable="False"
							Placement="Bottom"
							PopupAnimation="Slide"
							>
						<!--  IsOpen="{TemplateBinding IsDropDownOpen}"  -->

						<Grid x:Name="DropDown"
								Margin="2,2,0,0"
								MinWidth="{TemplateBinding ActualWidth}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								SnapsToDevicePixels="True"
								>
							<Border x:Name="DropDownBorder"
									Margin="0"
									Padding="0"
									Background="{StaticResource ItemsControl.ListItem.Background.Normal}"
									BorderThickness="0"
									>
								<!--  Background="{TemplateBinding Background}"  -->
								<Border.BorderBrush>
									<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
								</Border.BorderBrush>

							</Border>

							<ScrollViewer
									Width="150"
									Padding="0"
									SnapsToDevicePixels="True"
									Template="{DynamicResource Tv1ScrollViewerControlTemplate1}"
									>
								<StackPanel
										IsItemsHost="True"
										KeyboardNavigation.DirectionalNavigation="Contained"
										/>

							</ScrollViewer>
						</Grid>
					</Popup>


					<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="MouseOver" />
							<VisualState x:Name="Disabled">
								<Storyboard>
									<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="PART_EditableTextBox"
											Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
											>
										<EasingColorKeyFrame
												Value="{StaticResource DisabledForegroundColor}"
												KeyTime="0"
												/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>
						</VisualStateGroup>
						<VisualStateGroup x:Name="EditStates">
							<VisualState x:Name="Editable">
								<Storyboard>
									<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="PART_EditableTextBox"
											Storyboard.TargetProperty="(UIElement.Visibility)"
											>
										<DiscreteObjectKeyFrame
												Value="{x:Static Visibility.Visible}"
												KeyTime="0"
												/>
									</ObjectAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ContentSite"
											Storyboard.TargetProperty="(UIElement.Visibility)"
											>
										<DiscreteObjectKeyFrame
												Value="{x:Static Visibility.Hidden}"
												KeyTime="0"
												/>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>
							<VisualState x:Name="Uneditable" />
						</VisualStateGroup>
					</VisualStateManager.VisualStateGroups>
				</Grid>
				<!-- </Border> -->

				<!-- </Border> -->
				<ControlTemplate.Triggers>
					<Trigger Property="HasItems" Value="false">
						<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
					</Trigger>
					<Trigger Property="IsGrouping" Value="true">
						<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
					</Trigger>
					<Trigger Property="AllowsTransparency" Value="true" SourceName="Popup">
						<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
						<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>



			<Style x:Key="ComboBoxItem1"
					TargetType="{x:Type ComboBoxItem}"
					>
				<Setter Property="FocusVisualStyle" Value="{DynamicResource CboxFocusVisual}" />
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBoxItem}">

							<Border x:Name="Border"
									Margin="00,0,0,0"
									Padding="20,2,2,2"
									Background="Transparent"
									SnapsToDevicePixels="true"
									>
								<ContentPresenter x:Name="ContentPresenterA" />
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="SelectionStates">
										<VisualState x:Name="Unselected" />
										<VisualState x:Name="Selected">
											<Storyboard>
												<ColorAnimationUsingKeyFrames
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
														>
													<!--  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush)"  -->
													<!--  ReSharper disable once Xaml.InvalidResourceType  -->
													<EasingColorKeyFrame
															Value="{DynamicResource ItemsControl.ListItem.Background.Selected.C}"
															KeyTime="0"
															/>
													<!--  Value="{StaticResource ItemsControl.ListItem.Background.Selected.C}"  -->
													<!--  color of the drop down selected item  -->
													<!--  Value="{StaticResource SelectedBackgroundColor}  -->
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="SelectedUnfocused">
											<Storyboard>
												<ColorAnimationUsingKeyFrames
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
														>
													<!--  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush)"  -->
													<!--  ReSharper disable once Xaml.InvalidResourceType  -->
													<EasingColorKeyFrame
															Value="{DynamicResource ItemsControl.ListItem.Background.Selected.UnFocused.C}"
															KeyTime="0"
															/>
													<!--  color of the drop down selected item focus lost  -->
													<!--  Value="{StaticResource SelectedUnfocusedColor}"  -->
												</ColorAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Cmbx1Style1"
					TargetType="{x:Type ComboBox}"
					>

				<Setter Property="Background" Value="{StaticResource ItemsControl.Subject.Background.Normal}" />
				<Setter Property="Foreground" Value="{StaticResource ItemsControl.Text.Normal}" />
				<Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}" />

				<Style.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Foreground" Value="{StaticResource ItemsControl.Text.Disabled}" />
					</Trigger>
				</Style.Triggers>

			</Style>

			<!--#endregion-->


			<ControlTemplate x:Key="Tv1ScrollViewerControlTemplate1"
					TargetType="{x:Type ScrollViewer}"
					>
				<Grid x:Name="Grid"
						Background="{TemplateBinding Background}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Rectangle x:Name="Corner"
							Grid.Column="2"
							Grid.Row="2"
							Fill="black"
							/>
					<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							/>

					<ScrollBar x:Name="PART_VerticalScrollBar"
							Grid.Column="2"
							Grid.Row="1"
							Margin="0,-1,0,0"
							Width="{StaticResource BarSizeOutline}"
							Value="{Binding VerticalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

					<ScrollBar x:Name="PART_HorizontalScrollBar"
							Grid.Column="1"
							Grid.Row="2"
							Height="{StaticResource BarSizeOutline}"
							MinHeight="{StaticResource BarSize}"
							Value="{Binding HorizontalOffset,
															Mode=OneWay,
															RelativeSource={RelativeSource TemplatedParent}}"
							Background="{StaticResource ScrollBarBkg}"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							ClipToBounds="True"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Style="{DynamicResource ScrollBarStyle}"
							/>

				</Grid>
			</ControlTemplate>

			<!--#region > user controls-->



			<Style x:Key="px"
					TargetType="Path"
					>
				<Setter Property="Margin" Value="0,0,15,0" />
				<Setter Property="Width" Value="20" />
				<Setter Property="Height" Value="15" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="HorizontalAlignment" Value="Right" />
			</Style>

			<Path x:Key="p1"
					x:Shared="False"
					Data="M 0,0 0,4 4,4 4,0 z"
					Stretch="Uniform"
					>
				<Path.Style>
					<Style
							TargetType="Path"
							BasedOn="{StaticResource px}"
							>
						<Setter Property="Fill" Value="Red" />
						<Style.Triggers>
							<DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}, Path=IsPressed}">
								<Setter Property="Fill" Value="SpringGreen" />
							</DataTrigger>
							<DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type skb:SkewedButton}}, Path=IsChecked}">
								<Setter Property="Fill" Value="DarkOrchid" />
							</DataTrigger>

						</Style.Triggers>
					</Style>
				</Path.Style>
			</Path>

			<Path x:Key="p2"
					Margin="0,0,5,0"
					Width="20"
					Height="15"
					HorizontalAlignment="right"
					VerticalAlignment="Center"
					x:Shared="False"
					Data="M 0,0 0,4 4,4 4,0 z"
					Fill="GreenYellow"
					Stretch="Uniform"
					/>

			<Path x:Key="p3"
					Margin="0,0,8,0"
					Width="10"
					Height="10"
					HorizontalAlignment="left"
					VerticalAlignment="bottom"
					x:Shared="False"
					Data="M 0,0 0,4 4,4 4,0 z"
					Fill="OrangeRed"
					Stretch="Uniform"
					/>

			<!--  <TextBlock x:Key="t1"  -->
			<!--  Margin="0"  -->
			<!--  Width="40"  -->
			<!--  Height="20"  -->
			<!--  Padding="0"  -->
			<!--  Background="Transparent"  -->
			<!--  Foreground="Black"  -->
			<!--  Text="Empty"  -->
			<!--  />  -->


			<DataTemplate x:Key="Dtx1">

				<DockPanel>
					<skb:SkewedButton
							Margin="0,0,2,0"
							Width="40"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							BorderThickness="0,0,5,0"
							Index="1"
							ButtonSkewAngle="20.0"
							Icon="{StaticResource p1}"
							Click="ButtonBase_OnClick1"
							>
						<skb:SkewedButton.TextBlk>
							<TextBlock
									Margin="0"
									Height="20"
									Padding="0"
									HorizontalAlignment="Center"
									Foreground="Black"
									Text="Empty"
									>
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Background" Value="#63ff0000" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="true">
												<Setter Property="Background" Value="Blue" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</skb:SkewedButton.TextBlk>

					</skb:SkewedButton>

					<skb:SkewedButton
							Margin="0,0,2,0"
							Width="40"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							BorderThickness="0,0,5,0"
							Index="2"
							ButtonSkewAngle="20.0"
							Icon="{StaticResource p1}"
							OverridesDefaultStyle="True"
							Click="ButtonBase_OnClick2"
							>

						<skb:SkewedButton.TextBlk>
							<!--  cannot have a name  -->
							<TextBlock
									Margin="0"
									Height="20"
									Padding="0"
									HorizontalAlignment="Center"
									Background="Transparent"
									Text="Empty"
									>
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Foreground" Value="Black" />
										<Style.Triggers>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="#AAAAAA" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</skb:SkewedButton.TextBlk>

						<skb:SkewedButton.Style>
							<Style TargetType="skb:SkewedButton">
								<Setter Property="Background" Value="PaleVioletRed" />
								<Style.Triggers>
									<Trigger Property="IsPressed" Value="true">
										<Setter Property="ButtonBase.Background" Value="Blue" />

									</Trigger>
								</Style.Triggers>
							</Style>
						</skb:SkewedButton.Style>


					</skb:SkewedButton>
				</DockPanel>
			</DataTemplate>

			<DataTemplate x:Key="Dtx2" x:Name="FolderPath"
					>
				<DockPanel
						MinWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type sve:ScrollViewerExtended}},
															 Path=ViewportWidth}"
						LastChildFill="false"
						>
					<skb:SkewedButton x:Name="FolderCell1"
							Margin="0,0,2,0"
							Width="40"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							BorderThickness="0,0,5,0"
							DockPanel.Dock="Left"
							ButtonSkewAngle="20.0"
							Icon="{StaticResource p3}"
							>
						<skb:SkewedButton.TextBlk>
							<TextBlock
									Margin="0"
									Height="20"
									Padding="0"
									HorizontalAlignment="Center"
									Background="Transparent"
									Foreground="Black"
									Text="Empty"
									/>
						</skb:SkewedButton.TextBlk>
					</skb:SkewedButton>

					<skb:SkewedButton x:Name="FolderCell2"
							Margin="0,0,2,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							BorderThickness="0,0,5,0"
							DockPanel.Dock="Right"
							ButtonSkewAngle="20.0"
							Icon="{StaticResource p3}"
							>
						<skb:SkewedButton.TextBlk>
							<TextBlock
									Margin="0,0,10,0"
									Height="20"
									Padding="0"
									HorizontalAlignment="Center"
									Background="Transparent"
									Foreground="Black"
									Text="Always Last"
									/>
						</skb:SkewedButton.TextBlk>
					</skb:SkewedButton>
				</DockPanel>
			</DataTemplate>

			<!-- <DataTemplate x:Key="Dtx3"> -->
			<!-- 	<StackPanel Orientation="Horizontal"> -->
			<!--  <Button  -->
			<!--  Content="This is test 1"  -->
			<!--  Height="20"  -->
			<!--  Background="CadetBlue"  -->
			<!--  Foreground="White"  -->
			<!--  Click="ButtonBase_OnClick3"  -->
			<!--  />  -->
			<!--  <Button  -->
			<!--  Content="This is test 2"  -->
			<!--  Height="20"  -->
			<!--  Background="CadetBlue"  -->
			<!--  Foreground="White"  -->
			<!--  Click="ButtonBase_OnClick3"  -->
			<!--  />  -->
			<!-- 	</StackPanel> -->
			<!-- </DataTemplate> -->

			<!--#endregion-->

		</ResourceDictionary>

	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="50" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>


		<Rectangle
				Grid.Column="1"
				Grid.Row="1"
				Margin="0,50,0,0"
				Width="50"
				Height="50"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Fill="{StaticResource sc}"
				/>

		<TextBlock
				Grid.Column="1"
				Grid.Row="1"
				Margin="100,50,0,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				FontSize="48"
				FontFamily="Arial Black"
				Text="ABCD"
				RenderTransformOrigin="0.5,0.5"
				>
			<TextBlock.Foreground>
				<RadialGradientBrush SpreadMethod="Reflect">
					<RadialGradientBrush.RelativeTransform>
						<TransformGroup>
							<ScaleTransform
									CenterY="0.5"
									CenterX="0.5"
									/>
							<SkewTransform CenterY="0.5" CenterX="0.5" />
							<RotateTransform Angle="-53.13" CenterY="0.5" CenterX="0.5" />
							<TranslateTransform />
						</TransformGroup>
					</RadialGradientBrush.RelativeTransform>
					<GradientStop Offset="0.9" Color="Black" />
					<GradientStop Offset="0.134" Color="#FF003059" />
					<GradientStop Offset="0.488" Color="#FFA2A2A2" />
					<GradientStop Offset="0.49" Color="White" />
				</RadialGradientBrush>
			</TextBlock.Foreground>
		</TextBlock>

		<StackPanel
				Grid.Column="0"
				Grid.Row="0"
				Orientation="Vertical"
				>

			<StackPanel Orientation="Horizontal">
				<ComboBox
						Width="140"
						SelectedIndex="1"
						Style="{DynamicResource Cbox1Style1}"
						>
					<ComboBoxItem Content="This is item 1" />
					<ComboBoxItem Content="Item 2" />
					<ComboBoxItem Content="This is item 3" />
					<ComboBoxItem Content="This is item 4" />
				</ComboBox>

			</StackPanel>
		</StackPanel>

		<ComboBox x:Name="Cbx2"
				Grid.Column="1"
				Grid.Row="0"
				Width="120"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				FontSize="10"
				BorderThickness="2"
				IsEditable="False"
				DockPanel.Dock="left"
				MaxDropDownHeight="100"
				SelectedIndex="1"
				ItemsSource="{Binding Source={x:Static local:Window1.CbxItems}}"
				FocusVisualStyle="{x:Null}"
				MouseUp="Cbx2_OnMouseUp"
				IsDropDownOpen="{Binding ElementName=win1, Path=PopupIsOpen}"
				>
				<!-- MouseLeave="Cbx2_OnMouseLeave" -->
			<!--  ItemContainerStyle="{StaticResource ComboBoxItem1}"  -->

			<ComboBox.Style>
				<Style TargetType="ComboBox" BasedOn="{StaticResource Cmbx1Style1}">

				</Style>
			</ComboBox.Style>


			<ComboBox.ItemTemplate>
				<DataTemplate x:Name="DtCbx2">
					<TextBox
							Background="White"
							Foreground="Blue"
							Text="{Binding Mode=OneWay}"
							/>

				</DataTemplate>
			</ComboBox.ItemTemplate>

			<!-- <ComboBoxItem>This is cbx2 item 1</ComboBoxItem> -->
			<!-- <ComboBoxItem>Item 2x</ComboBoxItem> -->
			<!-- <ComboBoxItem>This is cbx2 item 3</ComboBoxItem> -->
			<!-- <ComboBoxItem>This is cbx2 item 4</ComboBoxItem> -->

		</ComboBox>

		<sve:ScrollViewerExtended
				Grid.Column="0"
				Grid.Row="1"
				Background="#11ff0000"
				HorizontalScrollBarLocation="Bottom"
				VerticalScrollBarLocation="right"
				ThumbWidth="4"
				ScrollBarWidth="10"
				RepeatButtonLength="10"
				RepeatButtonIconLength="10"
				RepeatButtonIconGirth="6"
				>
			<Grid>
				<Rectangle
						Grid.Column="0"
						Grid.Row="0"
						Margin="50,0,0,0"
						Width="30"
						Height="250"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Fill="#FF0000FF"
						/>

				<Rectangle
						Grid.Column="0"
						Grid.Row="0"
						Margin="0,50,0,0"
						Width="450"
						Height="30"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Fill="#25ff0000"
						/>
			</Grid>
		</sve:ScrollViewerExtended>

		<ScrollViewer
				Grid.Column="1"
				Grid.Row="1"
				Width="300"
				HorizontalAlignment="left"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Right"
				HorizontalScrollBarVisibility="Visible"
				VerticalScrollBarVisibility="Hidden"
				>
			<DockPanel
					HorizontalAlignment="left"
					Background="Red"
					>
				<StackPanel
						Margin="1"
						HorizontalAlignment="right"
						Background="Blue"
						DockPanel.Dock="left"
						Orientation="Horizontal"
						>

					<Border
							Margin="1"
							Width="80"
							Height="18"
							BorderThickness="1"
							BorderBrush="White"
							>
						<TextBlock
								Background="Black"
								Foreground="White"
								Text="This is a test 1"
								/>
					</Border>

					<Border
							Margin="1"
							Width="80"
							Height="18"
							BorderThickness="1"
							BorderBrush="White"
							>
						<TextBlock
								Background="Black"
								Foreground="White"
								Text="This is a test 2"
								/>
					</Border>


					<Border
							Margin="1"
							Width="80"
							Height="18"
							BorderThickness="1"
							BorderBrush="White"
							>
						<TextBlock
								Background="Black"
								Foreground="White"
								Text="This is a test 3"
								/>
					</Border>


					<Border
							Margin="1"
							Width="80"
							Height="18"
							BorderThickness="1"
							BorderBrush="White"
							>
						<TextBlock
								Background="Black"
								Foreground="White"
								Text="This is a test 4"
								/>
					</Border>

					<!--  <Border  -->
					<!--  Margin="1"  -->
					<!--  Width="80"  -->
					<!--  Height="18"  -->
					<!--  BorderThickness="1"  -->
					<!--  BorderBrush="White"  -->
					<!--  >  -->
					<!--  <TextBlock  -->
					<!--  Background="Black"  -->
					<!--  Foreground="White"  -->
					<!--  Text="This is a test 4"  -->
					<!--  />  -->
					<!-- </Border> -->

				</StackPanel>
			</DockPanel>
		</ScrollViewer>
		<!--  <ScrollViewer  -->
		<!--  Grid.Column="1"  -->
		<!--  Grid.Row="1"  -->
		<!--    -->
		<!--  HorizontalScrollBarVisibility="Visible"  -->
		<!--  Background="#11ff0000"  -->
		<!--  >  -->
		<!-- 	<Grid> -->
		<!--  <Rectangle  -->
		<!--  Grid.Column="0"  -->
		<!--  Grid.Row="0"  -->
		<!--  Margin="50,0,0,0"  -->
		<!--  Width="30"  -->
		<!--  Height="250"  -->
		<!--  HorizontalAlignment="Left"  -->
		<!--  VerticalAlignment="Top"  -->
		<!--  Fill="#FF0000FF"  -->
		<!--  />  -->
		<!--    -->
		<!--  <Rectangle  -->
		<!--  Grid.Column="0"  -->
		<!--  Grid.Row="0"  -->
		<!--  Margin="0,50,0,0"  -->
		<!--  Width="450"  -->
		<!--  Height="30"  -->
		<!--  HorizontalAlignment="Left"  -->
		<!--  VerticalAlignment="Top"  -->
		<!--  Fill="#25ff0000"  -->
		<!--  />  -->
		<!-- 	</Grid> -->
		<!--    -->
		<!-- </ScrollViewer> -->


		<StackPanel
				Grid.Column="0"
				Grid.Row="2"
				VerticalAlignment="Top"
				Orientation="Horizontal"
				>

			<skb:SkewedButton x:Name="skb01"
					Margin="8,0,0,0"
					Width="90"
					Height="20"
					BorderThickness="0,0,5,0"
					skb:SkewedButton.Click="Skb01_OnClick"
					ButtonSkewAngle="20.0"
					Icon="{StaticResource p3}"
					>
				<skb:SkewedButton.TextBlk>
					<TextBlock
							Margin="0"
							Padding="0"
							HorizontalAlignment="Right"
							Background="Transparent"
							Foreground="Black"
							Text="Empty"
							/>
				</skb:SkewedButton.TextBlk>
			</skb:SkewedButton>

			<skb:SkewedButton
					Height="20"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					FontSize="8"
					Background="DarkGreen"
					BorderThickness="5,0,5,0"
					BorderBrush="Blue"
					skb:SkewedButton.Click="ButtonBase_OnClick1"
					ButtonSkewAngle="20.0"
					>
				<skb:SkewedButton.TextBlk>
					<TextBlock
							Margin="0"
							Padding="0"
							HorizontalAlignment="Center"
							Background="Transparent"
							Foreground="Black"
							Text="Empty Text text text text"
							>
						<TextBlock.Style>
							<Style TargetType="TextBlock">
								<Setter Property="Foreground" Value="Black" />
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Foreground" Value="#AAAAAA" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</skb:SkewedButton.TextBlk>
				<skb:SkewedButton.Style>
					<Style TargetType="skb:SkewedButton">
						<Setter Property="Icon" Value="{StaticResource p2}" />
						<Style.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Icon" Value="{StaticResource p3}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</skb:SkewedButton.Style>
			</skb:SkewedButton>

		</StackPanel>

		<StackPanel
				Grid.Column="0"
				Grid.Row="2"
				Grid.ColumnSpan="1"
				Margin="0,30,0,0"
				Orientation="Vertical"
				>

			<fr:FolderRoute x:Name="fr1"
					Margin="7,0,0,0"
					Height="24"
					HorizontalContentAlignment="left"
					FontSize="11"
					ContentTemplate="{StaticResource Dtx2}"
					/>

			<StackPanel Orientation="Horizontal">

				<Label
						Content="{Binding ElementName=fr1,
															Path=HasDefaultDockPanel,
															FallbackValue='na'}"
						Width="60"
						Padding="5,0,0,0"
						Foreground="White"
						/>
			</StackPanel>
		</StackPanel>

		<StackPanel
				Grid.Column="0"
				Grid.Row="2"
				Grid.ColumnSpan="1"
				Margin="0,70,0,0"
				Orientation="Vertical"
				>

			<Label
					Content="{Binding ElementName=win1,
														Path=Message,
														FallbackValue='none'}"
					Grid.Column="0"
					Grid.Row="2"
					Margin="0,5,0,5"
					Padding="0"
					VerticalAlignment="Top"
					Foreground="White"
					/>

			<fr:FolderRoute x:Name="fr2"
					Margin="7,0,0,0"
					Height="24"
					HorizontalContentAlignment="Right"
					FontSize="11"
					IsEnabled="False"
					ContentTemplate="{StaticResource Dtx1}"
					/>

			<StackPanel Orientation="Horizontal">

				<Label
						Content="{Binding ElementName=fr2,
															Path=HasDefaultDockPanel,
															FallbackValue='na'}"
						Width="60"
						Padding="5,0,0,0"
						Foreground="White"
						/>
			</StackPanel>
		</StackPanel>

		<DockPanel
				Grid.Column="0"
				Grid.Row="3"
				Grid.ColumnSpan="1"
				Margin="0,0,0,0"
				>

			<fr:FolderRoute x:Name="FolderRoute"
					Margin="7,0,0,0"
					Height="24"
					VerticalAlignment="Top"
					HorizontalContentAlignment="Left"
					FontSize="12"
					DockPanel.Dock="Top"
					/>

			<StackPanel
					VerticalAlignment="Top"
					DockPanel.Dock="Top"
					Orientation="Horizontal"
					>

				<Label
						Content="Has Dock Panel?"
						Padding="5,0,10,0"
						Foreground="White"
						/>

				<Label
						Content="{Binding ElementName=FolderRoute,
															Path=HasDefaultDockPanel,
															FallbackValue='na'}"
						Width="60"
						Padding="5,0,0,0"
						Foreground="White"
						/>
			</StackPanel>

			<Grid
					VerticalAlignment="Top"
					DockPanel.Dock="Top"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="80" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="80" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Label
						Content="Favorite Btn"
						Grid.Column="0"
						Grid.Row="0"
						Padding="5,0,10,0"
						Foreground="White"
						/>

				<Label
						Content="{Binding ElementName=win1,
															Path=Favorite,
															Mode=OneWay,
															FallbackValue='none'}"
						Grid.Column="1"
						Grid.Row="0"
						Padding="5,0,10,0"
						Foreground="White"
						/>


				<Label
						Content="History Btn"
						Grid.Column="2"
						Grid.Row="0"
						Padding="5,0,10,0"
						Foreground="White"
						/>

				<Label
						Content="{Binding ElementName=win1,
															Path=History,
															Mode=OneWay,
															FallbackValue='none'}"
						Grid.Column="3"
						Grid.Row="0"
						Padding="5,0,10,0"
						Foreground="White"
						/>



				<Label
						Content="Select Path"
						Grid.Column="0"
						Grid.Row="1"
						Padding="5,0,10,0"
						Foreground="White"
						/>

				<Label
						Content="{Binding ElementName=win1,
															Path=SelectFldr,
															Mode=OneWay,
															FallbackValue='none'}"
						Grid.Column="1"
						Grid.Row="1"
						Padding="5,0,10,0"
						Foreground="White"
						/>



				<Label
						Content="Path Chg"
						Grid.Column="2"
						Grid.Row="1"
						Padding="5,0,10,0"
						Foreground="White"
						/>

				<Label
						Content="{Binding ElementName=win1,
															Path=PathChg,
															Mode=OneWay,
															FallbackValue='none'}"
						Grid.Column="3"
						Grid.Row="1"
						Padding="5,0,10,0"
						Foreground="White"
						/>


			</Grid>


			<StackPanel
					Margin="0,10,0,0"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					Orientation="Horizontal"
					>
				<Button x:Name="btnAdd"
						Content="Add me"
						Width="60"
						Height="20"
						HorizontalAlignment="Left"
						DockPanel.Dock="left"
						Click="btnAdd_OnClick"
						/>

				<Button x:Name="btnClr"
						Content="Clear me"
						Margin="10,0,0,0"
						Width="60"
						Height="20"
						HorizontalAlignment="Left"
						DockPanel.Dock="left"
						Click="BtnClr_OnClick"
						/>
			</StackPanel>


		</DockPanel>


	</Grid>
</Window>
