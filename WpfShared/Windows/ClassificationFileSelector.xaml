<Window
		x:Class="WpfShared.Windows.ClassificationFileSelector"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
		xmlns:classificationFileSupport="clr-namespace:AndyShared.ClassificationFileSupport"
		xmlns:configSupport="clr-namespace:AndyShared.ConfigSupport"
		xmlns:cs="clr-namespace:System.Collections.Specialized;assembly=System"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:WpfShared.Windows"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sample="clr-namespace:AndyShared.SampleFileSupport"
		xmlns:sharedsupport="clr-namespace:AndyShared.Support"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		x:Name="winClsFileMgr"
		Title="Classification File Selector"
		Width="1200"
		Height="800"
		MinWidth="950"
		mc:Ignorable="d"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterColorList.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/MasterVisualResources.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/VisualStates.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/ScrollBar.xaml" />
				<ResourceDictionary Source="ResourceFiles/XamlResources/IconResources.xaml" />
				<ResourceDictionary Source="../SVG/File-Open-00.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<sharedsupport:NullStringToMessage x:Key="NullStringToMessage" />
			<sharedsupport:NullObjToMessage x:Key="NullObjToMessage" />
			<sharedsupport:InvertBool x:Key="InvertBool" />
			<sharedsupport:StringToMessage x:Key="StringToMessage" />
			<sharedsupport:PassThroughConverter x:Key="PassThru" />

			<sys:Double x:Key="EditingTextBoxHeight">22</sys:Double>


			<Style
					x:Key="Label.Base"
					TargetType="{x:Type Label}"
					>
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Height" Value="{StaticResource EditingTextBoxHeight}" />
			</Style>

			<Style
					x:Key="Listbox.Label.Item.Title"
					TargetType="{x:Type Label}"
					BasedOn="{StaticResource Label.Base}"
					>
				<Setter Property="Width" Value="80" />
				<Setter Property="Margin" Value="0,0,10,0" />
				<Setter Property="Foreground" Value="{StaticResource Label.Title.Foreground.Subdued}" />
			</Style>


			<Style
					x:Key="Label.Selected.Title"
					TargetType="{x:Type Label}"
					BasedOn="{StaticResource Label.Base}"
					>
				<Setter Property="Padding" Value="0,2,0,0" />
				<Setter Property="Margin" Value="5,0,0,0" />
				<Setter Property="Foreground" Value="{StaticResource Label.Title.Foreground.Subdued}" />
			</Style>

			<Style
					x:Key="Listbox.TxBlock.Item.Value"
					TargetType="{x:Type TextBlock}"
					>
				<Setter Property="Padding" Value="0,2,0,0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
			</Style>

			<Style
					x:Key="Button.Reduced.Vertically"
					TargetType="{x:Type Button}"
					BasedOn="{StaticResource Button.Normal.Style}"
					>
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
				<Setter Property="Height" Value="26" />
				<Setter Property="Margin" Value="0,4,0,0" />
				<Setter Property="Padding" Value="0,0,0,2" />
			</Style>

			<Style
					x:Key="Combo.Base"
					TargetType="{x:Type ComboBox}"
					>
				<Setter Property="Height" Value="{StaticResource EditingTextBoxHeight}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Background" Value="{StaticResource ComboBox.Normal.Background}" />
			</Style>

			<Style
					x:Key="TextBlock.Base"
					TargetType="TextBlock"
					>
				<Setter Property="Height" Value="{StaticResource EditingTextBoxHeight}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Background" Value="Transparent" />
			</Style>

			<Style
					x:Key="TextBox.Base"
					TargetType="{x:Type TextBox}"
					>
				<Setter Property="Height" Value="{StaticResource EditingTextBoxHeight}" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Background" Value="{StaticResource TextBox.Background}" />
			</Style>

			<ControlTemplate
					x:Key="CbxControlTemplate"
					TargetType="{x:Type ComboBox}"
					>
				<Grid
						x:Name="templateRoot"
						SnapsToDevicePixels="True"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
					</Grid.ColumnDefinitions>

					<Popup
							x:Name="PART_Popup"
							AllowsTransparency="True"
							Grid.ColumnSpan="2"
							Margin="1"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							IsOpen="{Binding IsDropDownOpen,
															 Mode=TwoWay,
															 RelativeSource={RelativeSource TemplatedParent}}"
							>
						<Themes:SystemDropShadowChrome
								x:Name="shadow"
								MinWidth="{Binding ActualWidth,
																	 ElementName=templateRoot}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								Color="Transparent"
								>
							<!--  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  -->
							<Border
									x:Name="DropDownBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="1"
									BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
									>
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid
											x:Name="grid"
											RenderOptions.ClearTypeHint="Enabled"
											>
										<Canvas
												x:Name="canvas"
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top"
												>
											<Rectangle
													x:Name="OpaqueRect"
													Width="{Binding ActualWidth,
																					ElementName=DropDownBorder}"
													Height="{Binding ActualHeight,
																					 ElementName=DropDownBorder}"
													Fill="{Binding Background,
																				 ElementName=DropDownBorder}"
													/>
										</Canvas>
										<ItemsPresenter
												x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Themes:SystemDropShadowChrome>
					</Popup>

					<ToggleButton
							x:Name="toggleButton"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							IsChecked="{Binding IsDropDownOpen,
																	Mode=TwoWay,
																	RelativeSource={RelativeSource TemplatedParent}}"
							>
						<ToggleButton.Style>
							<Style TargetType="{x:Type ToggleButton}">
								<Setter Property="OverridesDefaultStyle" Value="True" />
								<Setter Property="IsTabStop" Value="False" />
								<Setter Property="Focusable" Value="False" />
								<Setter Property="ClickMode" Value="Press" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type ToggleButton}">
											<Border
													x:Name="templateRoot"
													SnapsToDevicePixels="True"
													Background="{TemplateBinding Background}"
													BorderThickness="{TemplateBinding BorderThickness}"
													BorderBrush="#FFACACAC"
													>
												<Border
														x:Name="splitBorder"
														Margin="0"
														Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
														HorizontalAlignment="Right"
														SnapsToDevicePixels="True"
														BorderThickness="1"
														BorderBrush="Transparent"
														>
													<Path
															x:Name="Arrow"
															Margin="0"
															HorizontalAlignment="Center"
															VerticalAlignment="Center"
															Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
															Fill="#FF999999"
															/>
												</Border>
											</Border>
											<ControlTemplate.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
														<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
														<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
														<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
													</MultiDataTrigger.Conditions>
													<Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
													<Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
													<!-- <Setter TargetName="templateRoot" Property="Background" Value="White" /> -->
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Selected.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFABADB3" />
												</MultiDataTrigger>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter TargetName="Arrow" Property="Fill" Value="Black" />
												</Trigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
													</MultiDataTrigger.Conditions>
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Selected.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF7EB4EA" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
													</MultiDataTrigger.Conditions>
													<Setter TargetName="splitBorder" Property="Background">
														<Setter.Value>
															<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
																<GradientStop Offset="0" Color="#FFEBF4FC" />
																<GradientStop Offset="1" Color="#FFDCECFC" />
															</LinearGradientBrush>
														</Setter.Value>
													</Setter>
													<Setter TargetName="splitBorder" Property="BorderBrush" Value="#FF7EB4EA" />
													<!-- <Setter TargetName="templateRoot" Property="Background" Value="White" /> -->
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Selected.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF7EB4EA" />
												</MultiDataTrigger>
												<Trigger Property="IsPressed" Value="True">
													<Setter TargetName="Arrow" Property="Fill" Value="Black" />
												</Trigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
													</MultiDataTrigger.Conditions>
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Selected.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
													</MultiDataTrigger.Conditions>
													<Setter TargetName="splitBorder" Property="Background">
														<Setter.Value>
															<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
																<GradientStop Offset="0" Color="#FFDAEBFC" />
																<GradientStop Offset="1" Color="#FFC4E0FC" />
															</LinearGradientBrush>
														</Setter.Value>
													</Setter>
													<Setter TargetName="splitBorder" Property="BorderBrush" Value="#FF569DE5" />
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Selected.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
												</MultiDataTrigger>
												<Trigger Property="IsEnabled" Value="False">
													<Setter TargetName="Arrow" Property="Fill" Value="#FFBFBFBF" />
												</Trigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Foreground" Value="{StaticResource ComboBox.Title.Foreground.Subdued}" />
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFD9D9D9" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
														<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Foreground" Value="{StaticResource ComboBox.Title.Foreground.Subdued}" />
													<Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
													<Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
													<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Selected.Background}" />
													<Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFBFBFBF" />
												</MultiDataTrigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ToggleButton.Style>
					</ToggleButton>

					<ContentPresenter
							x:Name="contentPresenter"
							Content="{TemplateBinding SelectionBoxItem}"
							Grid.Column="0"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							IsHitTestVisible="False"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							/>
				</Grid>

				<ControlTemplate.Triggers>
					<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
						<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
						<Setter TargetName="shadow" Property="Color" Value="#71000000" />
					</Trigger>
					<Trigger Property="HasItems" Value="False">
						<Setter TargetName="DropDownBorder" Property="Height" Value="95" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsGrouping" Value="True" />
							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
						</MultiTrigger.Conditions>
						<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
					</MultiTrigger>
					<Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
						<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
						<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

		</ResourceDictionary>

	</Window.Resources>

	<Window.Background>
		<StaticResource ResourceKey="Normal.Window.Background" />
	</Window.Background>

	<Grid 
			
			Margin="0,0,0,5">
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="100" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="230" />
		</Grid.RowDefinitions>


		<!-- <Viewbox -->
		<!-- 		Grid.Column="0" -->
		<!-- 		Grid.Row="1" -->
		<!-- -->
		<!-- 		Child="{StaticResource File-Open-00}" /> -->

		<DockPanel
				Grid.Column="0"
				Grid.Row="0"
				Grid.ColumnSpan="2"
				VerticalAlignment="Stretch"
				>

			<Label
					x:Name="Label20"
					Content="Available Classification Files"
					Margin="5,5,5,0"
					Padding="5,4,0,6"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					FontSize="14"
					DockPanel.Dock="Top"
					Background="{StaticResource Win.Title.Background}"
					Foreground="White"
					/>

			<ListBox
					x:Name="Lb1"
					Margin="5"
					VerticalAlignment="Stretch"
					DataContext="{Binding View,
																ElementName=winClsFileMgr}"
					DockPanel.Dock="Top"
					SelectedIndex="0"
					SelectedItem="{Binding Selected,
																 ElementName=winClsFileMgr,
																 FallbackValue={x:Null},
																 Mode=TwoWay}"
					Background="{StaticResource ListView.Background}"
					Foreground="White"
					ItemsSource="{Binding}"
					>
				<ListBox.ItemTemplate>
					<DataTemplate DataType="classificationFileSupport:ClassificationFile">
						<StackPanel Orientation="Vertical">

							<TextBlock
									Margin="0,0,0,3"
									Text="{Binding FileName,
																 FallbackValue=filename}"
									Foreground="White"
									/>
							<StackPanel
									Margin="20,0,0,5"
									Orientation="Vertical"
									>
								<StackPanel Orientation="Horizontal">

									<Label
											Content="Description"
											Style="{StaticResource Listbox.Label.Item.Title}"
											/>

									<TextBlock
											Margin="0"
											Text="{Binding HeaderDescFromFile,
																		 FallbackValue=C:\\file path}"
											Style="{StaticResource Listbox.TxBlock.Item.Value}"
											/>
								</StackPanel>

								<StackPanel Orientation="Horizontal">
									<Label
											Content="Sample File"
											Style="{StaticResource Listbox.Label.Item.Title}"
											/>
									<TextBlock
											Margin="0"
											Style="{StaticResource Listbox.TxBlock.Item.Value}"
											>
										<TextBlock.Text>
											<Binding
													Converter="{StaticResource StringToMessage}"
													FallbackValue="C\:\\file path"
													Mode="OneWay"
													Path="SampleFileNameNoExt"
													>
												<Binding.ConverterParameter>
													<cs:StringCollection>
														<sys:String>Sample file has not been assigned</sys:String>
														<x:Null />
													</cs:StringCollection>
												</Binding.ConverterParameter>
												<!-- <sys:String>Was Found</sys:String> -->

											</Binding>
										</TextBlock.Text>
									</TextBlock>
								</StackPanel>
							</StackPanel>
						</StackPanel>
					</DataTemplate>
				</ListBox.ItemTemplate>

			</ListBox>
		</DockPanel>

		<DockPanel
				Grid.Column="0"
				Grid.Row="1"
				Grid.ColumnSpan="2"
				Margin="5,5,5,0"

				>

			<Grid
					Margin="0"
					DockPanel.Dock="Left"

					>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="80" />
					<ColumnDefinition Width="50" />
					<ColumnDefinition Width="120" />
					<ColumnDefinition Width="50" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="105" />
					<ColumnDefinition Width="95" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="24" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<DockPanel
						Grid.Column="7"
						Grid.Row="4"
						Grid.RowSpan="3"
						Margin="5,5,0,5.0"
						HorizontalAlignment="Right"
						VerticalAlignment="bottom"
						>


					<Button
							x:Name="BtnCancel"
							Content="Cancel"
							Margin="0,0,0,0"
							Width="{StaticResource Button.Normal.Width}"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							DockPanel.Dock="Bottom"
							Click="BtnCancel_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}" />

					<Button
							x:Name="BtnDone"
							Content="Select"
							Margin="0,0,0,5.5"
							Width="{StaticResource Button.Normal.Width}"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							DockPanel.Dock="bottom"
							Click="BtnSelect_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							/>


				</DockPanel>


				<DockPanel
						Grid.Column="6"
						Grid.Row="0"
						Grid.RowSpan="5"
						Margin="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="top"
						>

					<Label
							x:Name="Label22"
							Content="Classification File"
							Margin="0,0,0,0"
							Width="{StaticResource Button.Normal.Width}"
							Height="22"
							Padding="0,0,0,2"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							HorizontalContentAlignment="Center"
							VerticalContentAlignment="Center"
							DockPanel.Dock="Top"
							Background="{StaticResource Win.Title.Background}"
							Foreground="White"
							/>
					<!--  VerticalAlignment="Bottom">  -->
					<Button
							x:Name="BtnNew"
							Content="New"
							Width="{StaticResource Button.Normal.Width}"
							VerticalAlignment="top"
							VerticalContentAlignment="Center"
							DockPanel.Dock="top"
							Click="BtnNew_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							>

					</Button>

					<Button
							x:Name="BtnCopy"
							Content="Duplicate"
							Width="{StaticResource Button.Normal.Width}"
							VerticalAlignment="top"
							DockPanel.Dock="top"
							IsEnabled="{Binding Selected.CanEdit,
																	ElementName=winClsFileMgr,
																	FallbackValue=false,
																	Mode=OneWay}"
							Click="BtnCopy_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							>

					</Button>

					<Button
							x:Name="BtnRename"
							Content="Rename"
							Width="{StaticResource Button.Normal.Width}"
							VerticalAlignment="Bottom"
							DockPanel.Dock="top"
							IsEnabled="{Binding Selected.CanEdit,
																	ElementName=winClsFileMgr,
																	FallbackValue=false,
																	Mode=OneWay}"
							Click="BtnRename_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							>

					</Button>

					<Button
							x:Name="BtnDelete"
							Content="Delete"
							Width="{StaticResource Button.Normal.Width}"
							VerticalAlignment="Bottom"
							DockPanel.Dock="top"
							IsEnabled="{Binding Selected.CanEdit,
																	ElementName=winClsFileMgr,
																	FallbackValue=false,
																	Mode=OneWay}"
							Click="BtnDelete_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							>

					</Button>
				</DockPanel>

				<DockPanel
						Grid.Column="6"
						Grid.Row="5"
						Grid.RowSpan="2"
						Margin="0,5.5,0,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="top"
						>

					<Label
							x:Name="Label23"
							Content="Sample File"
							Margin="0,0,0,2"
							Width="{StaticResource Button.Normal.Width}"
							Height="26"
							Padding="0,0,0,2"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top"
							HorizontalContentAlignment="Center"
							VerticalContentAlignment="Center"
							DockPanel.Dock="Top"
							Background="{StaticResource Win.Title.Background}"
							Foreground="White"
							IsEnabled="{Binding Selected.CanEdit,
																	ElementName=winClsFileMgr,
																	Mode=OneWay}"
							/>


					<Button
							x:Name="BtnInstallSample"
							Content="Install"
							Width="{StaticResource Button.Normal.Width}"
							VerticalAlignment="Bottom"
							DockPanel.Dock="Top"
							Click="BtnInstallSample_OnClick"
							Style="{StaticResource Button.Reduced.Vertically}"
							Template="{StaticResource Button.Normal.ControlTemplate}"
							>
					</Button>

				</DockPanel>

				<Label
						x:Name="Label21"
						Content="Selected Classification File"
						Grid.Column="0"
						Grid.Row="0"
						Grid.ColumnSpan="5"
						Margin="0,0,0,2"
						Height="22"
						Padding="5,0,0,2"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						VerticalContentAlignment="Center"
						DockPanel.Dock="Top"
						Background="{StaticResource Win.Title.Background}"
						Foreground="White"
						/>

				<Label
						Content="File Name"
						Grid.Column="0"
						Grid.Row="1"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<Label
						Content="User Id"
						Grid.Column="1"
						Grid.Row="1"
						Margin="0"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<Label
						Content="{Binding Selected.UserName,
															ElementName=winClsFileMgr,
															FallbackValue=''}"
						Grid.Column="2"
						Grid.Row="1"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						Style="{StaticResource Label.Base}"
						/>

				<Label
						Content="File Id"
						Grid.Column="3"
						Grid.Row="1"
						Margin="0"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<TextBox
						x:Name="TbxFileId"
						Grid.Column="4"
						Grid.Row="1"
						KeyUp="TextBox_OnKeyUp"
						LostFocus="TextBox_OnLostFocus"
						Text="{Binding Selected.FileId,
													 ElementName=winClsFileMgr,
													 FallbackValue='',
													 UpdateSourceTrigger=Explicit}"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						Style="{StaticResource TextBox.Base}"
						/>

				<Popup
						x:Name="FileIdPopup"
						AllowsTransparency="True"
						Grid.Row="1"
						Width="150"
						Height="auto"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						HorizontalOffset="20"
						Placement="Bottom"
						PlacementTarget="{Binding ElementName=TbxFileId}"
						PopupAnimation="Fade"
						VerticalOffset="5"
						IsOpen="{Binding FileIdPopupIsOpen,
														 ElementName=winClsFileMgr}"
						>
					<Border
							Padding="3"
							CornerRadius="10"
							Background="#555555"
							>
						<TextBox
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								HorizontalContentAlignment="Center"
								Text="File has been renamed"
								Background="Transparent"
								Foreground="White"
								BorderThickness="0"
								/>
					</Border>

				</Popup>

				<Label
						Content="Description"
						Grid.Column="0"
						Grid.Row="2"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<TextBox
						Grid.Column="1"
						Grid.Row="2"
						Grid.ColumnSpan="4"
						KeyUp="TextBox_OnKeyUp"
						LostFocus="TextBox_OnLostFocus"
						Text="{Binding Selected.HeaderDescFromMemory,
													 ElementName=winClsFileMgr,
													 FallbackValue='',
													 UpdateSourceTrigger=Explicit}"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						Style="{StaticResource TextBox.Base}"
						/>

				<Label
						Content="Notes"
						Grid.Column="0"
						Grid.Row="3"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<TextBox
						Grid.Column="1"
						Grid.Row="3"
						Grid.ColumnSpan="4"
						KeyUp="TextBox_OnKeyUp"
						LostFocus="TextBox_OnLostFocus"
						Text="{Binding Selected.HeaderNote,
													 ElementName=winClsFileMgr,
													 FallbackValue='',
													 UpdateSourceTrigger=Explicit}"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						Style="{StaticResource TextBox.Base}"
						/>

				<Label
						Content="File Path"
						Grid.Column="0"
						Grid.Row="4"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<Label
						Content="{Binding Selected.FullFilePath,
															ElementName=winClsFileMgr,
															FallbackValue=''}"
						Grid.Column="1"
						Grid.Row="4"
						Grid.ColumnSpan="4"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						Style="{StaticResource Label.Base}"
						/>

				<Label
						Content="Sample File"
						Grid.Column="0"
						Grid.Row="5"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<ComboBox
						x:Name="CbxSampleFiles"
						Grid.Column="1"
						Grid.Row="5"
						Grid.ColumnSpan="4"
						DataContext="{Binding ElementName=winClsFileMgr,
																	Path=SampleFiles}"
						SelectedItem="{Binding ElementName=winClsFileMgr,
																	 Path=SelectedSample,
																	 Mode=TwoWay}"
						SelectedValue="{Binding ElementName=winClsFileMgr,
																		Path=SearchText}"
						SelectedValuePath="SortName"
						IsEditable="False"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						IsReadOnly="True"
						ItemsSource="{Binding View,
																	FallbackValue={x:Null}}"
						Style="{StaticResource Combo.Base}"
						Template="{DynamicResource CbxControlTemplate}"
						>
					<ComboBox.ItemTemplate>
						<DataTemplate DataType="sample:SampleFile">
							<StackPanel Orientation="Horizontal">
								<Label
										Content="{Binding FileName,
																			FallbackValue='FileName',
																			TargetNullValue=''}"
										Width="Auto"
										MinWidth="120"
										Padding="5,1,0,0"
										Foreground="White"
										/>
								<Label
										Content="{Binding FullFilePath,
																			FallbackValue='FilePath'}"
										Padding="5,1,0,0"
										ContentStringFormat="{}({0})"
										Foreground="White"
										>
								</Label>
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<Label
						Content="Description"
						Grid.Column="0"
						Grid.Row="6"
						Style="{StaticResource Label.Selected.Title}"
						/>

				<TextBlock
						Grid.Column="1"
						Grid.Row="6"
						Grid.ColumnSpan="4"
						Text="{Binding SelectedSample.Description,
													 ElementName=winClsFileMgr,
													 FallbackValue='',
													 TargetNullValue='',
													 Mode=OneWay,
													 Converter={StaticResource NullStringToMessage},
													 ConverterParameter=''}"
						TextTrimming="CharacterEllipsis"
						IsEnabled="{Binding Selected.CanEdit,
																ElementName=winClsFileMgr,
																Mode=OneWay}"
						Style="{StaticResource TextBlock.Base}"
						/>
			</Grid>
		</DockPanel>
	</Grid>
</Window>
