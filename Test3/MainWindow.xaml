<Window
	x:Class="Test3.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Test3"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="mainWin"
	Title="MainWindow"
	Width="1700"
	Height="850"
	Background="#444444"
	FontFamily="MS Gothic"
	mc:Ignorable="d">
	<Window.Resources>

		<Style x:Key="lblStyle" TargetType="Label">
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Margin" Value="0,0,3,0" />
			<Setter Property="Padding" Value="0" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding CheckedStatus}" Value="True">
					<Setter Property="Foreground" Value="White" />
				</DataTrigger>
				<DataTrigger Binding="{Binding CheckedStatus}" Value="False">
					<Setter Property="Foreground" Value="#aaaaaa" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="lblStyle5" TargetType="Label">
			<!-- <Setter Property="Foreground" Value="White" /> -->
			<Setter Property="Margin" Value="0,0,3,0" />
			<Setter Property="Padding" Value="0,0,0,0" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Style.Triggers>
				<!-- <DataTrigger Binding="{Binding IsChecked}" Value="True"> -->
				<!-- 	<Setter Property="Foreground" Value="White" /> -->
				<!-- </DataTrigger> -->

				<DataTrigger Binding="{Binding Checked}" Value="{x:Null}">
					<Setter Property="Foreground" Value="#bbbbbb" />
				</DataTrigger>
				<DataTrigger Binding="{Binding Checked}" Value="False">
					<Setter Property="Foreground" Value="#999999" />
				</DataTrigger>
			</Style.Triggers>

		</Style>



		<Style x:Key="bdrStyle5.1" TargetType="Border">
			<Setter Property="BorderBrush" Value="DimGray" />
			<Setter Property="BorderThickness" Value="1,0,0,0" />
			<Setter Property="Padding" Value="3,0,0,0" />
		</Style>

		<Style
			x:Key="bdrStyle5.0"
			BasedOn="{StaticResource bdrStyle5.1}"
			TargetType="Border">
			<Setter Property="BorderThickness" Value="0,0,0,0" />
		</Style>

		<Style
			x:Key="bdrStyle5.2"
			BasedOn="{StaticResource bdrStyle5.1}"
			TargetType="Border">
			<Setter Property="BorderThickness" Value="1,0,1,0" />
		</Style>



		<Style x:Key="tblkStyle" TargetType="TextBlock">
			<Setter Property="HorizontalAlignment" Value="Center" />
		</Style>
		<Style x:Key="btnStyle" TargetType="Button">

			<Setter Property="FontSize" Value="10" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Height" Value="25" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="Margin" Value="5" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="Width" Value="80" />
		</Style>


		<ContentControl x:Key="control1">
			<ContentControl.Content>
				<StackPanel
					Width="500"
					Margin="3,5,0,5"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Orientation="Horizontal">
					<CheckBox
						Name="control1Cbx"
						Foreground="White"
						IsChecked="{Binding CheckedStatus}"
						IsThreeState="false"
						LostFocus="CheckBox_LostFocus" />
					<StackPanel
						Width="500"
						Margin="10,0,0,0"
						Orientation="Vertical">
						<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
							<Label
								Margin="0,0,5,0"
								Padding="0"
								Content="{Binding NodeType, FallbackValue=BRANCH}"
								ContentStringFormat="{}{0,-7}|"
								Foreground="White" />
							<Label
								Width="256"
								Margin="0,0,5,0"
								Padding="0"
								Content="{Binding Name, FallbackValue='Br# 0 :ParentBr# 0 :Depth 0 :Unique 0'}"
								ContentStringFormat="{}{0,-15} "
								Foreground="White" />

							<Label
								Margin="0,0,5,0"
								Padding="0"
								Content="| children |"
								ContentStringFormat="{}{0,-10} "
								Foreground="White" />
							<Label
								Margin="0,0,5,0"
								Padding="0"
								Content="{Binding childList.Count, FallbackValue='3 '}"
								ContentStringFormat="{}{0,2}| "
								Foreground="White" />
						</StackPanel>
						<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
							<Label
								Margin="0,0,5,0"
								Padding="0"
								Content=" "
								ContentStringFormat="{}{0,-7}| "
								Foreground="White" />
							<Label
								Width="78"
								Margin="0,0,5,0"
								Padding="0"
								Content="{Binding SelectState, FallbackValue='CHECKED'}"
								ContentStringFormat="{}{0,-8}| "
								Foreground="White" />

							<Label
								Width="78"
								Margin="0,0,5,0"
								Padding="0"
								Content="{Binding SelectStateOriginal, FallbackValue='UNSET'}"
								ContentStringFormat="{}{0,-8}| "
								Foreground="White" />
							<Label
								Margin="0,0,5,0"
								Padding="0"
								Content="chk count"
								ContentStringFormat="{}{0,-5}| "
								Foreground="White" />
							<Label
								Margin="0,0,5,0"
								Padding="0"
								Content="{Binding CheckedCount, FallbackValue='0'}"
								ContentStringFormat="{}{0,2} | "
								Foreground="White" />
						</StackPanel>
					</StackPanel>
				</StackPanel>
			</ContentControl.Content>
		</ContentControl>

	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="100" />
			<ColumnDefinition />
			<ColumnDefinition Width="100" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="100" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="80" />
		</Grid.RowDefinitions>

		<TextBox
			Name="tbk1"
			Grid.Row="0"
			Grid.Column="2"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="Black"
			Foreground="White"
			HorizontalScrollBarVisibility="Visible"
			Text="hello&#x0a;"
			VerticalScrollBarVisibility="Visible" />

		<TextBox
			Name="tbk2"
			Grid.Row="0"
			Grid.Column="4"
			Margin="0,0,0,60"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="Black"
			FontFamily="MS Gothic"
			Foreground="White"
			HorizontalScrollBarVisibility="Visible"
			Text="hello&#x0a;"
			VerticalScrollBarVisibility="Visible" />

		<StackPanel
			Grid.Row="0"
			Grid.Column="4"
			Height="50"
			Margin="0,5"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Bottom"
			Background="Black">
			<ContentControl Content="{StaticResource control1}" />
		</StackPanel>

		<!--  does not show - hidden  -->
		<Label
			Grid.Row="1"
			Grid.Column="2"
			Height="20"
			Padding="0,5,0,0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Content="Tv1"
			Foreground="White"
			Visibility="Collapsed" />

		<!--  does not show - hidden  -->
		<TreeView
			Name="tv1"
			Grid.Row="1"
			Grid.Column="2"
			Margin="0,20,0,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="#000000"
			DataContext="{Binding ElementName=mainWin, Path=evMgr.Root}"
			FontFamily="MS Gothic"
			Foreground="White"
			ItemsSource="{Binding childList}"
			ScrollViewer.HorizontalScrollBarVisibility="Visible"
			ScrollViewer.VerticalScrollBarVisibility="Visible"
			Style="{DynamicResource TreeViewStyle1}"
			Visibility="Collapsed">

			<TreeView.Resources>

				<ContentControl x:Key="control1">
					<ContentControl.Content>
						<StackPanel
							Margin="3,5,0,5"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Orientation="Horizontal">
							<CheckBox
								Foreground="White"
								IsChecked="{Binding CheckedStatus}"
								IsThreeState="false" />
							<StackPanel Margin="10,0,0,0" Orientation="Vertical">
								<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="{Binding NodeType}"
										ContentStringFormat="{}{0,-7}|"
										Foreground="White" />
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="{Binding Name}"
										ContentStringFormat="{}{0,-15}| "
										Foreground="White" />

									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="children"
										ContentStringFormat="{}{0,-10}| "
										Foreground="White" />
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="{Binding childList.Count}"
										ContentStringFormat="{}{0,2}| "
										Foreground="White" />
								</StackPanel>
								<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content=" "
										ContentStringFormat="{}{0,-7}| "
										Foreground="White" />
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="{Binding SelectState}"
										ContentStringFormat="{}{0,-14}| "
										Foreground="White" />

									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="{Binding SelectStateOriginal}"
										ContentStringFormat="{}{0,-15}| "
										Foreground="White" />
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="chk count"
										ContentStringFormat="{}{0,-5}| "
										Foreground="White" />
									<Label
										Margin="0,0,5,0"
										Padding="0"
										Content="{Binding CheckedCount}"
										ContentStringFormat="{}{0,2}| "
										Foreground="White" />
								</StackPanel>
							</StackPanel>
						</StackPanel>

					</ContentControl.Content>
				</ContentControl>

				<SolidColorBrush x:Key="ListBorder" Color="#828790" />
				<Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
					<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="Padding" Value="1" />
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
					<Setter Property="ScrollViewer.PanningMode" Value="Both" />
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
					<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeView}">
								<Border
									x:Name="Bd"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="true">
									<ScrollViewer
										x:Name="_tv_scrollviewer_"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										CanContentScroll="false"
										Focusable="false"
										HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<StackPanel Orientation="Vertical">
											<ContentControl Content="{StaticResource control1}" />
											<ItemsPresenter />
										</StackPanel>
									</ScrollViewer>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
									</Trigger>
									<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
										<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>

			</TreeView.Resources>
			<TreeView.ItemTemplate>

				<HierarchicalDataTemplate ItemsSource="{Binding childList}">

					<ContentControl
						x:Name="PART_ContentControl"
						Margin="0"
						Padding="0"
						Content="{Binding}"
						Foreground="White">

						<ContentControl.ContentTemplate>
							<DataTemplate>

								<StackPanel
									Margin="3,5,0,5"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Orientation="Horizontal">

									<CheckBox
										Foreground="White"
										IsChecked="{Binding CheckedStatus}"
										IsThreeState="false" />
									<StackPanel Margin="10,0,0,0" Orientation="Vertical">
										<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
											<Label
												Content="{Binding NodeType}"
												ContentStringFormat="{}{0,-7}|"
												Style="{StaticResource lblStyle}" />
											<Label
												Content="{Binding Name}"
												ContentStringFormat="{}{0,-15}| "
												Style="{StaticResource lblStyle}" />

											<Label
												Content="children"
												ContentStringFormat="{}{0,10}| "
												Style="{StaticResource lblStyle}" />
											<Label
												Content="{Binding childList.Count}"
												ContentStringFormat="{}{0,2}| "
												Style="{StaticResource lblStyle}" />
										</StackPanel>
										<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
											<Label
												Margin="0,0,5,0"
												Padding="0"
												Content=" "
												ContentStringFormat="{}{0,-7}| "
												Foreground="White" />
											<Label
												Margin="0,0,5,0"
												Padding="0"
												Content="{Binding SelectState}"
												ContentStringFormat="{}{0,-14}| "
												Foreground="White" />

											<Label
												Margin="0,0,5,0"
												Padding="0"
												Content="{Binding SelectStateOriginal}"
												ContentStringFormat="{}{0,-15}| "
												Foreground="White" />
											<Label
												Margin="0,0,5,0"
												Padding="0"
												Content="chk count"
												ContentStringFormat="{}{0,5}| "
												Foreground="White" />
											<Label
												Margin="0,0,5,0"
												Padding="0"
												Content="{Binding CheckedCount}"
												ContentStringFormat="{}{0,2}| "
												Foreground="White" />
										</StackPanel>
									</StackPanel>
								</StackPanel>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>

		</TreeView>


		<Label
			Grid.Row="1"
			Grid.Column="4"
			Height="20"
			Padding="0,5,0,0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Content="Tv2"
			Foreground="White" />

		<TreeView
			Name="tv2"
			Grid.Row="1"
			Grid.Column="4"
			Margin="0,20,0,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="#000000"
			DataContext="{Binding ElementName=mainWin, Path=evMgr.First}"
			FontFamily="MS Gothic"
			Foreground="White"
			ItemsSource="{Binding childList}"
			ScrollViewer.HorizontalScrollBarVisibility="Visible"
			ScrollViewer.VerticalScrollBarVisibility="Visible"
			Style="{DynamicResource TreeViewStyle1}">

			<TreeView.Resources>

				<SolidColorBrush x:Key="ListBorder" Color="#828790" />

				<Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
					<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="Padding" Value="1" />
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
					<Setter Property="ScrollViewer.PanningMode" Value="Both" />
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
					<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeView}">
								<Border
									x:Name="Bd"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="true">
									<ScrollViewer
										x:Name="_tv_scrollviewer_"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										CanContentScroll="false"
										Focusable="false"
										HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<StackPanel Orientation="Vertical">
											<ContentControl Content="{StaticResource control1}" />
											<ItemsPresenter />
										</StackPanel>
									</ScrollViewer>
								</Border>
								<ControlTemplate.Triggers>

									<Trigger Property="IsEnabled" Value="false">
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />

									</Trigger>
									<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
										<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Style.Triggers>

						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>

				<!--  change background highlight of selected, unfocused text  -->
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#424242" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#222222" />

			</TreeView.Resources>

			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding childList}">
					<ContentControl
						x:Name="PART_ContentControl"
						Margin="0"
						Padding="0"
						Content="{Binding}"
						Foreground="White">
						<ContentControl.ContentTemplate>
							<DataTemplate>
								<StackPanel
									Name="Sp"
									Margin="3,5,0,5"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Orientation="Horizontal">

									<CheckBox
										Name="item_cbx"
										Foreground="White"
										IsChecked="{Binding CheckedStatus}"
										IsThreeState="false"
										LostFocus="CheckBox_LostFocus" />
									<StackPanel Margin="10,0,0,0" Orientation="Vertical">
										<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
											<Label
												Content="{Binding NodeType}"
												ContentStringFormat="{}{0,-7}|"
												Style="{StaticResource lblStyle}" />
											<Label
												Content="{Binding Name}"
												ContentStringFormat="{}{0,-15}| "
												Style="{StaticResource lblStyle}" />

											<Label
												Content="children"
												ContentStringFormat="{}{0,10}| "
												Style="{StaticResource lblStyle}" />
											<Label
												Content="{Binding childList.Count}"
												ContentStringFormat="{}{0,2}| "
												Style="{StaticResource lblStyle}" />
										</StackPanel>
										<StackPanel Margin="0,0,0,3" Orientation="Horizontal">
											<Label
												Content=" "
												ContentStringFormat="{}{0,-7}| "
												Style="{StaticResource lblStyle}" />
											<Label
												Content="{Binding SelectState}"
												ContentStringFormat="{}{0,-14}| "
												Style="{StaticResource lblStyle}" />

											<Label
												Content="{Binding SelectStateOriginal}"
												ContentStringFormat="{}{0,-15}| "
												Style="{StaticResource lblStyle}" />
											<Label
												Content="chk count"
												ContentStringFormat="{}{0,5}| "
												Style="{StaticResource lblStyle}" />
											<Label
												Content="{Binding CheckedCount}"
												ContentStringFormat="{}{0,2}| "
												Style="{StaticResource lblStyle}" />
										</StackPanel>
									</StackPanel>
								</StackPanel>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>

		<Label
			Grid.Row="1"
			Grid.Column="2"
			Height="20"
			Padding="0,5,0,0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Content="Tv5"
			Foreground="White" />

		<TreeView
			Name="tv5"
			Grid.Row="1"
			Grid.Column="2"
			Margin="0,20,0,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Background="#222222"
			DataContext="{Binding ElementName=mainWin, Path=evMgr.Origin}"
			FontFamily="MS Gothic"
			Foreground="White"
			ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
			ItemsSource="{Binding Children}"
			ScrollViewer.HorizontalScrollBarVisibility="Visible"
			ScrollViewer.VerticalScrollBarVisibility="Visible">
			<TreeView.Resources>

				<Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
					<Setter Property="Foreground" Value="White" />
				</Style>

				<!--  change background highlight of selected, unfocused text  -->
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#424242" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#222222" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="Red" />-->


				<Style x:Key="TreeViewItemFocusVisual">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
				<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,7 L7,0 z" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />

				<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
					<Setter Property="Focusable" Value="False" />
					<Setter Property="Height" Value="16" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ToggleButton}">
								<Border
									Width="17"
									Height="17"
									Padding="5"
									Background="Transparent">
									<Path
										x:Name="ExpandPath"
										Data="{StaticResource TreeArrow}"
										Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
										Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
										<Path.RenderTransform>
											<RotateTransform Angle="135" CenterX="3" CenterY="3" />
										</Path.RenderTransform>
									</Path>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="RenderTransform">
											<Setter.Value>
												<RotateTransform Angle="180" CenterX="3" CenterY="3" />
											</Setter.Value>
										</Setter>
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True" />
											<Condition Property="IsChecked" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Width" Value="16" />
				</Style>

				<Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Left, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					<Setter Property="Padding" Value="1,0,0,0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<Grid x:Name="Gd" Margin="3,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" MinWidth="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<!--  remove the below from the above to allow full width items  -->
									<!-- <ColumnDefinition Width="Auto" /> -->
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<ToggleButton
										x:Name="Expander"
										ClickMode="Press"
										IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
										Style="{StaticResource ExpandCollapseToggleStyle}" />
									<Border
										x:Name="Bd"
										Grid.Row="0"
										Grid.Column="1"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										SnapsToDevicePixels="true">

										<ContentPresenter
											x:Name="PART_Header"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											ContentSource="Header"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Border>
									<ItemsPresenter
										x:Name="ItemsHost"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsExpanded" Value="false">
										<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
									</Trigger>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="true" />
											<Condition Property="IsSelectionActive" Value="false" />
										</MultiTrigger.Conditions>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
									</Trigger>
									<DataTrigger Binding="{Binding Checked}" Value="{x:Null}">
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Checked}" Value="false">
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Top, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>


			</TreeView.Resources>


			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}">
					<ContentControl
						x:Name="PART_ContentControl"
						Padding="0"
						Content="{Binding}"
						Foreground="White">
						<ContentControl.ContentTemplate>
							<DataTemplate DataType="{x:Type local:TreeNode5}">
								<Grid
									Name="Sp"
									Margin="3,5,0,5"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center">

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<StackPanel
										Grid.Column="0"
										Width="76"
										Margin="-2,0,0,0"
										Orientation="Horizontal">
										<CheckBox
											Name="item_cbx"
											Margin="3,0,8,0"
											Foreground="White"
											IsChecked="{Binding Checked}"
											IsThreeState="False"
											LostFocus="CheckBox_LostFocus5" />
										<Label Content="{Binding NodeType, FallbackValue=BRANCH}" Style="{StaticResource lblStyle5}" />
									</StackPanel>

									<StackPanel
										x:Name="filler"
										Grid.Column="1"
										MinWidth="15"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch">
										<Border
											Margin="0,8,-4,0"
											VerticalAlignment="Stretch"
											BorderBrush="White"
											BorderThickness="0,.5,0,0" />

									</StackPanel>

									<Border
										Grid.Column="2"
										Margin="0,0,3,0"
										BorderBrush="White"
										BorderThickness="1,0,1,0">
										<StackPanel
											Margin="3,0,0,0"
											HorizontalAlignment="Right"
											Orientation="Vertical">

											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border Grid.Column="0" Style="{StaticResource bdrStyle5.0}">
													<Label
														Width="40"
														Content="Name"
														Style="{StaticResource lblStyle5}" />
												</Border>

												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														MinWidth="130"
														Content="{Binding Name, FallbackValue='Name :: name :: name'}"
														Style="{StaticResource lblStyle5}" />
												</Border>
											</Grid>


											<Grid Margin="0,0,3,3" HorizontalAlignment="Stretch">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border Grid.Column="0" Style="{StaticResource bdrStyle5.0}">
													<Label
														Width="40"
														Content="Parent"
														Style="{StaticResource lblStyle5}" />
												</Border>
												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														MinWidth="130"
														HorizontalAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Content="{Binding Parent.Name, FallbackValue='Name :: name :: name'}"
														Style="{StaticResource lblStyle5}" />
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel Grid.Column="0" Orientation="Horizontal">

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
															Width="40"
															Content="child#"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
															Width="23"
															Content="{Binding ChildCount, FallbackValue=0}"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
															Width="50"
															Content="sel child"
															Style="{StaticResource lblStyle5}" />
													</Border>

												</StackPanel>

												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														Width="21"
														Content="{Binding CheckedChildrenCount, FallbackValue=0}"
														Style="{StaticResource lblStyle5}" />
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel Grid.Column="0" Orientation="Horizontal">

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
															Width="70"
															Content="{Binding CheckState, FallbackValue=CHECKED}"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.2}">
														<Label
															Width="70"
															Content="{Binding TriState, FallbackValue=UNSET}"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
															Width="30"
															Content="isChk"
															Style="{StaticResource lblStyle5}" />
													</Border>

												</StackPanel>
												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														MinWidth="30"
														Content="{Binding Checked, FallbackValue=false}"
														Style="{StaticResource lblStyle5}" />
												</Border>
											</Grid>

										</StackPanel>
									</Border>
								</Grid>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>


		</TreeView>


		<Label
			Grid.Row="1"
			Grid.Column="0"
			Height="20"
			Padding="0,5,0,0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Content="Tv6"
			Foreground="White" />

		<TreeView
			Name="tv6"
			Grid.Row="1"
			Grid.Column="0"
			Margin="0,20,0,0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Background="#111111"
			DataContext="{Binding ElementName=mainWin, Path=evMgr.Origin}"
			FontFamily="MS Gothic"
			Foreground="White"
			ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
			ItemsSource="{Binding Children}"
			ScrollViewer.HorizontalScrollBarVisibility="Visible"
			ScrollViewer.VerticalScrollBarVisibility="Visible">
			<TreeView.Resources>

				<Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
					<Setter Property="Foreground" Value="White" />
				</Style>

				<!--  change background highlight of selected, unfocused text  -->
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#424242" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#222222" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="Red" />-->


				<Style x:Key="TreeViewItemFocusVisual">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
				<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,7 L7,0 z" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />

				<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
					<Setter Property="Focusable" Value="False" />
					<Setter Property="Height" Value="16" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ToggleButton}">
								<Border
									Width="17"
									Height="17"
									Padding="5"
									Background="Transparent">
									<Path
										x:Name="ExpandPath"
										Data="{StaticResource TreeArrow}"
										Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
										Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
										<Path.RenderTransform>
											<RotateTransform Angle="135" CenterX="3" CenterY="3" />
										</Path.RenderTransform>
									</Path>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="RenderTransform">
											<Setter.Value>
												<RotateTransform Angle="180" CenterX="3" CenterY="3" />
											</Setter.Value>
										</Setter>
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True" />
											<Condition Property="IsChecked" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Width" Value="16" />
				</Style>

				<Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Left, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					<Setter Property="Padding" Value="1,0,0,0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<Grid x:Name="Gd" Margin="3,0,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" MinWidth="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<!--  remove the below from the above to allow full width items  -->
									<!-- <ColumnDefinition Width="Auto" /> -->
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<ToggleButton
										x:Name="Expander"
										ClickMode="Press"
										IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
										Style="{StaticResource ExpandCollapseToggleStyle}" />
									<Border
										x:Name="Bd"
										Grid.Row="0"
										Grid.Column="1"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										SnapsToDevicePixels="true">

										<ContentPresenter
											x:Name="PART_Header"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											ContentSource="Header"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Border>
									<ItemsPresenter
										x:Name="ItemsHost"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="1" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsExpanded" Value="false">
										<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
									</Trigger>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="true" />
											<Condition Property="IsSelectionActive" Value="false" />
										</MultiTrigger.Conditions>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
									</Trigger>
									<DataTrigger Binding="{Binding Checked}" Value="{x:Null}">
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Checked}" Value="false">
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Top, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>


			</TreeView.Resources>


			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}">
					<ContentControl
						x:Name="PART_ContentControl"
						Padding="0"
						Content="{Binding}"
						Foreground="White">
						<ContentControl.ContentTemplate>
							<DataTemplate DataType="{x:Type local:TreeNode5}">
								<Grid
									Name="Sp"
									Margin="3,5,0,5"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center">

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<StackPanel
										Grid.Column="0"
										Width="76"
										Margin="-2,0,0,0"
										Orientation="Horizontal">
										<CheckBox
											Name="item_cbx"
											Margin="3,0,8,0"
											Foreground="White"
											IsChecked="{Binding Checked}"
											IsThreeState="False"
											LostFocus="CheckBox_LostFocus5" />
										<Label Content="{Binding NodeType, FallbackValue=BRANCH}" Style="{StaticResource lblStyle5}" />
									</StackPanel>

									<StackPanel
										x:Name="filler"
										Grid.Column="1"
										MinWidth="15"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch">
										<Border
											Margin="0,8,-4,0"
											VerticalAlignment="Stretch"
											BorderBrush="White"
											BorderThickness="0,.5,0,0" />

									</StackPanel>

									<Border
										Grid.Column="2"
										Margin="0,0,3,0"
										BorderBrush="White"
										BorderThickness="1,0,1,0">
										<StackPanel
											Margin="3,0,0,0"
											HorizontalAlignment="Right"
											Orientation="Vertical">

											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border Grid.Column="0" Style="{StaticResource bdrStyle5.0}">
													<Label
														Width="40"
														Content="Name"
														Style="{StaticResource lblStyle5}" />
												</Border>

												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														MinWidth="130"
														Content="{Binding Name, FallbackValue='Name :: name :: name'}"
														Style="{StaticResource lblStyle5}" />
												</Border>
											</Grid>


											<Grid Margin="0,0,3,3" HorizontalAlignment="Stretch">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border Grid.Column="0" Style="{StaticResource bdrStyle5.0}">
													<Label
														Width="40"
														Content="Parent"
														Style="{StaticResource lblStyle5}" />
												</Border>
												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														MinWidth="130"
														HorizontalAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Content="{Binding Parent.Name, FallbackValue='Name :: name :: name'}"
														Style="{StaticResource lblStyle5}" />
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel Grid.Column="0" Orientation="Horizontal">

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
															Width="40"
															Content="child#"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
															Width="23"
															Content="{Binding ChildCount, FallbackValue=0}"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
															Width="50"
															Content="sel child"
															Style="{StaticResource lblStyle5}" />
													</Border>

												</StackPanel>

												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														Width="21"
														Content="{Binding CheckedChildrenCount, FallbackValue=0}"
														Style="{StaticResource lblStyle5}" />
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel Grid.Column="0" Orientation="Horizontal">

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
															Width="70"
															Content="{Binding CheckState, FallbackValue=CHECKED}"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.2}">
														<Label
															Width="70"
															Content="{Binding TriState, FallbackValue=UNSET}"
															Style="{StaticResource lblStyle5}" />
													</Border>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
															Width="30"
															Content="isChk"
															Style="{StaticResource lblStyle5}" />
													</Border>

												</StackPanel>
												<Border Grid.Column="1" Style="{StaticResource bdrStyle5.1}">
													<Label
														MinWidth="30"
														Content="{Binding Checked, FallbackValue=false}"
														Style="{StaticResource lblStyle5}" />
												</Border>
											</Grid>

										</StackPanel>
									</Border>
								</Grid>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>


		</TreeView>



		<StackPanel
			Name="spTv1"
			Grid.Row="1"
			Grid.Column="3"
			VerticalAlignment="Bottom"
			Orientation="Vertical">
			<Button
				Name="btnCheckOneOne"
				Click="BtnCheckOneOne_OnClick"
				Style="{StaticResource btnStyle}">
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock Style="{StaticResource tblkStyle}" Text="Check Tv1" />
							<TextBlock Style="{StaticResource tblkStyle}" Text="[1][1]" />
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

			<Button
				Name="btnUnCheckOneOne"
				Click="BtnUnCheckOneOne_OnClick"
				Style="{StaticResource btnStyle}">
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock Style="{StaticResource tblkStyle}" Text="UnCheck Tv1" />
							<TextBlock Style="{StaticResource tblkStyle}" Text="[1][1]" />
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

		</StackPanel>

		<StackPanel
			Name="spTv2"
			Grid.Row="1"
			Grid.Column="5"
			VerticalAlignment="Bottom"
			Orientation="Vertical">
			<Button
				Name="btnCheckTwo"
				Click="BtnCheckOneOneTv2_OnClick"
				Content="Check [1][1] tv2"
				Style="{StaticResource btnStyle}">
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock Style="{StaticResource tblkStyle}" Text="Check Tv2" />
							<TextBlock Style="{StaticResource tblkStyle}" Text="[1][1]" />
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

			<Button
				Name="btnUnCheckTwo"
				Click="BtnUnCheckOneOneTv2_OnClick"
				Style="{StaticResource btnStyle}">
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock Style="{StaticResource tblkStyle}" Text="UnCheck Tv2" />
							<TextBlock Style="{StaticResource tblkStyle}" Text="[1][1]" />
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

		</StackPanel>

		<StackPanel
			Grid.Row="2"
			Grid.Column="2"
			Grid.ColumnSpan="3"
			Orientation="Vertical">
			<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

				<Button
					Name="btnCheckOne"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnCheckOne_OnClick"
					Content="Check[1]" />

				<Button
					Name="btnListTree"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnListTree_OnClick"
					Content="List Tree" />

				<Button
					Name="btnResetTree"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnResetTree_OnClick"
					Content="Reset Tree" />

				<Button
					Name="btnMakeTree"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnMakeTree_OnClick"
					Content="Make Tree" />

				<Button
					Name="btnClearScreen"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnClearScreen_OnClick"
					Content="Clear Screen" />

			</StackPanel>
			<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
				<Button
					Name="btnTest1"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnTest1_OnClick"
					Content="Test1" />


				<Button
					Name="btnDebug"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnDebug_OnClick"
					Content="Debug" />

				<Button
					Name="btnDone"
					Width="80"
					Height="30"
					MaxHeight="60"
					Margin="5"
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom"
					Click="BtnDone_OnClick"
					Content="Done" />

			</StackPanel>
		</StackPanel>

	</Grid>
</Window>
