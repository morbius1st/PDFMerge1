<Window
		x:Class="Test3.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:local="clr-namespace:Test3"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sve="clr-namespace:WpfShared.Windows.ResourceFiles.ScrollViewerEx;assembly=WpfShared"
		x:Name="mainWin"
		Title="MainWindow"
		Width="1700"
		Height="850"
		FontFamily="MS Gothic"
		mc:Ignorable="d"
		Background="#444444"
		>
	<Window.Resources>

		<Style
				x:Key="lblStyle"
				TargetType="Label"
				>
			<Setter Property="Foreground" Value="White" />
			<Setter Property="Margin" Value="0,0,3,0" />
			<Setter Property="Padding" Value="0" />
			<Style.Triggers>
				<DataTrigger
						Binding="{Binding CheckedStatus}"
						Value="True"
						>
					<Setter Property="Foreground" Value="White" />
				</DataTrigger>
				<DataTrigger
						Binding="{Binding CheckedStatus}"
						Value="False"
						>
					<Setter Property="Foreground" Value="#aaaaaa" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style
				x:Key="lblStyle5"
				TargetType="Label"
				>
			<!-- <Setter Property="Foreground" Value="White" /> -->
			<Setter Property="Margin" Value="0,0,3,0" />
			<Setter Property="Padding" Value="0,0,0,0" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Style.Triggers>
				<!-- <DataTrigger Binding="{Binding IsChecked}" Value="True"> -->
				<!-- 	<Setter Property="Foreground" Value="White" /> -->
				<!-- </DataTrigger> -->

				<DataTrigger
						Binding="{Binding Checked}"
						Value="{x:Null}"
						>
					<Setter Property="Foreground" Value="#bbbbbb" />
				</DataTrigger>
				<DataTrigger
						Binding="{Binding Checked}"
						Value="False"
						>
					<Setter Property="Foreground" Value="#999999" />
				</DataTrigger>
			</Style.Triggers>

		</Style>



		<Style
				x:Key="bdrStyle5.1"
				TargetType="Border"
				>
			<Setter Property="BorderBrush" Value="DimGray" />
			<Setter Property="BorderThickness" Value="1,0,0,0" />
			<Setter Property="Padding" Value="3,0,0,0" />
		</Style>

		<Style
				x:Key="bdrStyle5.0"
				TargetType="Border"
				BasedOn="{StaticResource bdrStyle5.1}"
				>
			<Setter Property="BorderThickness" Value="0,0,0,0" />
		</Style>

		<Style
				x:Key="bdrStyle5.2"
				TargetType="Border"
				BasedOn="{StaticResource bdrStyle5.1}"
				>
			<Setter Property="BorderThickness" Value="1,0,1,0" />
		</Style>



		<Style
				x:Key="tblkStyle"
				TargetType="TextBlock"
				>
			<Setter Property="HorizontalAlignment" Value="Center" />
		</Style>
		<Style
				x:Key="btnStyle"
				TargetType="Button"
				>

			<Setter Property="FontSize" Value="10" />
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Height" Value="25" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="Margin" Value="5" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="Width" Value="80" />
		</Style>


		<ContentControl x:Key="control1">
			<ContentControl.Content>
				<StackPanel
						Margin="3,5,0,5"
						Width="500"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Orientation="Horizontal"
						>
					<CheckBox
							Name="control1Cbx"
							LostFocus="CheckBox_LostFocus"
							Foreground="White"
							IsChecked="{Binding CheckedStatus}"
							IsThreeState="false"
							/>
					<StackPanel
							Margin="10,0,0,0"
							Width="500"
							Orientation="Vertical"
							>
						<StackPanel
								Margin="0,0,0,3"
								Orientation="Horizontal"
								>
							<Label
									Content="{Binding NodeType,
																		FallbackValue=BRANCH}"
									Margin="0,0,5,0"
									Padding="0"
									ContentStringFormat="{}{0,-7}|"
									Foreground="White"
									/>
							<Label
									Content="{Binding Name,
																		FallbackValue='Br# 0 :ParentBr# 0 :Depth 0 :Unique 0'}"
									Margin="0,0,5,0"
									Width="256"
									Padding="0"
									ContentStringFormat="{}{0,-15} "
									Foreground="White"
									/>

							<Label
									Content="| children |"
									Margin="0,0,5,0"
									Padding="0"
									ContentStringFormat="{}{0,-10} "
									Foreground="White"
									/>
							<Label
									Content="{Binding childList.Count,
																		FallbackValue='3 '}"
									Margin="0,0,5,0"
									Padding="0"
									ContentStringFormat="{}{0,2}| "
									Foreground="White"
									/>
						</StackPanel>
						<StackPanel
								Margin="0,0,0,3"
								Orientation="Horizontal"
								>
							<Label
									Content=" "
									Margin="0,0,5,0"
									Padding="0"
									ContentStringFormat="{}{0,-7}| "
									Foreground="White"
									/>
							<Label
									Content="{Binding SelectState,
																		FallbackValue='CHECKED'}"
									Margin="0,0,5,0"
									Width="78"
									Padding="0"
									ContentStringFormat="{}{0,-8}| "
									Foreground="White"
									/>

							<Label
									Content="{Binding SelectStateOriginal,
																		FallbackValue='UNSET'}"
									Margin="0,0,5,0"
									Width="78"
									Padding="0"
									ContentStringFormat="{}{0,-8}| "
									Foreground="White"
									/>
							<Label
									Content="chk count"
									Margin="0,0,5,0"
									Padding="0"
									ContentStringFormat="{}{0,-5}| "
									Foreground="White"
									/>
							<Label
									Content="{Binding CheckedCount,
																		FallbackValue='0'}"
									Margin="0,0,5,0"
									Padding="0"
									ContentStringFormat="{}{0,2} | "
									Foreground="White"
									/>
						</StackPanel>
					</StackPanel>
				</StackPanel>
			</ContentControl.Content>
		</ContentControl>

		<ControlTemplate
				x:Key="ScrollViewerControlTemplate1"
				TargetType="{x:Type ScrollViewer}"
				>
			<Grid
					x:Name="Grid"
					Background="{TemplateBinding Background}"
					>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Rectangle
						x:Name="Corner"
						Grid.Column="1"
						Grid.Row="1"
						Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
						/>
				<ScrollContentPresenter
						x:Name="PART_ScrollContentPresenter"
						Content="{TemplateBinding Content}"
						Grid.Column="0"
						Grid.Row="0"
						Margin="{TemplateBinding Padding}"
						CanContentScroll="{TemplateBinding CanContentScroll}"
						CanHorizontallyScroll="False"
						CanVerticallyScroll="False"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						/>
				<ScrollBar
						x:Name="PART_VerticalScrollBar"
						Grid.Column="1"
						Grid.Row="0"
						AutomationProperties.AutomationId="VerticalScrollBar"
						Cursor="Arrow"
						Maximum="{TemplateBinding ScrollableHeight}"
						Minimum="0"
						ViewportSize="{TemplateBinding ViewportHeight}"
						Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
						Value="{Binding VerticalOffset,
														Mode=OneWay,
														RelativeSource={RelativeSource TemplatedParent}}"
						/>
				<ScrollBar
						x:Name="PART_HorizontalScrollBar"
						Grid.Column="0"
						Grid.Row="1"
						AutomationProperties.AutomationId="HorizontalScrollBar"
						Cursor="Arrow"
						Maximum="{TemplateBinding ScrollableWidth}"
						Minimum="0"
						Orientation="Horizontal"
						ViewportSize="{TemplateBinding ViewportWidth}"
						Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
						Value="{Binding HorizontalOffset,
														Mode=OneWay,
														RelativeSource={RelativeSource TemplatedParent}}"
						/>
			</Grid>
		</ControlTemplate>

	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="100" />
			<ColumnDefinition />
			<ColumnDefinition Width="100" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="100" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="80" />
		</Grid.RowDefinitions>

		<sve:ScrollViewerExtended>

		</sve:ScrollViewerExtended>


		<TextBox
				Name="tbk1"
				Grid.Column="2"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalScrollBarVisibility="Visible"
				Text="hello&#x0a;"
				VerticalScrollBarVisibility="Visible"
				Background="Black"
				Foreground="White"
				/>

		<TextBox
				Name="tbk2"
				Grid.Column="4"
				Grid.Row="0"
				Margin="0,0,0,60"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontFamily="MS Gothic"
				HorizontalScrollBarVisibility="Visible"
				Text="hello&#x0a;"
				VerticalScrollBarVisibility="Visible"
				Background="Black"
				Foreground="White"
				/>

		<StackPanel
				Grid.Column="4"
				Grid.Row="0"
				Margin="0,5"
				Height="50"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Bottom"
				Background="Black"
				>
			<ContentControl Content="{StaticResource control1}" />
		</StackPanel>

		<!--  does not show - hidden  -->
		<Label
				Content="Tv1"
				Grid.Column="2"
				Grid.Row="1"
				Height="20"
				Padding="0,5,0,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Visibility="Collapsed"
				Foreground="White"
				/>

		<!--  does not show - hidden  -->
		<TreeView
				Name="tv1"
				Grid.Column="2"
				Grid.Row="1"
				Margin="0,20,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontFamily="MS Gothic"
				DataContext="{Binding ElementName=mainWin,
															Path=evMgr.Root}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Visibility="Collapsed"
				Background="#000000"
				Foreground="White"
				ItemsSource="{Binding childList}"
				Style="{DynamicResource TreeViewStyle1}"
				>

			<TreeView.Resources>

				<ContentControl x:Key="control1">
					<ContentControl.Content>
						<StackPanel
								Margin="3,5,0,5"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Orientation="Horizontal"
								>
							<CheckBox
									Foreground="White"
									IsChecked="{Binding CheckedStatus}"
									IsThreeState="false"
									/>
							<StackPanel
									Margin="10,0,0,0"
									Orientation="Vertical"
									>
								<StackPanel
										Margin="0,0,0,3"
										Orientation="Horizontal"
										>
									<Label
											Content="{Binding NodeType}"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-7}|"
											Foreground="White"
											/>
									<Label
											Content="{Binding Name}"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-15}| "
											Foreground="White"
											/>

									<Label
											Content="children"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-10}| "
											Foreground="White"
											/>
									<Label
											Content="{Binding childList.Count}"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,2}| "
											Foreground="White"
											/>
								</StackPanel>
								<StackPanel
										Margin="0,0,0,3"
										Orientation="Horizontal"
										>
									<Label
											Content=" "
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-7}| "
											Foreground="White"
											/>
									<Label
											Content="{Binding SelectState}"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-14}| "
											Foreground="White"
											/>

									<Label
											Content="{Binding SelectStateOriginal}"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-15}| "
											Foreground="White"
											/>
									<Label
											Content="chk count"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,-5}| "
											Foreground="White"
											/>
									<Label
											Content="{Binding CheckedCount}"
											Margin="0,0,5,0"
											Padding="0"
											ContentStringFormat="{}{0,2}| "
											Foreground="White"
											/>
								</StackPanel>
							</StackPanel>
						</StackPanel>

					</ContentControl.Content>
				</ContentControl>

				<SolidColorBrush x:Key="ListBorder" Color="#828790" />
				<Style
						x:Key="TreeViewStyle1"
						TargetType="{x:Type TreeView}"
						>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
					<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="Padding" Value="1" />
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
					<Setter Property="ScrollViewer.PanningMode" Value="Both" />
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
					<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeView}">
								<Border
										x:Name="Bd"
										SnapsToDevicePixels="true"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										>
									<ScrollViewer
											x:Name="_tv_scrollviewer_"
											Padding="{TemplateBinding Padding}"
											CanContentScroll="false"
											Focusable="false"
											HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											Background="{TemplateBinding Background}"
											>
										<StackPanel Orientation="Vertical">
											<ContentControl Content="{StaticResource control1}" />
											<ItemsPresenter />
										</StackPanel>
									</ScrollViewer>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
									</Trigger>
									<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
										<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>

			</TreeView.Resources>
			<TreeView.ItemTemplate>

				<HierarchicalDataTemplate ItemsSource="{Binding childList}">

					<ContentControl
							x:Name="PART_ContentControl"
							Content="{Binding}"
							Margin="0"
							Padding="0"
							Foreground="White"
							>

						<ContentControl.ContentTemplate>
							<DataTemplate>

								<StackPanel
										Margin="3,5,0,5"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										Orientation="Horizontal"
										>

									<CheckBox
											Foreground="White"
											IsChecked="{Binding CheckedStatus}"
											IsThreeState="false"
											/>
									<StackPanel
											Margin="10,0,0,0"
											Orientation="Vertical"
											>
										<StackPanel
												Margin="0,0,0,3"
												Orientation="Horizontal"
												>
											<Label
													Content="{Binding NodeType}"
													ContentStringFormat="{}{0,-7}|"
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="{Binding Name}"
													ContentStringFormat="{}{0,-15}| "
													Style="{StaticResource lblStyle}"
													/>

											<Label
													Content="children"
													ContentStringFormat="{}{0,10}| "
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="{Binding childList.Count}"
													ContentStringFormat="{}{0,2}| "
													Style="{StaticResource lblStyle}"
													/>
										</StackPanel>
										<StackPanel
												Margin="0,0,0,3"
												Orientation="Horizontal"
												>
											<Label
													Content=" "
													Margin="0,0,5,0"
													Padding="0"
													ContentStringFormat="{}{0,-7}| "
													Foreground="White"
													/>
											<Label
													Content="{Binding SelectState}"
													Margin="0,0,5,0"
													Padding="0"
													ContentStringFormat="{}{0,-14}| "
													Foreground="White"
													/>

											<Label
													Content="{Binding SelectStateOriginal}"
													Margin="0,0,5,0"
													Padding="0"
													ContentStringFormat="{}{0,-15}| "
													Foreground="White"
													/>
											<Label
													Content="chk count"
													Margin="0,0,5,0"
													Padding="0"
													ContentStringFormat="{}{0,5}| "
													Foreground="White"
													/>
											<Label
													Content="{Binding CheckedCount}"
													Margin="0,0,5,0"
													Padding="0"
													ContentStringFormat="{}{0,2}| "
													Foreground="White"
													/>
										</StackPanel>
									</StackPanel>
								</StackPanel>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>

		</TreeView>


		<Label
				Content="Tv2"
				Grid.Column="4"
				Grid.Row="1"
				Height="20"
				Padding="0,5,0,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Foreground="White"
				/>

		<TreeView
				Name="tv2"
				Grid.Column="4"
				Grid.Row="1"
				Margin="0,20,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontFamily="MS Gothic"
				DataContext="{Binding ElementName=mainWin,
															Path=evMgr.First}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Background="#000000"
				Foreground="White"
				ItemsSource="{Binding childList}"
				Style="{DynamicResource TreeViewStyle1}"
				>

			<TreeView.Resources>

				<SolidColorBrush x:Key="ListBorder" Color="#828790" />

				<Style
						x:Key="TreeViewStyle1"
						TargetType="{x:Type TreeView}"
						>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
					<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="Padding" Value="1" />
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
					<Setter Property="ScrollViewer.PanningMode" Value="Both" />
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
					<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeView}">
								<Border
										x:Name="Bd"
										SnapsToDevicePixels="true"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										>
									<ScrollViewer
											x:Name="_tv_scrollviewer_"
											Padding="{TemplateBinding Padding}"
											CanContentScroll="false"
											Focusable="false"
											HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											Background="{TemplateBinding Background}"
											Template="{DynamicResource ScrollViewerControlTemplate1}"
											>
										<StackPanel Orientation="Vertical">
											<ContentControl Content="{StaticResource control1}" />
											<ItemsPresenter />
										</StackPanel>
									</ScrollViewer>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
									</Trigger>
									<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
										<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>

				<!--  change background highlight of selected, unfocused text  -->
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#424242" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#222222" />

			</TreeView.Resources>

			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding childList}">
					<ContentControl
							x:Name="PART_ContentControl"
							Content="{Binding}"
							Margin="0"
							Padding="0"
							Foreground="White"
							>
						<ContentControl.ContentTemplate>
							<DataTemplate>
								<StackPanel
										Name="Sp"
										Margin="3,5,0,5"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										Orientation="Horizontal"
										>

									<CheckBox
											Name="item_cbx"
											LostFocus="CheckBox_LostFocus"
											Foreground="White"
											IsChecked="{Binding CheckedStatus}"
											IsThreeState="false"
											/>
									<StackPanel
											Margin="10,0,0,0"
											Orientation="Vertical"
											>
										<StackPanel
												Margin="0,0,0,3"
												Orientation="Horizontal"
												>
											<Label
													Content="{Binding NodeType}"
													ContentStringFormat="{}{0,-7}|"
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="{Binding Name}"
													ContentStringFormat="{}{0,-15}| "
													Style="{StaticResource lblStyle}"
													/>

											<Label
													Content="children"
													ContentStringFormat="{}{0,10}| "
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="{Binding childList.Count}"
													ContentStringFormat="{}{0,2}| "
													Style="{StaticResource lblStyle}"
													/>
										</StackPanel>
										<StackPanel
												Margin="0,0,0,3"
												Orientation="Horizontal"
												>
											<Label
													Content=" "
													ContentStringFormat="{}{0,-7}| "
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="{Binding SelectState}"
													ContentStringFormat="{}{0,-14}| "
													Style="{StaticResource lblStyle}"
													/>

											<Label
													Content="{Binding SelectStateOriginal}"
													ContentStringFormat="{}{0,-15}| "
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="chk count"
													ContentStringFormat="{}{0,5}| "
													Style="{StaticResource lblStyle}"
													/>
											<Label
													Content="{Binding CheckedCount}"
													ContentStringFormat="{}{0,2}| "
													Style="{StaticResource lblStyle}"
													/>
										</StackPanel>
									</StackPanel>
								</StackPanel>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>

		<Label
				Content="Tv5"
				Grid.Column="2"
				Grid.Row="1"
				Height="20"
				Padding="0,5,0,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Foreground="White"
				/>

		<TreeView
				Name="tv5"
				Grid.Column="2"
				Grid.Row="1"
				Margin="0,20,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				FontFamily="MS Gothic"
				DataContext="{Binding ElementName=mainWin,
															Path=evMgr.Origin}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Background="#222222"
				Foreground="White"
				ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
				ItemsSource="{Binding Children}"
				>
			<TreeView.Resources>

				<Style
						x:Key="{x:Type Label}"
						TargetType="{x:Type Label}"
						>
					<Setter Property="Foreground" Value="White" />
				</Style>

				<!--  change background highlight of selected, unfocused text  -->
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#424242" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#222222" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="Red" />-->


				<Style x:Key="TreeViewItemFocusVisual">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
				<PathGeometry
						x:Key="TreeArrow"
						Figures="M0,0 L0,7 L7,0 z"
						/>
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />

				<Style
						x:Key="ExpandCollapseToggleStyle"
						TargetType="{x:Type ToggleButton}"
						>
					<Setter Property="Focusable" Value="False" />
					<Setter Property="Height" Value="16" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ToggleButton}">
								<Border
										Width="17"
										Height="17"
										Padding="5"
										Background="Transparent"
										>
									<Path
											x:Name="ExpandPath"
											Data="{StaticResource TreeArrow}"
											Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
											Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
											>
										<Path.RenderTransform>
											<RotateTransform Angle="135" CenterX="3" CenterY="3" />
										</Path.RenderTransform>
									</Path>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="RenderTransform">
											<Setter.Value>
												<RotateTransform Angle="180" CenterX="3" CenterY="3" />
											</Setter.Value>
										</Setter>
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True" />
											<Condition Property="IsChecked" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Width" Value="16" />
				</Style>

				<Style
						x:Key="TreeViewItemStyle1"
						TargetType="{x:Type TreeViewItem}"
						>
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Left, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					<Setter Property="Padding" Value="1,0,0,0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<Grid
										x:Name="Gd"
										Margin="3,0,0,0"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" MinWidth="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<!--  remove the below from the above to allow full width items  -->
									<!-- <ColumnDefinition Width="Auto" /> -->
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<ToggleButton
											x:Name="Expander"
											ClickMode="Press"
											IsChecked="{Binding IsExpanded,
																					RelativeSource={RelativeSource TemplatedParent}}"
											Style="{StaticResource ExpandCollapseToggleStyle}"
											/>
									<Border
											x:Name="Bd"
											Grid.Column="1"
											Grid.Row="0"
											Padding="{TemplateBinding Padding}"
											SnapsToDevicePixels="true"
											Background="{TemplateBinding Background}"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											>

										<ContentPresenter
												x:Name="PART_Header"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												ContentSource="Header"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Border>
									<ItemsPresenter
											x:Name="ItemsHost"
											Grid.Column="1"
											Grid.Row="1"
											Grid.ColumnSpan="1"
											/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsExpanded" Value="false">
										<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
									</Trigger>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="true" />
											<Condition Property="IsSelectionActive" Value="false" />
										</MultiTrigger.Conditions>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
									</Trigger>
									<DataTrigger
											Binding="{Binding Checked}"
											Value="{x:Null}"
											>
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
									<DataTrigger
											Binding="{Binding Checked}"
											Value="false"
											>
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Top, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>


			</TreeView.Resources>


			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}">
					<ContentControl
							x:Name="PART_ContentControl"
							Content="{Binding}"
							Padding="0"
							Foreground="White"
							>
						<ContentControl.ContentTemplate>
							<DataTemplate DataType="{x:Type local:TreeNode5}">
								<Grid
										Name="Sp"
										Margin="3,5,0,5"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Center"
										>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<StackPanel
											Grid.Column="0"
											Margin="-2,0,0,0"
											Width="76"
											Orientation="Horizontal"
											>
										<CheckBox
												Name="item_cbx"
												Margin="3,0,8,0"
												LostFocus="CheckBox_LostFocus5"
												Foreground="White"
												IsChecked="{Binding Checked}"
												IsThreeState="False"
												/>
										<Label
												Content="{Binding NodeType,
																					FallbackValue=BRANCH}"
												Style="{StaticResource lblStyle5}"
												/>
									</StackPanel>

									<StackPanel
											x:Name="filler"
											Grid.Column="1"
											MinWidth="15"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											>
										<Border
												Margin="0,8,-4,0"
												VerticalAlignment="Stretch"
												BorderThickness="0,.5,0,0"
												BorderBrush="White"
												/>

									</StackPanel>

									<Border
											Grid.Column="2"
											Margin="0,0,3,0"
											BorderThickness="1,0,1,0"
											BorderBrush="White"
											>
										<StackPanel
												Margin="3,0,0,0"
												HorizontalAlignment="Right"
												Orientation="Vertical"
												>

											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border
														Grid.Column="0"
														Style="{StaticResource bdrStyle5.0}"
														>
													<Label
															Content="Name"
															Width="40"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>

												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding Name,
																								FallbackValue='Name :: name :: name'}"
															MinWidth="130"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>
											</Grid>


											<Grid
													Margin="0,0,3,3"
													HorizontalAlignment="Stretch"
													>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border
														Grid.Column="0"
														Style="{StaticResource bdrStyle5.0}"
														>
													<Label
															Content="Parent"
															Width="40"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>
												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding Parent.Name,
																								FallbackValue='Name :: name :: name'}"
															MinWidth="130"
															HorizontalAlignment="Stretch"
															HorizontalContentAlignment="Stretch"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel
														Grid.Column="0"
														Orientation="Horizontal"
														>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
																Content="child#"
																Width="40"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
																Content="{Binding ChildCount,
																									FallbackValue=0}"
																Width="23"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
																Content="sel child"
																Width="50"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

												</StackPanel>

												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding CheckedChildrenCount,
																								FallbackValue=0}"
															Width="21"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel
														Grid.Column="0"
														Orientation="Horizontal"
														>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
																Content="{Binding CheckState,
																									FallbackValue=CHECKED}"
																Width="70"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.2}">
														<Label
																Content="{Binding TriState,
																									FallbackValue=UNSET}"
																Width="70"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
																Content="isChk"
																Width="30"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

												</StackPanel>
												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding Checked,
																								FallbackValue=false}"
															MinWidth="30"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>
											</Grid>

										</StackPanel>
									</Border>
								</Grid>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>


		</TreeView>


		<Label
				Content="Tv6"
				Grid.Column="0"
				Grid.Row="1"
				Height="20"
				Padding="0,5,0,0"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Foreground="White"
				/>

		<TreeView
				Name="tv6"
				Grid.Column="0"
				Grid.Row="1"
				Margin="0,20,0,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalContentAlignment="Stretch"
				FontFamily="MS Gothic"
				DataContext="{Binding ElementName=mainWin,
															Path=evMgr.Origin}"
				ScrollViewer.HorizontalScrollBarVisibility="Visible"
				ScrollViewer.VerticalScrollBarVisibility="Visible"
				Background="#111111"
				Foreground="White"
				ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
				ItemsSource="{Binding Children}"
				>
			<TreeView.Resources>

				<Style
						x:Key="{x:Type Label}"
						TargetType="{x:Type Label}"
						>
					<Setter Property="Foreground" Value="White" />
				</Style>

				<!--  change background highlight of selected, unfocused text  -->
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#424242" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#222222" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="Red" />
				<SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="Red" />-->


				<Style x:Key="TreeViewItemFocusVisual">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
				<PathGeometry
						x:Key="TreeArrow"
						Figures="M0,0 L0,7 L7,0 z"
						/>
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
				<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />

				<Style
						x:Key="ExpandCollapseToggleStyle"
						TargetType="{x:Type ToggleButton}"
						>
					<Setter Property="Focusable" Value="False" />
					<Setter Property="Height" Value="16" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ToggleButton}">
								<Border
										Width="17"
										Height="17"
										Padding="5"
										Background="Transparent"
										>
									<Path
											x:Name="ExpandPath"
											Data="{StaticResource TreeArrow}"
											Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
											Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
											>
										<Path.RenderTransform>
											<RotateTransform Angle="135" CenterX="3" CenterY="3" />
										</Path.RenderTransform>
									</Path>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="RenderTransform">
											<Setter.Value>
												<RotateTransform Angle="180" CenterX="3" CenterY="3" />
											</Setter.Value>
										</Setter>
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True" />
											<Condition Property="IsChecked" Value="True" />
										</MultiTrigger.Conditions>
										<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
										<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Width" Value="16" />
				</Style>

				<Style
						x:Key="TreeViewItemStyle1"
						TargetType="{x:Type TreeViewItem}"
						>
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Left, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
					<Setter Property="Padding" Value="1,0,0,0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<Grid
										x:Name="Gd"
										Margin="3,0,0,0"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" MinWidth="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<!--  remove the below from the above to allow full width items  -->
									<!-- <ColumnDefinition Width="Auto" /> -->
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<ToggleButton
											x:Name="Expander"
											ClickMode="Press"
											IsChecked="{Binding IsExpanded,
																					RelativeSource={RelativeSource TemplatedParent}}"
											Style="{StaticResource ExpandCollapseToggleStyle}"
											/>
									<Border
											x:Name="Bd"
											Grid.Column="1"
											Grid.Row="0"
											Padding="{TemplateBinding Padding}"
											SnapsToDevicePixels="true"
											Background="{TemplateBinding Background}"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											>

										<ContentPresenter
												x:Name="PART_Header"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												ContentSource="Header"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
									</Border>
									<ItemsPresenter
											x:Name="ItemsHost"
											Grid.Column="1"
											Grid.Row="1"
											Grid.ColumnSpan="1"
											/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsExpanded" Value="false">
										<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
									</Trigger>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="true" />
											<Condition Property="IsSelectionActive" Value="false" />
										</MultiTrigger.Conditions>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
										<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
									</Trigger>
									<DataTrigger
											Binding="{Binding Checked}"
											Value="{x:Null}"
											>
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
									<DataTrigger
											Binding="{Binding Checked}"
											Value="false"
											>
										<Setter TargetName="Bd" Property="Background" Value="#303030" />
									</DataTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Top, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>


			</TreeView.Resources>


			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}">
					<ContentControl
							x:Name="PART_ContentControl"
							Content="{Binding}"
							Padding="0"
							Foreground="White"
							>
						<ContentControl.ContentTemplate>
							<DataTemplate DataType="{x:Type local:TreeNode5}">
								<Grid
										Name="Sp"
										Margin="3,5,0,5"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Center"
										>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<StackPanel
											Grid.Column="0"
											Margin="-2,0,0,0"
											Width="76"
											Orientation="Horizontal"
											>
										<CheckBox
												Name="item_cbx"
												Margin="3,0,8,0"
												LostFocus="CheckBox_LostFocus5"
												Foreground="White"
												IsChecked="{Binding Checked}"
												IsThreeState="False"
												/>
										<Label
												Content="{Binding NodeType,
																					FallbackValue=BRANCH}"
												Style="{StaticResource lblStyle5}"
												/>
									</StackPanel>

									<StackPanel
											x:Name="filler"
											Grid.Column="1"
											MinWidth="15"
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											>
										<Border
												Margin="0,8,-4,0"
												VerticalAlignment="Stretch"
												BorderThickness="0,.5,0,0"
												BorderBrush="White"
												/>

									</StackPanel>

									<Border
											Grid.Column="2"
											Margin="0,0,3,0"
											BorderThickness="1,0,1,0"
											BorderBrush="White"
											>
										<StackPanel
												Margin="3,0,0,0"
												HorizontalAlignment="Right"
												Orientation="Vertical"
												>

											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border
														Grid.Column="0"
														Style="{StaticResource bdrStyle5.0}"
														>
													<Label
															Content="Name"
															Width="40"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>

												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding Name,
																								FallbackValue='Name :: name :: name'}"
															MinWidth="130"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>
											</Grid>


											<Grid
													Margin="0,0,3,3"
													HorizontalAlignment="Stretch"
													>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<Border
														Grid.Column="0"
														Style="{StaticResource bdrStyle5.0}"
														>
													<Label
															Content="Parent"
															Width="40"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>
												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding Parent.Name,
																								FallbackValue='Name :: name :: name'}"
															MinWidth="130"
															HorizontalAlignment="Stretch"
															HorizontalContentAlignment="Stretch"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel
														Grid.Column="0"
														Orientation="Horizontal"
														>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
																Content="child#"
																Width="40"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
																Content="{Binding ChildCount,
																									FallbackValue=0}"
																Width="23"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.1}">
														<Label
																Content="sel child"
																Width="50"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

												</StackPanel>

												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding CheckedChildrenCount,
																								FallbackValue=0}"
															Width="21"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>

											</Grid>


											<Grid Margin="0,0,3,3">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<StackPanel
														Grid.Column="0"
														Orientation="Horizontal"
														>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
																Content="{Binding CheckState,
																									FallbackValue=CHECKED}"
																Width="70"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.2}">
														<Label
																Content="{Binding TriState,
																									FallbackValue=UNSET}"
																Width="70"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

													<Border Style="{StaticResource bdrStyle5.0}">
														<Label
																Content="isChk"
																Width="30"
																Style="{StaticResource lblStyle5}"
																/>
													</Border>

												</StackPanel>
												<Border
														Grid.Column="1"
														Style="{StaticResource bdrStyle5.1}"
														>
													<Label
															Content="{Binding Checked,
																								FallbackValue=false}"
															MinWidth="30"
															Style="{StaticResource lblStyle5}"
															/>
												</Border>
											</Grid>

										</StackPanel>
									</Border>
								</Grid>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>


		</TreeView>



		<StackPanel
				Name="spTv1"
				Grid.Column="3"
				Grid.Row="1"
				VerticalAlignment="Bottom"
				Orientation="Vertical"
				>
			<Button
					Name="btnCheckOneOne"
					Click="BtnCheckOneOne_OnClick"
					Style="{StaticResource btnStyle}"
					>
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock
									Text="Check Tv1"
									Style="{StaticResource tblkStyle}"
									/>
							<TextBlock
									Text="[1][1]"
									Style="{StaticResource tblkStyle}"
									/>
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

			<Button
					Name="btnUnCheckOneOne"
					Click="BtnUnCheckOneOne_OnClick"
					Style="{StaticResource btnStyle}"
					>
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock
									Text="UnCheck Tv1"
									Style="{StaticResource tblkStyle}"
									/>
							<TextBlock
									Text="[1][1]"
									Style="{StaticResource tblkStyle}"
									/>
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

		</StackPanel>

		<StackPanel
				Name="spTv2"
				Grid.Column="5"
				Grid.Row="1"
				VerticalAlignment="Bottom"
				Orientation="Vertical"
				>
			<Button
					Name="btnCheckTwo"
					Content="Check [1][1] tv2"
					Click="BtnCheckOneOneTv2_OnClick"
					Style="{StaticResource btnStyle}"
					>
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock
									Text="Check Tv2"
									Style="{StaticResource tblkStyle}"
									/>
							<TextBlock
									Text="[1][1]"
									Style="{StaticResource tblkStyle}"
									/>
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

			<Button
					Name="btnUnCheckTwo"
					Click="BtnUnCheckOneOneTv2_OnClick"
					Style="{StaticResource btnStyle}"
					>
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<TextBlock
									Text="UnCheck Tv2"
									Style="{StaticResource tblkStyle}"
									/>
							<TextBlock
									Text="[1][1]"
									Style="{StaticResource tblkStyle}"
									/>
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

		</StackPanel>

		<StackPanel
				Grid.Column="2"
				Grid.Row="2"
				Grid.ColumnSpan="3"
				Orientation="Vertical"
				>
			<StackPanel
					HorizontalAlignment="Right"
					Orientation="Horizontal"
					>

				<Button
						Name="btnCheckOne"
						Content="Check[1]"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnCheckOne_OnClick"
						/>

				<Button
						Name="btnListTree"
						Content="List Tree"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnListTree_OnClick"
						/>

				<Button
						Name="btnResetTree"
						Content="Reset Tree"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnResetTree_OnClick"
						/>

				<Button
						Name="btnMakeTree"
						Content="Make Tree"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnMakeTree_OnClick"
						/>

				<Button
						Name="btnClearScreen"
						Content="Clear Screen"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnClearScreen_OnClick"
						/>

			</StackPanel>
			<StackPanel
					HorizontalAlignment="Right"
					Orientation="Horizontal"
					>
				<Button
						Name="btnTest1"
						Content="Test1"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnTest1_OnClick"
						/>


				<Button
						Name="btnDebug"
						Content="Debug"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnDebug_OnClick"
						/>

				<Button
						Name="btnDone"
						Content="Done"
						Margin="5"
						Width="80"
						Height="30"
						MaxHeight="60"
						HorizontalAlignment="Right"
						VerticalAlignment="Bottom"
						Click="BtnDone_OnClick"
						/>

			</StackPanel>
		</StackPanel>

	</Grid>
</Window>
